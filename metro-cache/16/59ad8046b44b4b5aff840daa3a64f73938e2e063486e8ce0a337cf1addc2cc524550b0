{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"shortid","data":{"isAsync":false}},{"name":"./BaseRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = StackRouter;\n  exports.StackActions = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _shortid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"shortid\"));\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var StackActions = {\n    replace: function replace(name, params) {\n      return {\n        type: 'REPLACE',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    push: function push(name, params) {\n      return {\n        type: 'PUSH',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    pop: function pop() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return {\n        type: 'POP',\n        payload: {\n          count: count\n        }\n      };\n    },\n    popToTop: function popToTop() {\n      return {\n        type: 'POP_TO_TOP'\n      };\n    }\n  };\n  exports.StackActions = StackActions;\n\n  function StackRouter(options) {\n    var router = _objectSpread({}, _BaseRouter.default, {\n      type: 'stack',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n            routeParamList = _ref.routeParamList;\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _shortid.default)(),\n          index: 0,\n          routeNames: routeNames,\n          routes: [{\n            key: initialRouteName + \"-\" + (0, _shortid.default)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          }]\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        }).map(function (route) {\n          return _objectSpread({}, route, {\n            key: route.key || route.name + \"-\" + (0, _shortid.default)(),\n            params: routeParamList[route.name] !== undefined ? _objectSpread({}, routeParamList[route.name], {}, route.params) : route.params\n          });\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _shortid.default)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _shortid.default)(),\n          index: routes.length - 1,\n          routeNames: routeNames,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _shortid.default)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return _objectSpread({}, state, {\n          routeNames: routeNames,\n          routes: routes,\n          index: Math.min(state.index, routes.length - 1)\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return _objectSpread({}, state, {\n          index: index,\n          routes: state.routes.slice(0, index + 1)\n        });\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        var routeParamList = options.routeParamList;\n\n        switch (action.type) {\n          case 'REPLACE':\n            {\n              var index = action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (index === -1) {\n                return null;\n              }\n\n              var _action$payload = action.payload,\n                  name = _action$payload.name,\n                  key = _action$payload.key,\n                  params = _action$payload.params;\n\n              if (!state.routeNames.includes(name)) {\n                return null;\n              }\n\n              return _objectSpread({}, state, {\n                routes: state.routes.map(function (route, i) {\n                  return i === index ? {\n                    key: key !== undefined ? key : name + \"-\" + (0, _shortid.default)(),\n                    name: name,\n                    params: routeParamList[name] !== undefined ? _objectSpread({}, routeParamList[name], {}, params) : params\n                  } : route;\n                })\n              });\n            }\n\n          case 'PUSH':\n            if (state.routeNames.includes(action.payload.name)) {\n              return _objectSpread({}, state, {\n                index: state.index + 1,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: action.payload.key === undefined ? action.payload.name + \"-\" + (0, _shortid.default)() : action.payload.key,\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread({}, routeParamList[action.payload.name], {}, action.payload.params) : action.payload.params\n                }])\n              });\n            }\n\n            return null;\n\n          case 'POP':\n            {\n              var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (_index > 0) {\n                var _count = Math.max(_index - action.payload.count + 1, 1);\n\n                var routes = state.routes.slice(0, _count).concat(state.routes.slice(_index + 1));\n                return _objectSpread({}, state, {\n                  index: routes.length - 1,\n                  routes: routes\n                });\n              }\n\n              return null;\n            }\n\n          case 'POP_TO_TOP':\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: state.routes.length - 1\n              }\n            }, options);\n\n          case 'NAVIGATE':\n            if (action.payload.key || action.payload.name && state.routeNames.includes(action.payload.name)) {\n              var _index2 = -1;\n\n              if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n                _index2 = state.index;\n              } else {\n                for (var i = state.routes.length - 1; i >= 0; i--) {\n                  if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                    _index2 = i;\n                    break;\n                  }\n                }\n              }\n\n              if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n                return null;\n              }\n\n              if (_index2 === -1 && action.payload.name !== undefined) {\n                return router.getStateForAction(state, {\n                  type: 'PUSH',\n                  payload: {\n                    key: action.payload.key,\n                    name: action.payload.name,\n                    params: action.payload.params\n                  }\n                }, options);\n              }\n\n              return _objectSpread({}, state, {\n                index: _index2,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [action.payload.params !== undefined ? _objectSpread({}, state.routes[_index2], {\n                  params: _objectSpread({}, state.routes[_index2].params, {}, action.payload.params)\n                }) : state.routes[_index2]])\n              });\n            }\n\n            return null;\n\n          case 'GO_BACK':\n            if (state.index > 0) {\n              return router.getStateForAction(state, {\n                type: 'POP',\n                payload: {\n                  count: 1\n                },\n                target: action.target,\n                source: action.source\n              }, options);\n            }\n\n            return null;\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      actionCreators: StackActions\n    });\n\n    return router;\n  }\n});","lineCount":288,"map":[[14,0,1,0],[16,0,2,0],[22,0,82,7],[22,6,82,13,"StackActions"],[22,18,82,25],[22,21,82,28],[23,0,83,2,"replace"],[23,4,83,2,"replace"],[23,11,82,28],[23,30,83,10,"name"],[23,34,82,28],[23,36,83,24,"params"],[23,42,82,28],[23,44,83,58],[24,0,84,4],[24,13,84,11],[25,0,84,13,"type"],[25,8,84,13,"type"],[25,12,84,17],[25,14,84,19],[25,23,84,11],[26,0,84,30,"payload"],[26,8,84,30,"payload"],[26,15,84,37],[26,17,84,39],[27,0,84,41,"name"],[27,10,84,41,"name"],[27,14,84,45],[27,16,84,41,"name"],[27,20,84,39],[28,0,84,47,"params"],[28,10,84,47,"params"],[28,16,84,53],[28,18,84,47,"params"],[29,0,84,39],[30,0,84,11],[30,7,84,4],[31,0,85,3],[31,5,82,28],[32,0,86,2,"push"],[32,4,86,2,"push"],[32,8,82,28],[32,24,86,7,"name"],[32,28,82,28],[32,30,86,21,"params"],[32,36,82,28],[32,38,86,55],[33,0,87,4],[33,13,87,11],[34,0,87,13,"type"],[34,8,87,13,"type"],[34,12,87,17],[34,14,87,19],[34,20,87,11],[35,0,87,27,"payload"],[35,8,87,27,"payload"],[35,15,87,34],[35,17,87,36],[36,0,87,38,"name"],[36,10,87,38,"name"],[36,14,87,42],[36,16,87,38,"name"],[36,20,87,36],[37,0,87,44,"params"],[37,10,87,44,"params"],[37,16,87,50],[37,18,87,44,"params"],[38,0,87,36],[39,0,87,11],[39,7,87,4],[40,0,88,3],[40,5,82,28],[41,0,89,2,"pop"],[41,4,89,2,"pop"],[41,7,82,28],[41,24,89,42],[42,0,89,42],[42,10,89,6,"count"],[42,15,89,42],[42,86,89,22],[42,87,89,42],[43,0,90,4],[43,13,90,11],[44,0,90,13,"type"],[44,8,90,13,"type"],[44,12,90,17],[44,14,90,19],[44,19,90,11],[45,0,90,26,"payload"],[45,8,90,26,"payload"],[45,15,90,33],[45,17,90,35],[46,0,90,37,"count"],[46,10,90,37,"count"],[46,15,90,42],[46,17,90,37,"count"],[47,0,90,35],[48,0,90,11],[48,7,90,4],[49,0,91,3],[49,5,82,28],[50,0,92,2,"popToTop"],[50,4,92,2,"popToTop"],[50,12,82,28],[50,34,92,30],[51,0,93,4],[51,13,93,11],[52,0,93,13,"type"],[52,8,93,13,"type"],[52,12,93,17],[52,14,93,19],[53,0,93,11],[53,7,93,4],[54,0,94,3],[55,0,82,28],[55,3,82,7],[58,0,97,15],[58,11,97,24,"StackRouter"],[58,22,97,15],[58,23,97,36,"options"],[58,30,97,15],[58,32,97,65],[59,0,98,2],[59,8,98,8,"router"],[59,14,101,3],[59,35,102,7,"BaseRouter"],[59,54,101,3],[60,0,104,4,"type"],[60,6,104,4,"type"],[60,10,104,8],[60,12,104,10],[60,19,101,3],[61,0,106,4,"getInitialState"],[61,6,106,4,"getInitialState"],[61,21,101,3],[61,54,106,52],[62,0,106,52],[62,12,106,22,"routeNames"],[62,22,106,52],[62,30,106,22,"routeNames"],[62,40,106,52],[63,0,106,52],[63,12,106,34,"routeParamList"],[63,26,106,52],[63,34,106,34,"routeParamList"],[63,48,106,52],[64,0,107,6],[64,12,107,12,"initialRouteName"],[64,28,107,28],[64,31,108,8,"options"],[64,38,108,15],[64,39,108,16,"initialRouteName"],[64,55,108,8],[64,60,108,37,"undefined"],[64,69,108,8],[64,73,109,8,"routeNames"],[64,83,109,18],[64,84,109,19,"includes"],[64,92,109,8],[64,93,109,28,"options"],[64,100,109,35],[64,101,109,36,"initialRouteName"],[64,117,109,8],[64,118,108,8],[64,121,110,12,"options"],[64,128,110,19],[64,129,110,20,"initialRouteName"],[64,145,108,8],[64,148,111,12,"routeNames"],[64,158,111,22],[64,159,111,23],[64,160,111,22],[64,161,107,6],[65,0,113,6],[65,15,113,13],[66,0,114,8,"stale"],[66,10,114,8,"stale"],[66,15,114,13],[66,17,114,15],[66,22,113,13],[67,0,115,8,"type"],[67,10,115,8,"type"],[67,14,115,12],[67,16,115,14],[67,23,113,13],[68,0,116,8,"key"],[68,10,116,8,"key"],[68,13,116,11],[68,26,116,22],[68,49,113,13],[69,0,117,8,"index"],[69,10,117,8,"index"],[69,15,117,13],[69,17,117,15],[69,18,113,13],[70,0,118,8,"routeNames"],[70,10,118,8,"routeNames"],[70,20,118,18],[70,22,118,8,"routeNames"],[70,32,113,13],[71,0,119,8,"routes"],[71,10,119,8,"routes"],[71,16,119,14],[71,18,119,16],[71,19,120,10],[72,0,121,12,"key"],[72,12,121,12,"key"],[72,15,121,15],[72,17,121,20,"initialRouteName"],[72,33,121,15],[72,42,121,40],[72,65,120,10],[73,0,122,12,"name"],[73,12,122,12,"name"],[73,16,122,16],[73,18,122,18,"initialRouteName"],[73,34,120,10],[74,0,123,12,"params"],[74,12,123,12,"params"],[74,18,123,18],[74,20,123,20,"routeParamList"],[74,34,123,34],[74,35,123,35,"initialRouteName"],[74,51,123,34],[75,0,120,10],[75,11,119,16],[76,0,113,13],[76,9,113,6],[77,0,127,5],[77,7,101,3],[78,0,129,4,"getRehydratedState"],[78,6,129,4,"getRehydratedState"],[78,24,101,3],[78,54,129,23,"partialState"],[78,66,101,3],[78,75,129,69],[79,0,129,69],[79,12,129,39,"routeNames"],[79,22,129,69],[79,31,129,39,"routeNames"],[79,41,129,69],[80,0,129,69],[80,12,129,51,"routeParamList"],[80,26,129,69],[80,35,129,51,"routeParamList"],[80,49,129,69],[81,0,130,6],[81,12,130,10,"state"],[81,17,130,15],[81,20,130,18,"partialState"],[81,32,130,6],[83,0,132,6],[83,12,132,10,"state"],[83,17,132,15],[83,18,132,16,"stale"],[83,23,132,10],[83,28,132,26],[83,33,132,6],[83,35,132,33],[84,0,133,8],[84,17,133,15,"state"],[84,22,133,8],[85,0,134,7],[87,0,136,6],[87,12,136,12,"routes"],[87,18,136,18],[87,21,136,21,"state"],[87,26,136,26],[87,27,136,27,"routes"],[87,33,136,21],[87,34,137,9,"filter"],[87,40,136,21],[87,41,137,16],[87,51,137,16,"route"],[87,56,137,21],[88,0,137,21],[88,17,137,25,"routeNames"],[88,27,137,35],[88,28,137,36,"includes"],[88,36,137,25],[88,37,137,45,"route"],[88,42,137,50],[88,43,137,51,"name"],[88,47,137,25],[88,48,137,21],[89,0,137,21],[89,9,136,21],[89,11,138,9,"map"],[89,14,136,21],[89,15,139,10],[89,25,139,10,"route"],[89,30,139,15],[90,0,139,15],[90,35,141,17,"route"],[90,40,139,15],[91,0,142,14,"key"],[91,12,142,14,"key"],[91,15,142,17],[91,17,142,19,"route"],[91,22,142,24],[91,23,142,25,"key"],[91,26,142,19],[91,30,142,35,"route"],[91,35,142,40],[91,36,142,41,"name"],[91,40,142,19],[91,49,142,49],[91,72,139,15],[92,0,143,14,"params"],[92,12,143,14,"params"],[92,18,143,20],[92,20,144,16,"routeParamList"],[92,34,144,30],[92,35,144,31,"route"],[92,40,144,36],[92,41,144,37,"name"],[92,45,144,30],[92,46,144,16],[92,51,144,47,"undefined"],[92,60,144,16],[92,81,146,25,"routeParamList"],[92,95,146,39],[92,96,146,40,"route"],[92,101,146,45],[92,102,146,46,"name"],[92,106,146,39],[92,107,144,16],[92,113,147,25,"route"],[92,118,147,30],[92,119,147,31,"params"],[92,125,144,16],[92,129,149,20,"route"],[92,134,149,25],[92,135,149,26,"params"],[93,0,139,15],[94,0,139,15],[94,9,136,21],[94,10,136,6],[96,0,153,6],[96,12,153,10,"routes"],[96,18,153,16],[96,19,153,17,"length"],[96,25,153,10],[96,30,153,28],[96,31,153,6],[96,33,153,31],[97,0,154,8],[97,14,154,14,"initialRouteName"],[97,30,154,30],[97,33,155,10,"options"],[97,40,155,17],[97,41,155,18,"initialRouteName"],[97,57,155,10],[97,62,155,39,"undefined"],[97,71,155,10],[97,74,156,14,"options"],[97,81,156,21],[97,82,156,22,"initialRouteName"],[97,98,155,10],[97,101,157,14,"routeNames"],[97,111,157,24],[97,112,157,25],[97,113,157,24],[97,114,154,8],[98,0,159,8,"routes"],[98,10,159,8,"routes"],[98,16,159,14],[98,17,159,15,"push"],[98,21,159,8],[98,22,159,20],[99,0,160,10,"key"],[99,12,160,10,"key"],[99,15,160,13],[99,17,160,18,"initialRouteName"],[99,33,160,13],[99,42,160,38],[99,65,159,20],[100,0,161,10,"name"],[100,12,161,10,"name"],[100,16,161,14],[100,18,161,16,"initialRouteName"],[100,34,159,20],[101,0,162,10,"params"],[101,12,162,10,"params"],[101,18,162,16],[101,20,162,18,"routeParamList"],[101,34,162,32],[101,35,162,33,"initialRouteName"],[101,51,162,32],[102,0,159,20],[102,11,159,8],[103,0,164,7],[105,0,166,6],[105,15,166,13],[106,0,167,8,"stale"],[106,10,167,8,"stale"],[106,15,167,13],[106,17,167,15],[106,22,166,13],[107,0,168,8,"type"],[107,10,168,8,"type"],[107,14,168,12],[107,16,168,14],[107,23,166,13],[108,0,169,8,"key"],[108,10,169,8,"key"],[108,13,169,11],[108,26,169,22],[108,49,166,13],[109,0,170,8,"index"],[109,10,170,8,"index"],[109,15,170,13],[109,17,170,15,"routes"],[109,23,170,21],[109,24,170,22,"length"],[109,30,170,15],[109,33,170,31],[109,34,166,13],[110,0,171,8,"routeNames"],[110,10,171,8,"routeNames"],[110,20,171,18],[110,22,171,8,"routeNames"],[110,32,166,13],[111,0,172,8,"routes"],[111,10,172,8,"routes"],[111,16,172,14],[111,18,172,8,"routes"],[112,0,166,13],[112,9,166,6],[113,0,174,5],[113,7,101,3],[114,0,176,4,"getStateForRouteNamesChange"],[114,6,176,4,"getStateForRouteNamesChange"],[114,33,101,3],[114,72,176,32,"state"],[114,77,101,3],[114,86,176,71],[115,0,176,71],[115,12,176,41,"routeNames"],[115,22,176,71],[115,31,176,41,"routeNames"],[115,41,176,71],[116,0,176,71],[116,12,176,53,"routeParamList"],[116,26,176,71],[116,35,176,53,"routeParamList"],[116,49,176,71],[117,0,177,6],[117,12,177,12,"routes"],[117,18,177,18],[117,21,177,21,"state"],[117,26,177,26],[117,27,177,27,"routes"],[117,33,177,21],[117,34,177,34,"filter"],[117,40,177,21],[117,41,177,41],[117,51,177,41,"route"],[117,56,177,46],[118,0,177,46],[118,17,178,8,"routeNames"],[118,27,178,18],[118,28,178,19,"includes"],[118,36,178,8],[118,37,178,28,"route"],[118,42,178,33],[118,43,178,34,"name"],[118,47,178,8],[118,48,177,46],[119,0,177,46],[119,9,177,21],[119,10,177,6],[121,0,181,6],[121,12,181,10,"routes"],[121,18,181,16],[121,19,181,17,"length"],[121,25,181,10],[121,30,181,28],[121,31,181,6],[121,33,181,31],[122,0,182,8],[122,14,182,14,"initialRouteName"],[122,30,182,30],[122,33,183,10,"options"],[122,40,183,17],[122,41,183,18,"initialRouteName"],[122,57,183,10],[122,62,183,39,"undefined"],[122,71,183,10],[122,75,184,10,"routeNames"],[122,85,184,20],[122,86,184,21,"includes"],[122,94,184,10],[122,95,184,30,"options"],[122,102,184,37],[122,103,184,38,"initialRouteName"],[122,119,184,10],[122,120,183,10],[122,123,185,14,"options"],[122,130,185,21],[122,131,185,22,"initialRouteName"],[122,147,183,10],[122,150,186,14,"routeNames"],[122,160,186,24],[122,161,186,25],[122,162,186,24],[122,163,182,8],[123,0,188,8,"routes"],[123,10,188,8,"routes"],[123,16,188,14],[123,17,188,15,"push"],[123,21,188,8],[123,22,188,20],[124,0,189,10,"key"],[124,12,189,10,"key"],[124,15,189,13],[124,17,189,18,"initialRouteName"],[124,33,189,13],[124,42,189,38],[124,65,188,20],[125,0,190,10,"name"],[125,12,190,10,"name"],[125,16,190,14],[125,18,190,16,"initialRouteName"],[125,34,188,20],[126,0,191,10,"params"],[126,12,191,10,"params"],[126,18,191,16],[126,20,191,18,"routeParamList"],[126,34,191,32],[126,35,191,33,"initialRouteName"],[126,51,191,32],[127,0,188,20],[127,11,188,8],[128,0,193,7],[130,0,195,6],[130,33,196,11,"state"],[130,38,195,6],[131,0,197,8,"routeNames"],[131,10,197,8,"routeNames"],[131,20,197,18],[131,22,197,8,"routeNames"],[131,32,195,6],[132,0,198,8,"routes"],[132,10,198,8,"routes"],[132,16,198,14],[132,18,198,8,"routes"],[132,24,195,6],[133,0,199,8,"index"],[133,10,199,8,"index"],[133,15,199,13],[133,17,199,15,"Math"],[133,21,199,19],[133,22,199,20,"min"],[133,25,199,15],[133,26,199,24,"state"],[133,31,199,29],[133,32,199,30,"index"],[133,37,199,15],[133,39,199,37,"routes"],[133,45,199,43],[133,46,199,44,"length"],[133,52,199,37],[133,55,199,53],[133,56,199,15],[134,0,195,6],[135,0,201,5],[135,7,101,3],[136,0,203,4,"getStateForRouteFocus"],[136,6,203,4,"getStateForRouteFocus"],[136,27,101,3],[136,60,203,26,"state"],[136,65,101,3],[136,67,203,33,"key"],[136,70,101,3],[136,72,203,38],[137,0,204,6],[137,12,204,12,"index"],[137,17,204,17],[137,20,204,20,"state"],[137,25,204,25],[137,26,204,26,"routes"],[137,32,204,20],[137,33,204,33,"findIndex"],[137,42,204,20],[137,43,204,43],[137,53,204,43,"r"],[137,54,204,44],[138,0,204,44],[138,17,204,48,"r"],[138,18,204,49],[138,19,204,50,"key"],[138,22,204,48],[138,27,204,58,"key"],[138,30,204,44],[139,0,204,44],[139,9,204,20],[139,10,204,6],[141,0,206,6],[141,12,206,10,"index"],[141,17,206,15],[141,22,206,20],[141,23,206,21],[141,24,206,10],[141,28,206,26,"index"],[141,33,206,31],[141,38,206,36,"state"],[141,43,206,41],[141,44,206,42,"index"],[141,49,206,6],[141,51,206,49],[142,0,207,8],[142,17,207,15,"state"],[142,22,207,8],[143,0,208,7],[145,0,210,6],[145,33,211,11,"state"],[145,38,210,6],[146,0,212,8,"index"],[146,10,212,8,"index"],[146,15,212,13],[146,17,212,8,"index"],[146,22,210,6],[147,0,213,8,"routes"],[147,10,213,8,"routes"],[147,16,213,14],[147,18,213,16,"state"],[147,23,213,21],[147,24,213,22,"routes"],[147,30,213,16],[147,31,213,29,"slice"],[147,36,213,16],[147,37,213,35],[147,38,213,16],[147,40,213,38,"index"],[147,45,213,43],[147,48,213,46],[147,49,213,16],[148,0,210,6],[149,0,215,5],[149,7,101,3],[150,0,217,4,"getStateForAction"],[150,6,217,4,"getStateForAction"],[150,23,101,3],[150,52,217,22,"state"],[150,57,101,3],[150,59,217,29,"action"],[150,65,101,3],[150,67,217,37,"options"],[150,74,101,3],[150,76,217,46],[151,0,217,46],[151,12,218,14,"routeParamList"],[151,26,217,46],[151,29,218,33,"options"],[151,36,217,46],[151,37,218,14,"routeParamList"],[151,51,217,46],[153,0,220,6],[153,16,220,14,"action"],[153,22,220,20],[153,23,220,21,"type"],[153,27,220,6],[154,0,221,8],[154,15,221,13],[154,24,221,8],[155,0,221,24],[156,0,222,10],[156,18,222,16,"index"],[156,23,222,21],[156,26,222,24,"action"],[156,32,222,30],[156,33,222,31,"source"],[156,39,222,24],[156,42,223,14,"state"],[156,47,223,19],[156,48,223,20,"routes"],[156,54,223,14],[156,55,223,27,"findIndex"],[156,64,223,14],[156,65,223,37],[156,75,223,37,"r"],[156,76,223,38],[157,0,223,38],[157,23,223,42,"r"],[157,24,223,43],[157,25,223,44,"key"],[157,28,223,42],[157,33,223,52,"action"],[157,39,223,58],[157,40,223,59,"source"],[157,46,223,38],[158,0,223,38],[158,15,223,14],[158,16,222,24],[158,19,224,14,"state"],[158,24,224,19],[158,25,224,20,"index"],[158,30,222,10],[160,0,226,10],[160,18,226,14,"index"],[160,23,226,19],[160,28,226,24],[160,29,226,25],[160,30,226,10],[160,32,226,28],[161,0,227,12],[161,23,227,19],[161,27,227,12],[162,0,228,11],[164,0,221,24],[164,36,230,40,"action"],[164,42,230,46],[164,43,230,47,"payload"],[164,50,221,24],[165,0,221,24],[165,18,230,18,"name"],[165,22,221,24],[165,41,230,18,"name"],[165,45,221,24],[166,0,221,24],[166,18,230,24,"key"],[166,21,221,24],[166,40,230,24,"key"],[166,43,221,24],[167,0,221,24],[167,18,230,29,"params"],[167,24,221,24],[167,43,230,29,"params"],[167,49,221,24],[169,0,232,10],[169,18,232,14],[169,19,232,15,"state"],[169,24,232,20],[169,25,232,21,"routeNames"],[169,35,232,15],[169,36,232,32,"includes"],[169,44,232,15],[169,45,232,41,"name"],[169,49,232,15],[169,50,232,10],[169,52,232,48],[170,0,233,12],[170,23,233,19],[170,27,233,12],[171,0,234,11],[173,0,236,10],[173,39,237,15,"state"],[173,44,236,10],[174,0,238,12,"routes"],[174,16,238,12,"routes"],[174,22,238,18],[174,24,238,20,"state"],[174,29,238,25],[174,30,238,26,"routes"],[174,36,238,20],[174,37,238,33,"map"],[174,40,238,20],[174,41,238,37],[174,51,238,38,"route"],[174,56,238,37],[174,58,238,45,"i"],[174,59,238,37],[175,0,238,37],[175,25,239,14,"i"],[175,26,239,15],[175,31,239,20,"index"],[175,36,239,14],[175,39,240,18],[176,0,241,20,"key"],[176,20,241,20,"key"],[176,23,241,23],[176,25,241,25,"key"],[176,28,241,28],[176,33,241,33,"undefined"],[176,42,241,25],[176,45,241,45,"key"],[176,48,241,25],[176,51,241,54,"name"],[176,55,241,25],[176,64,241,62],[176,87,240,18],[177,0,242,20,"name"],[177,20,242,20,"name"],[177,24,242,24],[177,26,242,20,"name"],[177,30,240,18],[178,0,243,20,"params"],[178,20,243,20,"params"],[178,26,243,26],[178,28,244,22,"routeParamList"],[178,42,244,36],[178,43,244,37,"name"],[178,47,244,36],[178,48,244,22],[178,53,244,47,"undefined"],[178,62,244,22],[178,83,246,31,"routeParamList"],[178,97,246,45],[178,98,246,46,"name"],[178,102,246,45],[178,103,244,22],[178,109,247,31,"params"],[178,115,244,22],[178,119,249,26,"params"],[179,0,240,18],[179,19,239,14],[179,22,251,18,"route"],[179,27,238,37],[180,0,238,37],[180,17,238,20],[181,0,236,10],[182,0,254,9],[184,0,256,8],[184,15,256,13],[184,21,256,8],[185,0,257,10],[185,16,257,14,"state"],[185,21,257,19],[185,22,257,20,"routeNames"],[185,32,257,14],[185,33,257,31,"includes"],[185,41,257,14],[185,42,257,40,"action"],[185,48,257,46],[185,49,257,47,"payload"],[185,56,257,40],[185,57,257,55,"name"],[185,61,257,14],[185,62,257,10],[185,64,257,62],[186,0,258,12],[186,39,259,17,"state"],[186,44,258,12],[187,0,260,14,"index"],[187,16,260,14,"index"],[187,21,260,19],[187,23,260,21,"state"],[187,28,260,26],[187,29,260,27,"index"],[187,34,260,21],[187,37,260,35],[187,38,258,12],[188,0,261,14,"routes"],[188,16,261,14,"routes"],[188,22,261,20],[188,67,262,19,"state"],[188,72,262,24],[188,73,262,25,"routes"],[188,79,261,20],[188,83,263,16],[189,0,264,18,"key"],[189,18,264,18,"key"],[189,21,264,21],[189,23,265,20,"action"],[189,29,265,26],[189,30,265,27,"payload"],[189,37,265,20],[189,38,265,35,"key"],[189,41,265,20],[189,46,265,43,"undefined"],[189,55,265,20],[189,58,266,27,"action"],[189,64,266,33],[189,65,266,34,"payload"],[189,72,266,27],[189,73,266,42,"name"],[189,77,265,20],[189,86,266,50],[189,109,265,20],[189,112,267,24,"action"],[189,118,267,30],[189,119,267,31,"payload"],[189,126,267,24],[189,127,267,39,"key"],[189,130,263,16],[190,0,268,18,"name"],[190,18,268,18,"name"],[190,22,268,22],[190,24,268,24,"action"],[190,30,268,30],[190,31,268,31,"payload"],[190,38,268,24],[190,39,268,39,"name"],[190,43,263,16],[191,0,269,18,"params"],[191,18,269,18,"params"],[191,24,269,24],[191,26,270,20,"routeParamList"],[191,40,270,34],[191,41,270,35,"action"],[191,47,270,41],[191,48,270,42,"payload"],[191,55,270,35],[191,56,270,50,"name"],[191,60,270,34],[191,61,270,20],[191,66,270,60,"undefined"],[191,75,270,20],[191,96,272,29,"routeParamList"],[191,110,272,43],[191,111,272,44,"action"],[191,117,272,50],[191,118,272,51,"payload"],[191,125,272,44],[191,126,272,59,"name"],[191,130,272,43],[191,131,270,20],[191,137,273,29,"action"],[191,143,273,35],[191,144,273,36,"payload"],[191,151,273,29],[191,152,273,44,"params"],[191,158,270,20],[191,162,275,24,"action"],[191,168,275,30],[191,169,275,31,"payload"],[191,176,275,24],[191,177,275,39,"params"],[192,0,263,16],[192,17,261,20],[193,0,258,12],[194,0,279,11],[196,0,281,10],[196,19,281,17],[196,23,281,10],[198,0,283,8],[198,15,283,13],[198,20,283,8],[199,0,283,20],[200,0,284,10],[200,18,284,16,"index"],[200,24,284,21],[200,27,285,12,"action"],[200,33,285,18],[200,34,285,19,"target"],[200,40,285,12],[200,45,285,30,"state"],[200,50,285,35],[200,51,285,36,"key"],[200,54,285,12],[200,58,285,43,"action"],[200,64,285,49],[200,65,285,50,"source"],[200,71,285,12],[200,74,286,16,"state"],[200,79,286,21],[200,80,286,22,"routes"],[200,86,286,16],[200,87,286,29,"findIndex"],[200,96,286,16],[200,97,286,39],[200,107,286,39,"r"],[200,108,286,40],[201,0,286,40],[201,23,286,44,"r"],[201,24,286,45],[201,25,286,46,"key"],[201,28,286,44],[201,33,286,54,"action"],[201,39,286,60],[201,40,286,61,"source"],[201,46,286,40],[202,0,286,40],[202,15,286,16],[202,16,285,12],[202,19,287,16,"state"],[202,24,287,21],[202,25,287,22,"index"],[202,30,284,10],[204,0,289,10],[204,18,289,14,"index"],[204,24,289,19],[204,27,289,22],[204,28,289,10],[204,30,289,25],[205,0,290,12],[205,20,290,18,"count"],[205,26,290,23],[205,29,290,26,"Math"],[205,33,290,30],[205,34,290,31,"max"],[205,37,290,26],[205,38,290,35,"index"],[205,44,290,40],[205,47,290,43,"action"],[205,53,290,49],[205,54,290,50,"payload"],[205,61,290,43],[205,62,290,58,"count"],[205,67,290,35],[205,70,290,66],[205,71,290,26],[205,73,290,69],[205,74,290,26],[205,75,290,12],[207,0,291,12],[207,20,291,18,"routes"],[207,26,291,24],[207,29,291,27,"state"],[207,34,291,32],[207,35,291,33,"routes"],[207,41,291,27],[207,42,292,15,"slice"],[207,47,291,27],[207,48,292,21],[207,49,291,27],[207,51,292,24,"count"],[207,57,291,27],[207,59,293,15,"concat"],[207,65,291,27],[207,66,293,22,"state"],[207,71,293,27],[207,72,293,28,"routes"],[207,78,293,22],[207,79,293,35,"slice"],[207,84,293,22],[207,85,293,41,"index"],[207,91,293,46],[207,94,293,49],[207,95,293,22],[207,96,291,27],[207,97,291,12],[208,0,295,12],[208,41,296,17,"state"],[208,46,295,12],[209,0,297,14,"index"],[209,18,297,14,"index"],[209,23,297,19],[209,25,297,21,"routes"],[209,31,297,27],[209,32,297,28,"length"],[209,38,297,21],[209,41,297,37],[209,42,295,12],[210,0,298,14,"routes"],[210,18,298,14,"routes"],[210,24,298,20],[210,26,298,14,"routes"],[211,0,295,12],[212,0,300,11],[214,0,302,10],[214,21,302,17],[214,25,302,10],[215,0,303,9],[217,0,305,8],[217,15,305,13],[217,27,305,8],[218,0,306,10],[218,19,306,17,"router"],[218,25,306,23],[218,26,306,24,"getStateForAction"],[218,43,306,17],[218,44,307,12,"state"],[218,49,306,17],[218,51,308,12],[219,0,309,14,"type"],[219,14,309,14,"type"],[219,18,309,18],[219,20,309,20],[219,25,308,12],[220,0,310,14,"payload"],[220,14,310,14,"payload"],[220,21,310,21],[220,23,310,23],[221,0,310,25,"count"],[221,16,310,25,"count"],[221,21,310,30],[221,23,310,32,"state"],[221,28,310,37],[221,29,310,38,"routes"],[221,35,310,32],[221,36,310,45,"length"],[221,42,310,32],[221,45,310,54],[222,0,310,23],[223,0,308,12],[223,13,306,17],[223,15,312,12,"options"],[223,22,306,17],[223,23,306,10],[225,0,315,8],[225,15,315,13],[225,25,315,8],[226,0,316,10],[226,16,317,12,"action"],[226,22,317,18],[226,23,317,19,"payload"],[226,30,317,12],[226,31,317,27,"key"],[226,34,317,12],[226,38,318,13,"action"],[226,44,318,19],[226,45,318,20,"payload"],[226,52,318,13],[226,53,318,28,"name"],[226,57,318,13],[226,61,319,14,"state"],[226,66,319,19],[226,67,319,20,"routeNames"],[226,77,319,14],[226,78,319,31,"includes"],[226,86,319,14],[226,87,319,40,"action"],[226,93,319,46],[226,94,319,47,"payload"],[226,101,319,40],[226,102,319,55,"name"],[226,106,319,14],[226,107,316,10],[226,109,320,12],[227,0,322,12],[227,18,322,16,"index"],[227,25,322,21],[227,28,322,24],[227,29,322,25],[227,30,322,12],[229,0,324,12],[229,18,325,15,"state"],[229,23,325,20],[229,24,325,21,"routes"],[229,30,325,15],[229,31,325,28,"state"],[229,36,325,33],[229,37,325,34,"index"],[229,42,325,15],[229,44,325,41,"name"],[229,48,325,15],[229,53,325,50,"action"],[229,59,325,56],[229,60,325,57,"payload"],[229,67,325,50],[229,68,325,65,"name"],[229,72,325,15],[229,76,326,16,"action"],[229,82,326,22],[229,83,326,23,"payload"],[229,90,326,16],[229,91,326,31,"key"],[229,94,326,16],[229,99,326,39,"undefined"],[229,108,325,14],[229,112,327,14,"state"],[229,117,327,19],[229,118,327,20,"routes"],[229,124,327,14],[229,125,327,27,"state"],[229,130,327,32],[229,131,327,33,"index"],[229,136,327,14],[229,138,327,40,"key"],[229,141,327,14],[229,146,327,48,"action"],[229,152,327,54],[229,153,327,55,"payload"],[229,160,327,48],[229,161,327,63,"key"],[229,164,324,12],[229,166,328,14],[230,0,329,14,"index"],[230,16,329,14,"index"],[230,23,329,19],[230,26,329,22,"state"],[230,31,329,27],[230,32,329,28,"index"],[230,37,329,14],[231,0,330,13],[231,15,324,12],[231,21,330,19],[232,0,331,14],[232,21,331,19],[232,25,331,23,"i"],[232,26,331,24],[232,29,331,27,"state"],[232,34,331,32],[232,35,331,33,"routes"],[232,41,331,27],[232,42,331,40,"length"],[232,48,331,27],[232,51,331,49],[232,52,331,14],[232,54,331,52,"i"],[232,55,331,53],[232,59,331,57],[232,60,331,14],[232,62,331,60,"i"],[232,63,331,61],[232,65,331,14],[232,67,331,65],[233,0,332,16],[233,22,333,19,"state"],[233,27,333,24],[233,28,333,25,"routes"],[233,34,333,19],[233,35,333,32,"i"],[233,36,333,19],[233,38,333,35,"name"],[233,42,333,19],[233,47,333,44,"action"],[233,53,333,50],[233,54,333,51,"payload"],[233,61,333,44],[233,62,333,59,"name"],[233,66,333,19],[233,70,334,20,"action"],[233,76,334,26],[233,77,334,27,"payload"],[233,84,334,20],[233,85,334,35,"key"],[233,88,334,20],[233,93,334,43,"undefined"],[233,102,333,18],[233,106,335,18,"state"],[233,111,335,23],[233,112,335,24,"routes"],[233,118,335,18],[233,119,335,31,"i"],[233,120,335,18],[233,122,335,34,"key"],[233,125,335,18],[233,130,335,42,"action"],[233,136,335,48],[233,137,335,49,"payload"],[233,144,335,42],[233,145,335,57,"key"],[233,148,332,16],[233,150,336,18],[234,0,337,18,"index"],[234,20,337,18,"index"],[234,27,337,23],[234,30,337,26,"i"],[234,31,337,18],[235,0,338,18],[236,0,339,17],[237,0,340,15],[238,0,341,13],[240,0,343,12],[240,18,344,14,"index"],[240,25,344,19],[240,30,344,24],[240,31,344,25],[240,32,344,14],[240,36,345,14,"action"],[240,42,345,20],[240,43,345,21,"payload"],[240,50,345,14],[240,51,345,29,"key"],[240,54,344,14],[240,58,346,14,"action"],[240,64,346,20],[240,65,346,21,"payload"],[240,72,346,14],[240,73,346,29,"name"],[240,77,346,14],[240,82,346,38,"undefined"],[240,91,343,12],[240,93,347,14],[241,0,348,14],[241,23,348,21],[241,27,348,14],[242,0,349,13],[244,0,351,12],[244,18,351,16,"index"],[244,25,351,21],[244,30,351,26],[244,31,351,27],[244,32,351,16],[244,36,351,32,"action"],[244,42,351,38],[244,43,351,39,"payload"],[244,50,351,32],[244,51,351,47,"name"],[244,55,351,32],[244,60,351,56,"undefined"],[244,69,351,12],[244,71,351,67],[245,0,352,14],[245,23,352,21,"router"],[245,29,352,27],[245,30,352,28,"getStateForAction"],[245,47,352,21],[245,48,353,16,"state"],[245,53,352,21],[245,55,354,16],[246,0,355,18,"type"],[246,18,355,18,"type"],[246,22,355,22],[246,24,355,24],[246,30,354,16],[247,0,356,18,"payload"],[247,18,356,18,"payload"],[247,25,356,25],[247,27,356,27],[248,0,357,20,"key"],[248,20,357,20,"key"],[248,23,357,23],[248,25,357,25,"action"],[248,31,357,31],[248,32,357,32,"payload"],[248,39,357,25],[248,40,357,40,"key"],[248,43,356,27],[249,0,358,20,"name"],[249,20,358,20,"name"],[249,24,358,24],[249,26,358,26,"action"],[249,32,358,32],[249,33,358,33,"payload"],[249,40,358,26],[249,41,358,41,"name"],[249,45,356,27],[250,0,359,20,"params"],[250,20,359,20,"params"],[250,26,359,26],[250,28,359,28,"action"],[250,34,359,34],[250,35,359,35,"payload"],[250,42,359,28],[250,43,359,43,"params"],[251,0,356,27],[252,0,354,16],[252,17,352,21],[252,19,362,16,"options"],[252,26,352,21],[252,27,352,14],[253,0,364,13],[255,0,366,12],[255,39,367,17,"state"],[255,44,366,12],[256,0,368,14,"index"],[256,16,368,14,"index"],[256,21,368,19],[256,23,368,14,"index"],[256,30,366,12],[257,0,369,14,"routes"],[257,16,369,14,"routes"],[257,22,369,20],[257,67,370,19,"state"],[257,72,370,24],[257,73,370,25,"routes"],[257,79,370,19],[257,80,370,32,"slice"],[257,85,370,19],[257,86,370,38],[257,87,370,19],[257,89,370,41,"index"],[257,96,370,19],[257,97,369,20],[257,101,371,16,"action"],[257,107,371,22],[257,108,371,23,"payload"],[257,115,371,16],[257,116,371,31,"params"],[257,122,371,16],[257,127,371,42,"undefined"],[257,136,371,16],[257,157,373,25,"state"],[257,162,373,30],[257,163,373,31,"routes"],[257,169,373,25],[257,170,373,38,"index"],[257,177,373,25],[257,178,371,16],[258,0,374,22,"params"],[258,18,374,22,"params"],[258,24,374,28],[258,44,375,27,"state"],[258,49,375,32],[258,50,375,33,"routes"],[258,56,375,27],[258,57,375,40,"index"],[258,64,375,27],[258,66,375,47,"params"],[258,72,374,28],[258,78,376,27,"action"],[258,84,376,33],[258,85,376,34,"payload"],[258,92,376,27],[258,93,376,42,"params"],[258,99,374,28],[259,0,371,16],[259,21,379,20,"state"],[259,26,379,25],[259,27,379,26,"routes"],[259,33,379,20],[259,34,379,33,"index"],[259,41,379,20],[259,42,369,20],[260,0,366,12],[261,0,382,11],[263,0,384,10],[263,19,384,17],[263,23,384,10],[265,0,386,8],[265,15,386,13],[265,24,386,8],[266,0,387,10],[266,16,387,14,"state"],[266,21,387,19],[266,22,387,20,"index"],[266,27,387,14],[266,30,387,28],[266,31,387,10],[266,33,387,31],[267,0,388,12],[267,21,388,19,"router"],[267,27,388,25],[267,28,388,26,"getStateForAction"],[267,45,388,19],[267,46,389,14,"state"],[267,51,388,19],[267,53,390,14],[268,0,391,16,"type"],[268,16,391,16,"type"],[268,20,391,20],[268,22,391,22],[268,27,390,14],[269,0,392,16,"payload"],[269,16,392,16,"payload"],[269,23,392,23],[269,25,392,25],[270,0,392,27,"count"],[270,18,392,27,"count"],[270,23,392,32],[270,25,392,34],[271,0,392,25],[271,17,390,14],[272,0,393,16,"target"],[272,16,393,16,"target"],[272,22,393,22],[272,24,393,24,"action"],[272,30,393,30],[272,31,393,31,"target"],[272,37,390,14],[273,0,394,16,"source"],[273,16,394,16,"source"],[273,22,394,22],[273,24,394,24,"action"],[273,30,394,30],[273,31,394,31,"source"],[274,0,390,14],[274,15,388,19],[274,17,396,14,"options"],[274,24,388,19],[274,25,388,12],[275,0,398,11],[277,0,400,10],[277,19,400,17],[277,23,400,10],[279,0,402,8],[280,0,403,10],[280,19,403,17,"BaseRouter"],[280,39,403,28,"getStateForAction"],[280,56,403,17],[280,57,403,46,"state"],[280,62,403,17],[280,64,403,53,"action"],[280,70,403,17],[280,71,403,10],[281,0,220,6],[282,0,405,5],[282,7,101,3],[283,0,407,4,"actionCreators"],[283,6,407,4,"actionCreators"],[283,20,407,18],[283,22,407,20,"StackActions"],[284,0,101,3],[284,6,98,2],[286,0,410,2],[286,11,410,9,"router"],[286,17,410,2],[287,0,411,1]],"functionMap":{"names":["<global>","StackActions.replace","StackActions.push","StackActions.pop","StackActions.popToTop","StackRouter","router.getInitialState","router.getRehydratedState","state.routes.filter$argument_0","state.routes.filter.map$argument_0","router.getStateForRouteNamesChange","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0"],"mappings":"AAA;ECkF;GDE;EEC;GFE;EGC;GHE;EIC;GJE;eKG;ICS;KDqB;IEE;gBCQ,wCD;UEE;+BFW;KFwB;IKE;yCFC;uCEC;KLuB;IME;2CCC,kBD;KNW;IQE;qCDM,4BC;qCCe;uBDa;uCDmC,4BC;KRuH;CLM"}},"type":"js/module"}]}