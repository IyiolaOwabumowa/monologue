{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"qs","data":{"isAsync":false}},{"name":"url-parse","data":{"isAsync":false}},{"name":"./LinkingModule","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n\n  var _qs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"qs\"));\n\n  var _urlParse = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"url-parse\"));\n\n  var _LinkingModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./LinkingModule\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var manifest = _expoConstants.default.manifest;\n  var USES_CUSTOM_SCHEME = _expoConstants.default.appOwnership === 'standalone' && manifest.scheme;\n  var HOST_URI = manifest.hostUri;\n\n  if (!HOST_URI && !USES_CUSTOM_SCHEME) {\n    HOST_URI = _removeScheme(_expoConstants.default.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n  }\n\n  var IS_EXPO_HOSTED = HOST_URI && (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(HOST_URI) || manifest.developer);\n\n  function _removeScheme(url) {\n    return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n  }\n\n  function _removePort(url) {\n    return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n  }\n\n  function _removeLeadingSlash(url) {\n    return url.replace(/^\\//, '');\n  }\n\n  function _removeTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n  }\n\n  function _removeTrailingSlashAndQueryString(url) {\n    return url.replace(/\\/?\\?.*$/, '');\n  }\n\n  function makeUrl() {\n    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var scheme = 'exp';\n    var manifestScheme = manifest.scheme || manifest.detach && manifest.detach.scheme;\n\n    if (_expoConstants.default.appOwnership === 'standalone' && manifestScheme) {\n      scheme = manifestScheme;\n    } else if (_expoConstants.default.appOwnership === 'standalone' && !manifestScheme) {\n      throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n    } else if (_expoConstants.default.appOwnership === 'expo' && !manifestScheme) {\n      console.warn('Linking requires that you provide a `scheme` in app.json for standalone apps - if it is left blank, your app may crash. The scheme does not apply to development in the Expo client but you should add it as soon as you start working with Linking to avoid creating a broken build. Add a `scheme` to silence this warning. Learn more about Linking at https://docs.expo.io/versions/latest/workflow/linking/');\n    }\n\n    var hostUri = HOST_URI || '';\n\n    if (USES_CUSTOM_SCHEME && IS_EXPO_HOSTED) {\n      hostUri = '';\n    }\n\n    if (path) {\n      if (IS_EXPO_HOSTED && hostUri) {\n        path = \"/--/\" + _removeLeadingSlash(path);\n      }\n\n      if (!path.startsWith('/') && hostUri) {\n        path = \"/\" + path;\n      } else if (path.startsWith('/') && !hostUri) {\n        path = path.substr(1);\n      }\n    } else {\n      path = '';\n    }\n\n    var queryString = '';\n    var queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n\n    if (queryStringMatchResult) {\n      hostUri = queryStringMatchResult[1];\n      queryString = queryStringMatchResult[2];\n      var paramsFromHostUri = {};\n\n      try {\n        var parsedParams = _qs.default.parse(queryString);\n\n        if (typeof parsedParams === 'object') {\n          paramsFromHostUri = parsedParams;\n        }\n      } catch (e) {}\n\n      queryParams = _objectSpread({}, queryParams, {}, paramsFromHostUri);\n    }\n\n    queryString = _qs.default.stringify(queryParams);\n\n    if (queryString) {\n      queryString = \"?\" + queryString;\n    }\n\n    hostUri = _removeTrailingSlash(hostUri);\n    return encodeURI(scheme + \"://\" + hostUri + path + queryString);\n  }\n\n  function parse(url) {\n    if (!url) {\n      throw new Error('parse cannot be called with a null value');\n    }\n\n    var parsed = (0, _urlParse.default)(url, true);\n    var queryParams = parsed.query;\n    var hostUri = HOST_URI || '';\n\n    var hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n\n    var path = parsed.pathname || null;\n    var hostname = parsed.hostname || null;\n    var scheme = parsed.protocol || null;\n\n    if (scheme) {\n      scheme = scheme.substring(0, scheme.length - 1);\n    }\n\n    if (path) {\n      path = _removeLeadingSlash(path);\n      var expoPrefix = null;\n\n      if (hostUriStripped) {\n        var parts = hostUriStripped.split('/');\n        expoPrefix = parts.slice(1).join('/') + \"/--/\";\n      }\n\n      if (IS_EXPO_HOSTED && !USES_CUSTOM_SCHEME && expoPrefix && path.startsWith(expoPrefix)) {\n        path = path.substring(expoPrefix.length);\n        hostname = null;\n      } else if (path.indexOf('+') > -1) {\n        path = path.substring(path.indexOf('+') + 1);\n      }\n    }\n\n    return {\n      hostname: hostname,\n      path: path,\n      queryParams: queryParams,\n      scheme: scheme\n    };\n  }\n\n  function parseInitialURLAsync() {\n    var initialUrl;\n    return _regenerator.default.async(function parseInitialURLAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_LinkingModule.default.getInitialURL());\n\n          case 2:\n            initialUrl = _context.sent;\n\n            if (initialUrl) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              scheme: null,\n              hostname: null,\n              path: null,\n              queryParams: null\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", parse(initialUrl));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var newLinking = new _LinkingModule.default.constructor();\n  newLinking.makeUrl = makeUrl;\n  newLinking.parse = parse;\n  newLinking.parseInitialURLAsync = parseInitialURLAsync;\n  var _default = newLinking;\n  exports.default = _default;\n});","lineCount":203,"map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,4,0],[25,6,5,8,"manifest"],[25,14],[25,17,5,21,"Constants"],[25,39],[25,40,5,8,"manifest"],[25,48],[26,0,6,0],[26,6,6,6,"USES_CUSTOM_SCHEME"],[26,24,6,24],[26,27,6,27,"Constants"],[26,50,6,37,"appOwnership"],[26,62,6,27],[26,67,6,54],[26,79,6,27],[26,83,6,70,"manifest"],[26,91,6,78],[26,92,6,79,"scheme"],[26,98,6,0],[27,0,7,0],[27,6,7,4,"HOST_URI"],[27,14,7,12],[27,17,7,15,"manifest"],[27,25,7,23],[27,26,7,24,"hostUri"],[27,33,7,0],[29,0,8,0],[29,6,8,4],[29,7,8,5,"HOST_URI"],[29,15,8,4],[29,19,8,17],[29,20,8,18,"USES_CUSTOM_SCHEME"],[29,38,8,0],[29,40,8,38],[30,0,11,4,"HOST_URI"],[30,4,11,4,"HOST_URI"],[30,12,11,12],[30,15,11,15,"_removeScheme"],[30,28,11,28],[30,29,11,29,"Constants"],[30,52,11,39,"linkingUri"],[30,62,11,28],[30,63,11,15],[30,64,11,51,"replace"],[30,71,11,15],[30,72,11,59],[30,87,11,15],[30,89,11,76],[30,91,11,15],[30,92,11,4],[31,0,12,1],[33,0,13,0],[33,6,13,6,"IS_EXPO_HOSTED"],[33,20,13,20],[33,23,13,23,"HOST_URI"],[33,31,13,31],[33,36,14,5],[33,104,14,73,"test"],[33,108,14,5],[33,109,14,78,"HOST_URI"],[33,117,14,5],[33,122,15,8,"manifest"],[33,130,15,16],[33,131,15,17,"developer"],[33,140,13,31],[33,141,13,0],[35,0,16,0],[35,11,16,9,"_removeScheme"],[35,24,16,0],[35,25,16,23,"url"],[35,28,16,0],[35,30,16,28],[36,0,17,4],[36,11,17,11,"url"],[36,14,17,14],[36,15,17,15,"replace"],[36,22,17,11],[36,23,17,23],[36,46,17,11],[36,48,17,48],[36,50,17,11],[36,51,17,4],[37,0,18,1],[39,0,19,0],[39,11,19,9,"_removePort"],[39,22,19,0],[39,23,19,21,"url"],[39,26,19,0],[39,28,19,26],[40,0,20,4],[40,11,20,11,"url"],[40,14,20,14],[40,15,20,15,"replace"],[40,22,20,11],[40,23,20,23],[40,60,20,11],[40,62,20,62],[40,64,20,11],[40,65,20,4],[41,0,21,1],[43,0,22,0],[43,11,22,9,"_removeLeadingSlash"],[43,30,22,0],[43,31,22,29,"url"],[43,34,22,0],[43,36,22,34],[44,0,23,4],[44,11,23,11,"url"],[44,14,23,14],[44,15,23,15,"replace"],[44,22,23,11],[44,23,23,23],[44,28,23,11],[44,30,23,30],[44,32,23,11],[44,33,23,4],[45,0,24,1],[47,0,25,0],[47,11,25,9,"_removeTrailingSlash"],[47,31,25,0],[47,32,25,30,"url"],[47,35,25,0],[47,37,25,35],[48,0,26,4],[48,11,26,11,"url"],[48,14,26,14],[48,15,26,15,"replace"],[48,22,26,11],[48,23,26,23],[48,28,26,11],[48,30,26,30],[48,32,26,11],[48,33,26,4],[49,0,27,1],[51,0,28,0],[51,11,28,9,"_removeTrailingSlashAndQueryString"],[51,45,28,0],[51,46,28,44,"url"],[51,49,28,0],[51,51,28,49],[52,0,29,4],[52,11,29,11,"url"],[52,14,29,14],[52,15,29,15,"replace"],[52,22,29,11],[52,23,29,23],[52,33,29,11],[52,35,29,35],[52,37,29,11],[52,38,29,4],[53,0,30,1],[55,0,31,0],[55,11,31,9,"makeUrl"],[55,18,31,0],[55,21,31,46],[56,0,31,46],[56,8,31,17,"path"],[56,12,31,46],[56,83,31,24],[56,85,31,46],[57,0,31,46],[57,8,31,28,"queryParams"],[57,19,31,46],[57,90,31,42],[57,92,31,46],[58,0,32,4],[58,8,32,8,"scheme"],[58,14,32,14],[58,17,32,17],[58,22,32,4],[59,0,33,4],[59,8,33,8,"manifestScheme"],[59,22,33,22],[59,25,33,25,"manifest"],[59,33,33,33],[59,34,33,34,"scheme"],[59,40,33,25],[59,44,33,45,"manifest"],[59,52,33,53],[59,53,33,54,"detach"],[59,59,33,45],[59,63,33,64,"manifest"],[59,71,33,72],[59,72,33,73,"detach"],[59,78,33,64],[59,79,33,80,"scheme"],[59,85,33,4],[61,0,34,4],[61,8,34,8,"Constants"],[61,31,34,18,"appOwnership"],[61,43,34,8],[61,48,34,35],[61,60,34,8],[61,64,34,51,"manifestScheme"],[61,78,34,4],[61,80,34,67],[62,0,35,8,"scheme"],[62,6,35,8,"scheme"],[62,12,35,14],[62,15,35,17,"manifestScheme"],[62,29,35,8],[63,0,36,5],[63,5,34,4],[63,11,37,9],[63,15,37,13,"Constants"],[63,38,37,23,"appOwnership"],[63,50,37,13],[63,55,37,40],[63,67,37,13],[63,71,37,56],[63,72,37,57,"manifestScheme"],[63,86,37,9],[63,88,37,73],[64,0,38,8],[64,12,38,14],[64,16,38,18,"Error"],[64,21,38,14],[64,22,38,24],[64,99,38,14],[64,100,38,8],[65,0,39,5],[65,5,37,9],[65,11,40,9],[65,15,40,13,"Constants"],[65,38,40,23,"appOwnership"],[65,50,40,13],[65,55,40,40],[65,61,40,13],[65,65,40,50],[65,66,40,51,"manifestScheme"],[65,80,40,9],[65,82,40,67],[66,0,41,8,"console"],[66,6,41,8,"console"],[66,13,41,15],[66,14,41,16,"warn"],[66,18,41,8],[66,19,41,21],[66,421,41,8],[67,0,42,5],[69,0,43,4],[69,8,43,8,"hostUri"],[69,15,43,15],[69,18,43,18,"HOST_URI"],[69,26,43,26],[69,30,43,30],[69,32,43,4],[71,0,44,4],[71,8,44,8,"USES_CUSTOM_SCHEME"],[71,26,44,26],[71,30,44,30,"IS_EXPO_HOSTED"],[71,44,44,4],[71,46,44,46],[72,0,45,8,"hostUri"],[72,6,45,8,"hostUri"],[72,13,45,15],[72,16,45,18],[72,18,45,8],[73,0,46,5],[75,0,47,4],[75,8,47,8,"path"],[75,12,47,4],[75,14,47,14],[76,0,48,8],[76,10,48,12,"IS_EXPO_HOSTED"],[76,24,48,26],[76,28,48,30,"hostUri"],[76,35,48,8],[76,37,48,39],[77,0,49,12,"path"],[77,8,49,12,"path"],[77,12,49,16],[77,24,49,26,"_removeLeadingSlash"],[77,43,49,45],[77,44,49,46,"path"],[77,48,49,45],[77,49,49,12],[78,0,50,9],[80,0,51,8],[80,10,51,12],[80,11,51,13,"path"],[80,15,51,17],[80,16,51,18,"startsWith"],[80,26,51,13],[80,27,51,29],[80,30,51,13],[80,31,51,12],[80,35,51,37,"hostUri"],[80,42,51,8],[80,44,51,46],[81,0,52,12,"path"],[81,8,52,12,"path"],[81,12,52,16],[81,21,52,23,"path"],[81,25,52,12],[82,0,53,9],[82,7,51,8],[82,13,54,13],[82,17,54,17,"path"],[82,21,54,21],[82,22,54,22,"startsWith"],[82,32,54,17],[82,33,54,33],[82,36,54,17],[82,41,54,41],[82,42,54,42,"hostUri"],[82,49,54,13],[82,51,54,51],[83,0,55,12,"path"],[83,8,55,12,"path"],[83,12,55,16],[83,15,55,19,"path"],[83,19,55,23],[83,20,55,24,"substr"],[83,26,55,19],[83,27,55,31],[83,28,55,19],[83,29,55,12],[84,0,56,9],[85,0,57,5],[85,5,47,4],[85,11,58,9],[86,0,59,8,"path"],[86,6,59,8,"path"],[86,10,59,12],[86,13,59,15],[86,15,59,8],[87,0,60,5],[89,0,63,4],[89,8,63,8,"queryString"],[89,19,63,19],[89,22,63,22],[89,24,63,4],[90,0,64,4],[90,8,64,8,"queryStringMatchResult"],[90,30,64,30],[90,33,64,33,"hostUri"],[90,40,64,40],[90,41,64,41,"match"],[90,46,64,33],[90,47,64,47],[90,59,64,33],[90,60,64,4],[92,0,65,4],[92,8,65,8,"queryStringMatchResult"],[92,30,65,4],[92,32,65,32],[93,0,66,8,"hostUri"],[93,6,66,8,"hostUri"],[93,13,66,15],[93,16,66,18,"queryStringMatchResult"],[93,38,66,40],[93,39,66,41],[93,40,66,40],[93,41,66,8],[94,0,67,8,"queryString"],[94,6,67,8,"queryString"],[94,17,67,19],[94,20,67,22,"queryStringMatchResult"],[94,42,67,44],[94,43,67,45],[94,44,67,44],[94,45,67,8],[95,0,68,8],[95,10,68,12,"paramsFromHostUri"],[95,27,68,29],[95,30,68,32],[95,32,68,8],[97,0,69,8],[97,10,69,12],[98,0,70,12],[98,12,70,16,"parsedParams"],[98,24,70,28],[98,27,70,31,"qs"],[98,39,70,34,"parse"],[98,44,70,31],[98,45,70,40,"queryString"],[98,56,70,31],[98,57,70,12],[100,0,71,12],[100,12,71,16],[100,19,71,23,"parsedParams"],[100,31,71,16],[100,36,71,40],[100,44,71,12],[100,46,71,50],[101,0,72,16,"paramsFromHostUri"],[101,10,72,16,"paramsFromHostUri"],[101,27,72,33],[101,30,72,36,"parsedParams"],[101,42,72,16],[102,0,73,13],[103,0,74,9],[103,7,69,8],[103,8,75,8],[103,15,75,15,"e"],[103,16,75,8],[103,18,75,18],[103,19,75,21],[105,0,76,8,"queryParams"],[105,6,76,8,"queryParams"],[105,17,76,19],[105,38,77,15,"queryParams"],[105,49,76,19],[105,55,78,15,"paramsFromHostUri"],[105,72,76,19],[105,73,76,8],[106,0,80,5],[108,0,81,4,"queryString"],[108,4,81,4,"queryString"],[108,15,81,15],[108,18,81,18,"qs"],[108,30,81,21,"stringify"],[108,39,81,18],[108,40,81,31,"queryParams"],[108,51,81,18],[108,52,81,4],[110,0,82,4],[110,8,82,8,"queryString"],[110,19,82,4],[110,21,82,21],[111,0,83,8,"queryString"],[111,6,83,8,"queryString"],[111,17,83,19],[111,26,83,26,"queryString"],[111,37,83,8],[112,0,84,5],[114,0,85,4,"hostUri"],[114,4,85,4,"hostUri"],[114,11,85,11],[114,14,85,14,"_removeTrailingSlash"],[114,34,85,34],[114,35,85,35,"hostUri"],[114,42,85,34],[114,43,85,4],[115,0,86,4],[115,11,86,11,"encodeURI"],[115,20,86,20],[115,21,86,24,"scheme"],[115,27,86,20],[115,38,86,36,"hostUri"],[115,45,86,20],[115,48,86,46,"path"],[115,52,86,20],[115,55,86,53,"queryString"],[115,66,86,20],[115,67,86,4],[116,0,87,1],[118,0,88,0],[118,11,88,9,"parse"],[118,16,88,0],[118,17,88,15,"url"],[118,20,88,0],[118,22,88,20],[119,0,89,4],[119,8,89,8],[119,9,89,9,"url"],[119,12,89,4],[119,14,89,14],[120,0,90,8],[120,12,90,14],[120,16,90,18,"Error"],[120,21,90,14],[120,22,90,24],[120,64,90,14],[120,65,90,8],[121,0,91,5],[123,0,92,4],[123,8,92,10,"parsed"],[123,14,92,16],[123,17,92,19],[123,40,92,23,"url"],[123,43,92,19],[123,45,92,51],[123,49,92,19],[123,50,92,4],[124,0,93,4],[124,8,93,8,"queryParams"],[124,19,93,19],[124,22,93,22,"parsed"],[124,28,93,28],[124,29,93,29,"query"],[124,34,93,4],[125,0,94,4],[125,8,94,8,"hostUri"],[125,15,94,15],[125,18,94,18,"HOST_URI"],[125,26,94,26],[125,30,94,30],[125,32,94,4],[127,0,95,4],[127,8,95,8,"hostUriStripped"],[127,23,95,23],[127,26,95,26,"_removePort"],[127,37,95,37],[127,38,95,38,"_removeTrailingSlashAndQueryString"],[127,72,95,72],[127,73,95,73,"hostUri"],[127,80,95,72],[127,81,95,37],[127,82,95,4],[129,0,96,4],[129,8,96,8,"path"],[129,12,96,12],[129,15,96,15,"parsed"],[129,21,96,21],[129,22,96,22,"pathname"],[129,30,96,15],[129,34,96,34],[129,38,96,4],[130,0,97,4],[130,8,97,8,"hostname"],[130,16,97,16],[130,19,97,19,"parsed"],[130,25,97,25],[130,26,97,26,"hostname"],[130,34,97,19],[130,38,97,38],[130,42,97,4],[131,0,98,4],[131,8,98,8,"scheme"],[131,14,98,14],[131,17,98,17,"parsed"],[131,23,98,23],[131,24,98,24,"protocol"],[131,32,98,17],[131,36,98,36],[131,40,98,4],[133,0,99,4],[133,8,99,8,"scheme"],[133,14,99,4],[133,16,99,16],[134,0,101,8,"scheme"],[134,6,101,8,"scheme"],[134,12,101,14],[134,15,101,17,"scheme"],[134,21,101,23],[134,22,101,24,"substring"],[134,31,101,17],[134,32,101,34],[134,33,101,17],[134,35,101,37,"scheme"],[134,41,101,43],[134,42,101,44,"length"],[134,48,101,37],[134,51,101,53],[134,52,101,17],[134,53,101,8],[135,0,102,5],[137,0,103,4],[137,8,103,8,"path"],[137,12,103,4],[137,14,103,14],[138,0,104,8,"path"],[138,6,104,8,"path"],[138,10,104,12],[138,13,104,15,"_removeLeadingSlash"],[138,32,104,34],[138,33,104,35,"path"],[138,37,104,34],[138,38,104,8],[139,0,105,8],[139,10,105,12,"expoPrefix"],[139,20,105,22],[139,23,105,25],[139,27,105,8],[141,0,106,8],[141,10,106,12,"hostUriStripped"],[141,25,106,8],[141,27,106,29],[142,0,107,12],[142,12,107,18,"parts"],[142,17,107,23],[142,20,107,26,"hostUriStripped"],[142,35,107,41],[142,36,107,42,"split"],[142,41,107,26],[142,42,107,48],[142,45,107,26],[142,46,107,12],[143,0,108,12,"expoPrefix"],[143,8,108,12,"expoPrefix"],[143,18,108,22],[143,21,108,28,"parts"],[143,26,108,33],[143,27,108,34,"slice"],[143,32,108,28],[143,33,108,40],[143,34,108,28],[143,36,108,43,"join"],[143,40,108,28],[143,41,108,48],[143,44,108,28],[143,45,108,22],[143,54,108,12],[144,0,109,9],[146,0,110,8],[146,10,110,12,"IS_EXPO_HOSTED"],[146,24,110,26],[146,28,110,30],[146,29,110,31,"USES_CUSTOM_SCHEME"],[146,47,110,12],[146,51,110,53,"expoPrefix"],[146,61,110,12],[146,65,110,67,"path"],[146,69,110,71],[146,70,110,72,"startsWith"],[146,80,110,67],[146,81,110,83,"expoPrefix"],[146,91,110,67],[146,92,110,8],[146,94,110,96],[147,0,111,12,"path"],[147,8,111,12,"path"],[147,12,111,16],[147,15,111,19,"path"],[147,19,111,23],[147,20,111,24,"substring"],[147,29,111,19],[147,30,111,34,"expoPrefix"],[147,40,111,44],[147,41,111,45,"length"],[147,47,111,19],[147,48,111,12],[148,0,112,12,"hostname"],[148,8,112,12,"hostname"],[148,16,112,20],[148,19,112,23],[148,23,112,12],[149,0,113,9],[149,7,110,8],[149,13,114,13],[149,17,114,17,"path"],[149,21,114,21],[149,22,114,22,"indexOf"],[149,29,114,17],[149,30,114,30],[149,33,114,17],[149,37,114,37],[149,38,114,38],[149,39,114,13],[149,41,114,41],[150,0,115,12,"path"],[150,8,115,12,"path"],[150,12,115,16],[150,15,115,19,"path"],[150,19,115,23],[150,20,115,24,"substring"],[150,29,115,19],[150,30,115,34,"path"],[150,34,115,38],[150,35,115,39,"indexOf"],[150,42,115,34],[150,43,115,47],[150,46,115,34],[150,50,115,54],[150,51,115,19],[150,52,115,12],[151,0,116,9],[152,0,117,5],[154,0,118,4],[154,11,118,11],[155,0,119,8,"hostname"],[155,6,119,8,"hostname"],[155,14,119,16],[155,16,119,8,"hostname"],[155,24,118,11],[156,0,120,8,"path"],[156,6,120,8,"path"],[156,10,120,12],[156,12,120,8,"path"],[156,16,118,11],[157,0,121,8,"queryParams"],[157,6,121,8,"queryParams"],[157,17,121,19],[157,19,121,8,"queryParams"],[157,30,118,11],[158,0,122,8,"scheme"],[158,6,122,8,"scheme"],[158,12,122,14],[158,14,122,8,"scheme"],[159,0,118,11],[159,5,118,4],[160,0,124,1],[162,0,125,0],[162,11,125,15,"parseInitialURLAsync"],[162,31,125,0],[163,0,125,0],[164,0,125,0],[165,0,125,0],[166,0,125,0],[167,0,125,0],[168,0,125,0],[169,0,125,0],[169,46,126,29,"Linking"],[169,69,126,37,"getInitialURL"],[169,82,126,29],[169,84,125,0],[171,0,125,0],[172,0,126,10,"initialUrl"],[172,12,126,10,"initialUrl"],[172,22,125,0],[174,0,125,0],[174,16,127,9,"initialUrl"],[174,26,125,0],[175,0,125,0],[176,0,125,0],[177,0,125,0],[179,0,125,0],[179,45,128,15],[180,0,129,12,"scheme"],[180,14,129,12,"scheme"],[180,20,129,18],[180,22,129,20],[180,26,128,15],[181,0,130,12,"hostname"],[181,14,130,12,"hostname"],[181,22,130,20],[181,24,130,22],[181,28,128,15],[182,0,131,12,"path"],[182,14,131,12,"path"],[182,18,131,16],[182,20,131,18],[182,24,128,15],[183,0,132,12,"queryParams"],[183,14,132,12,"queryParams"],[183,25,132,23],[183,27,132,25],[184,0,128,15],[184,13,125,0],[186,0,125,0],[187,0,125,0],[187,45,135,11,"parse"],[187,50,135,16],[187,51,135,17,"initialUrl"],[187,61,135,16],[187,62,125,0],[189,0,125,0],[190,0,125,0],[191,0,125,0],[192,0,125,0],[193,0,125,0],[194,0,125,0],[195,0,125,0],[197,0,138,0],[197,6,138,4,"newLinking"],[197,16,138,14],[197,19,138,17],[197,23,138,21,"Linking"],[197,46,138,29,"constructor"],[197,57,138,17],[197,59,138,0],[198,0,139,0,"newLinking"],[198,2,139,0,"newLinking"],[198,12,139,10],[198,13,139,11,"makeUrl"],[198,20,139,0],[198,23,139,21,"makeUrl"],[198,30,139,0],[199,0,140,0,"newLinking"],[199,2,140,0,"newLinking"],[199,12,140,10],[199,13,140,11,"parse"],[199,18,140,0],[199,21,140,19,"parse"],[199,26,140,0],[200,0,141,0,"newLinking"],[200,2,141,0,"newLinking"],[200,12,141,10],[200,13,141,11,"parseInitialURLAsync"],[200,33,141,0],[200,36,141,34,"parseInitialURLAsync"],[200,56,141,0],[201,17,142,15,"newLinking"],[201,27]],"functionMap":{"names":["<global>","_removeScheme","_removePort","_removeLeadingSlash","_removeTrailingSlash","_removeTrailingSlashAndQueryString","makeUrl","parse","parseInitialURLAsync"],"mappings":"AAA;ACe;CDE;AEC;CFE;AGC;CHE;AIC;CJE;AKC;CLE;AMC;CNwD;AOC;CPoC;AQC;CRW"}},"type":"js/module"}]}