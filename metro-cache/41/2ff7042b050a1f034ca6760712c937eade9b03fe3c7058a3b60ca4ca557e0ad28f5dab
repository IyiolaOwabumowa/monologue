{"dependencies":[{"name":"../constants/authConstants","data":{"isAsync":false}},{"name":"../services/auth.services","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.authActions = void 0;\n\n  var _authConstants = _$$_REQUIRE(_dependencyMap[0], \"../constants/authConstants\");\n\n  var _auth = _$$_REQUIRE(_dependencyMap[1], \"../services/auth.services\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var authActions = {\n    login: login,\n    clearLoginErrors: clearLoginErrors\n  };\n  exports.authActions = authActions;\n\n  function login(username, password) {\n    return function (dispatch) {\n      dispatch(request(username));\n\n      _auth.authService.login(username, password).then(function (user) {\n        console.log(\"login successful\");\n        dispatch(success(user));\n      }).catch(function (error) {\n        console.log(error.response.data.error);\n        var errorMessage = error.response.data.error;\n        dispatch(failure(errorMessage));\n      });\n    };\n\n    function request(user) {\n      return {\n        type: _authConstants.authConstants.LOGIN_REQUEST,\n        user: user\n      };\n    }\n\n    function success(user) {\n      return {\n        type: _authConstants.authConstants.LOGIN_SUCCESS,\n        user: user\n      };\n    }\n\n    function failure(error) {\n      return {\n        type: _authConstants.authConstants.LOGIN_FAILURE,\n        error: error\n      };\n    }\n\n    function getToken() {\n      return {\n        type: _authConstants.authConstants.GET_TOKEN\n      };\n    }\n  }\n\n  function getUserToken() {\n    return function (dispatch) {\n      _auth.authService.getItem('token').then(function (value) {\n        dispatch(getToken(value));\n      });\n    };\n\n    function getToken(token) {\n      return {\n        type: _authConstants.authConstants.GET_TOKEN,\n        token: token\n      };\n    }\n  }\n\n  function clearLoginErrors() {\n    return {\n      type: _authConstants.authConstants.CLEAR_LOGIN_ERRORS\n    };\n  }\n});","lineCount":81,"map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,6,7],[13,6,6,13,"authActions"],[13,17,6,24],[13,20,6,27],[14,0,7,2,"login"],[14,4,7,2,"login"],[14,9,7,7],[14,11,7,2,"login"],[14,16,6,27],[15,0,9,2,"clearLoginErrors"],[15,4,9,2,"clearLoginErrors"],[15,20,9,18],[15,22,9,2,"clearLoginErrors"],[16,0,6,27],[16,3,6,7],[19,0,13,0],[19,11,13,9,"login"],[19,16,13,0],[19,17,13,15,"username"],[19,25,13,0],[19,27,13,25,"password"],[19,35,13,0],[19,37,13,35],[20,0,14,2],[20,11,14,9],[20,21,14,9,"dispatch"],[20,29,14,17],[20,31,14,21],[21,0,15,4,"dispatch"],[21,6,15,4,"dispatch"],[21,14,15,12],[21,15,15,13,"request"],[21,22,15,20],[21,23,15,21,"username"],[21,31,15,20],[21,32,15,12],[21,33,15,4],[23,0,17,4,"authService"],[23,24,18,7,"login"],[23,29,17,4],[23,30,18,13,"username"],[23,38,17,4],[23,40,18,23,"password"],[23,48,17,4],[23,50,19,7,"then"],[23,54,17,4],[23,55,19,12],[23,65,19,12,"user"],[23,69,19,16],[23,71,19,20],[24,0,20,8,"console"],[24,8,20,8,"console"],[24,15,20,15],[24,16,20,16,"log"],[24,19,20,8],[24,20,20,20],[24,38,20,8],[25,0,21,8,"dispatch"],[25,8,21,8,"dispatch"],[25,16,21,16],[25,17,21,17,"success"],[25,24,21,24],[25,25,21,25,"user"],[25,29,21,24],[25,30,21,16],[25,31,21,8],[26,0,22,7],[26,7,17,4],[26,9,23,7,"catch"],[26,14,17,4],[26,15,23,13],[26,25,23,13,"error"],[26,30,23,18],[26,32,23,22],[27,0,24,8,"console"],[27,8,24,8,"console"],[27,15,24,15],[27,16,24,16,"log"],[27,19,24,8],[27,20,24,20,"error"],[27,25,24,25],[27,26,24,26,"response"],[27,34,24,20],[27,35,24,35,"data"],[27,39,24,20],[27,40,24,40,"error"],[27,45,24,8],[28,0,25,8],[28,12,25,14,"errorMessage"],[28,24,25,26],[28,27,25,29,"error"],[28,32,25,34],[28,33,25,35,"response"],[28,41,25,29],[28,42,25,44,"data"],[28,46,25,29],[28,47,25,49,"error"],[28,52,25,8],[29,0,26,8,"dispatch"],[29,8,26,8,"dispatch"],[29,16,26,16],[29,17,26,17,"failure"],[29,24,26,24],[29,25,26,25,"errorMessage"],[29,37,26,24],[29,38,26,16],[29,39,26,8],[30,0,29,7],[30,7,17,4],[31,0,30,3],[31,5,14,2],[33,0,32,2],[33,13,32,11,"request"],[33,20,32,2],[33,21,32,19,"user"],[33,25,32,2],[33,27,32,25],[34,0,33,4],[34,13,33,11],[35,0,33,13,"type"],[35,8,33,13,"type"],[35,12,33,17],[35,14,33,19,"authConstants"],[35,43,33,33,"LOGIN_REQUEST"],[35,56,33,11],[36,0,33,48,"user"],[36,8,33,48,"user"],[36,12,33,52],[36,14,33,48,"user"],[37,0,33,11],[37,7,33,4],[38,0,34,3],[40,0,35,2],[40,13,35,11,"success"],[40,20,35,2],[40,21,35,19,"user"],[40,25,35,2],[40,27,35,25],[41,0,36,4],[41,13,36,11],[42,0,36,13,"type"],[42,8,36,13,"type"],[42,12,36,17],[42,14,36,19,"authConstants"],[42,43,36,33,"LOGIN_SUCCESS"],[42,56,36,11],[43,0,36,48,"user"],[43,8,36,48,"user"],[43,12,36,52],[43,14,36,48,"user"],[44,0,36,11],[44,7,36,4],[45,0,37,3],[47,0,38,2],[47,13,38,11,"failure"],[47,20,38,2],[47,21,38,19,"error"],[47,26,38,2],[47,28,38,26],[48,0,39,4],[48,13,39,11],[49,0,39,13,"type"],[49,8,39,13,"type"],[49,12,39,17],[49,14,39,19,"authConstants"],[49,43,39,33,"LOGIN_FAILURE"],[49,56,39,11],[50,0,39,48,"error"],[50,8,39,48,"error"],[50,13,39,53],[50,15,39,48,"error"],[51,0,39,11],[51,7,39,4],[52,0,40,3],[54,0,41,2],[54,13,41,11,"getToken"],[54,21,41,2],[54,24,41,21],[55,0,42,4],[55,13,42,11],[56,0,42,12,"type"],[56,8,42,12,"type"],[56,12,42,16],[56,14,42,18,"authConstants"],[56,43,42,32,"GET_TOKEN"],[57,0,42,11],[57,7,42,4],[58,0,43,3],[59,0,44,1],[61,0,46,0],[61,11,46,9,"getUserToken"],[61,23,46,0],[61,26,46,23],[62,0,47,2],[62,11,47,9],[62,21,47,9,"dispatch"],[62,29,47,17],[62,31,47,21],[63,0,48,4,"authService"],[63,24,48,16,"getItem"],[63,31,48,4],[63,32,48,24],[63,39,48,4],[63,41,48,33,"then"],[63,45,48,4],[63,46,49,6],[63,56,49,6,"value"],[63,61,49,11],[63,63,49,15],[64,0,50,8,"dispatch"],[64,8,50,8,"dispatch"],[64,16,50,16],[64,17,50,17,"getToken"],[64,25,50,25],[64,26,50,26,"value"],[64,31,50,25],[64,32,50,16],[64,33,50,8],[65,0,51,7],[65,7,48,4],[66,0,54,3],[66,5,47,2],[68,0,57,2],[68,13,57,11,"getToken"],[68,21,57,2],[68,22,57,20,"token"],[68,27,57,2],[68,29,57,26],[69,0,58,4],[69,13,58,11],[70,0,58,12,"type"],[70,8,58,12,"type"],[70,12,58,16],[70,14,58,18,"authConstants"],[70,43,58,32,"GET_TOKEN"],[70,52,58,11],[71,0,58,43,"token"],[71,8,58,43,"token"],[71,13,58,48],[71,15,58,43,"token"],[72,0,58,11],[72,7,58,4],[73,0,59,3],[74,0,61,1],[76,0,64,0],[76,11,64,9,"clearLoginErrors"],[76,27,64,0],[76,30,64,27],[77,0,65,2],[77,11,65,9],[78,0,66,4,"type"],[78,6,66,4,"type"],[78,10,66,8],[78,12,66,10,"authConstants"],[78,41,66,24,"CLEAR_LOGIN_ERRORS"],[79,0,65,9],[79,5,65,2],[80,0,68,1]],"functionMap":{"names":["<global>","login","<anonymous>","authService.login.then$argument_0","authService.login.then._catch$argument_0","request","success","failure","getToken","getUserToken","authService.getItem.then$argument_0","clearLoginErrors"],"mappings":"AAA;ACY;SCC;YCK;ODG;aEC;OFM;GDC;EIE;GJE;EKC;GLE;EMC;GNE;EOC;GPE;CDC;ASE;SPC;MQE;ORE;GOG;EDG;GCE;CTE;AWG;CXI"}},"type":"js/module"}]}