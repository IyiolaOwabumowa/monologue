{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-is","data":{"isAsync":false}},{"name":"@react-navigation/routers","data":{"isAsync":false}},{"name":"./BaseNavigationContainer","data":{"isAsync":false}},{"name":"./NavigationRouteContext","data":{"isAsync":false}},{"name":"./Screen","data":{"isAsync":false}},{"name":"./useEventEmitter","data":{"isAsync":false}},{"name":"./useRegisterNavigator","data":{"isAsync":false}},{"name":"./useDescriptors","data":{"isAsync":false}},{"name":"./useNavigationHelpers","data":{"isAsync":false}},{"name":"./useOnAction","data":{"isAsync":false}},{"name":"./useFocusEvents","data":{"isAsync":false}},{"name":"./useOnRouteFocus","data":{"isAsync":false}},{"name":"./useChildActionListeners","data":{"isAsync":false}},{"name":"./useFocusedListeners","data":{"isAsync":false}},{"name":"./useFocusedListenersChildrenAdapter","data":{"isAsync":false}},{"name":"./types","data":{"isAsync":false}},{"name":"./useStateGetters","data":{"isAsync":false}},{"name":"./useOnGetState","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useNavigationBuilder;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"react\"));\n\n  var _reactIs = _$$_REQUIRE(_dependencyMap[6], \"react-is\");\n\n  var _routers = _$$_REQUIRE(_dependencyMap[7], \"@react-navigation/routers\");\n\n  var _BaseNavigationContainer = _$$_REQUIRE(_dependencyMap[8], \"./BaseNavigationContainer\");\n\n  var _NavigationRouteContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./NavigationRouteContext\"));\n\n  var _Screen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./Screen\"));\n\n  var _useEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./useEventEmitter\"));\n\n  var _useRegisterNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./useRegisterNavigator\"));\n\n  var _useDescriptors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./useDescriptors\"));\n\n  var _useNavigationHelpers = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./useNavigationHelpers\"));\n\n  var _useOnAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./useOnAction\"));\n\n  var _useFocusEvents = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./useFocusEvents\"));\n\n  var _useOnRouteFocus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./useOnRouteFocus\"));\n\n  var _useChildActionListeners = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./useChildActionListeners\"));\n\n  var _useFocusedListeners2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./useFocusedListeners\"));\n\n  var _useFocusedListenersChildrenAdapter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./useFocusedListenersChildrenAdapter\"));\n\n  var _types = _$$_REQUIRE(_dependencyMap[21], \"./types\");\n\n  var _useStateGetters2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./useStateGetters\"));\n\n  var _useOnGetState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./useOnGetState\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  _types.PrivateValueStore;\n\n  var isArrayEqual = function isArrayEqual(a, b) {\n    return a.length === b.length && a.every(function (it, index) {\n      return it === b[index];\n    });\n  };\n\n  var getRouteConfigsFromChildren = function getRouteConfigsFromChildren(children) {\n    var configs = React.Children.toArray(children).reduce(function (acc, child) {\n      if (React.isValidElement(child)) {\n        if (child.type === _Screen.default) {\n          acc.push(child.props);\n          return acc;\n        }\n\n        if (child.type === React.Fragment) {\n          acc.push.apply(acc, (0, _toConsumableArray2.default)(getRouteConfigsFromChildren(child.props.children)));\n          return acc;\n        }\n      }\n\n      throw new Error(\"A navigator can only contain 'Screen' components as its direct children (found '\" + (child.type && child.type.name ? child.type.name : String(child)) + \"')\");\n    }, []);\n\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(function (config) {\n        var _ref = config,\n            name = _ref.name,\n            children = _ref.children,\n            component = _ref.component;\n\n        if (typeof name !== 'string' || !name) {\n          throw new Error(\"Got an invalid name (\" + JSON.stringify(name) + \") for the screen. It must be a non-empty string.\");\n        }\n\n        if (children != null || component !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(\"Got both 'component' and 'children' props for the screen '\" + name + \"'. You must pass only one of them.\");\n          }\n\n          if (children != null && typeof children !== 'function') {\n            throw new Error(\"Got an invalid value for 'children' prop for the screen '\" + name + \"'. It must be a function returning a React Element.\");\n          }\n\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(\"Got an invalid value for 'component' prop for the screen '\" + name + \"'. It must be a valid React Component.\");\n          }\n\n          if (typeof component === 'function' && component.name === 'component') {\n            console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\" + name + \"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");\n          }\n        } else {\n          throw new Error(\"Couldn't find a 'component' or 'children' prop for the screen '\" + name + \"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");\n        }\n      });\n    }\n\n    return configs;\n  };\n\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _useRegisterNavigator.default)();\n    var route = React.useContext(_NavigationRouteContext.default);\n    var previousRouteRef = React.useRef(route);\n    React.useEffect(function () {\n      previousRouteRef.current = route;\n    }, [route]);\n    var children = options.children,\n        rest = (0, _objectWithoutProperties2.default)(options, [\"children\"]);\n\n    var _React$useRef = React.useRef(createRouter(_objectSpread({}, rest, {}, (route == null ? void 0 : route.params) && typeof route.params.screen === 'string' ? {\n      initialRouteName: route.params.screen\n    } : null))),\n        router = _React$useRef.current;\n\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var screens = routeConfigs.reduce(function (acc, config) {\n      if (config.name in acc) {\n        throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\" + config.name + \"')\");\n      }\n\n      acc[config.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(function (config) {\n      return config.name;\n    });\n    var routeParamList = routeNames.reduce(function (acc, curr) {\n      var initialParams = screens[curr].initialParams;\n      var initialParamsFromParams = (route == null ? void 0 : route.params) && route.params.screen === curr ? route.params.params : undefined;\n      acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? _objectSpread({}, initialParams, {}, initialParamsFromParams) : undefined;\n      return acc;\n    }, {});\n\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n\n    var isStateValid = React.useCallback(function (state) {\n      return state.type === undefined || state.type === router.type;\n    }, [router.type]);\n    var isStateInitialized = React.useCallback(function (state) {\n      return state !== undefined && state.stale === false && isStateValid(state);\n    }, [isStateValid]);\n\n    var _React$useContext = React.useContext(_BaseNavigationContainer.NavigationStateContext),\n        currentState = _React$useContext.state,\n        getCurrentState = _React$useContext.getState,\n        setState = _React$useContext.setState,\n        setKey = _React$useContext.setKey,\n        getKey = _React$useContext.getKey;\n\n    var previousStateRef = React.useRef();\n    var initializedStateRef = React.useRef();\n\n    if (initializedStateRef.current === undefined || currentState !== previousStateRef.current) {\n      initializedStateRef.current = currentState === undefined || !isStateValid(currentState) ? router.getInitialState({\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }) : router.getRehydratedState(currentState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n    }\n\n    React.useEffect(function () {\n      previousStateRef.current = currentState;\n    }, [currentState]);\n    var state = isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n    var nextState = state;\n\n    if (!isArrayEqual(state.routeNames, routeNames)) {\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n    }\n\n    if (previousRouteRef.current && route && route.params && typeof route.params.screen === 'string' && route.params !== previousRouteRef.current.params) {\n      var updatedState = router.getStateForAction(state, _routers.CommonActions.navigate(route.params.screen, route.params.params), {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }) : state;\n    }\n\n    var shouldUpdate = state !== nextState;\n    React.useEffect(function () {\n      if (shouldUpdate) {\n        setState(nextState);\n      }\n    }, [nextState, setState, shouldUpdate]);\n    state = nextState;\n    React.useEffect(function () {\n      setKey(navigatorKey);\n      return function () {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setState(undefined);\n        }\n      };\n    }, []);\n    var getState = React.useCallback(function () {\n      var currentState = getCurrentState();\n      return isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n    }, [getCurrentState, isStateInitialized]);\n    var emitter = (0, _useEventEmitter.default)(function (e) {\n      var _ref2;\n\n      var routeNames = [];\n\n      if (e.target) {\n        var _state$routes$find;\n\n        var name = (_state$routes$find = state.routes.find(function (route) {\n          return route.key === e.target;\n        })) == null ? void 0 : _state$routes$find.name;\n\n        if (name) {\n          routeNames.push(name);\n        }\n      } else {\n        routeNames.push.apply(routeNames, (0, _toConsumableArray2.default)(Object.keys(screens)));\n      }\n\n      var listeners = (_ref2 = []).concat.apply(_ref2, (0, _toConsumableArray2.default)(routeNames.map(function (name) {\n        var listeners = screens[name].listeners;\n        return listeners ? Object.keys(listeners).filter(function (type) {\n          return type === e.type;\n        }).map(function (type) {\n          return listeners[type];\n        }) : undefined;\n      }))).filter(function (cb, i, self) {\n        return cb && self.lastIndexOf(cb) === i;\n      });\n\n      listeners.forEach(function (listener) {\n        return listener == null ? void 0 : listener(e);\n      });\n    });\n    (0, _useFocusEvents.default)({\n      state: state,\n      emitter: emitter\n    });\n    React.useEffect(function () {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state: state\n        }\n      });\n    }, [emitter, state]);\n\n    var _useChildActionListen = (0, _useChildActionListeners.default)(),\n        actionListeners = _useChildActionListen.listeners,\n        addActionListener = _useChildActionListen.addListener;\n\n    var _useFocusedListeners = (0, _useFocusedListeners2.default)(),\n        focusedListeners = _useFocusedListeners.listeners,\n        addFocusedListener = _useFocusedListeners.addListener;\n\n    var _useStateGetters = (0, _useStateGetters2.default)(),\n        getStateForRoute = _useStateGetters.getStateForRoute,\n        addStateGetter = _useStateGetters.addStateGetter;\n\n    var onAction = (0, _useOnAction.default)({\n      router: router,\n      getState: getState,\n      setState: setState,\n      key: route == null ? void 0 : route.key,\n      listeners: actionListeners,\n      routerConfigOptions: {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.default)({\n      router: router,\n      key: route == null ? void 0 : route.key,\n      getState: getState,\n      setState: setState\n    });\n    var navigation = (0, _useNavigationHelpers.default)({\n      onAction: onAction,\n      getState: getState,\n      emitter: emitter,\n      router: router\n    });\n    (0, _useFocusedListenersChildrenAdapter.default)({\n      navigation: navigation,\n      focusedListeners: focusedListeners\n    });\n    (0, _useOnGetState.default)({\n      getState: getState,\n      getStateForRoute: getStateForRoute\n    });\n    var descriptors = (0, _useDescriptors.default)({\n      state: state,\n      screens: screens,\n      navigation: navigation,\n      screenOptions: options.screenOptions,\n      onAction: onAction,\n      getState: getState,\n      setState: setState,\n      onRouteFocus: onRouteFocus,\n      addActionListener: addActionListener,\n      addFocusedListener: addFocusedListener,\n      addStateGetter: addStateGetter,\n      router: router,\n      emitter: emitter\n    });\n    return {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    };\n  }\n});","lineCount":339,"map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,13,0],[25,0,14,0],[27,0,15,0],[29,0,16,0],[31,0,17,0],[33,0,18,0],[35,0,19,0],[37,0,20,0],[39,0,21,0],[41,0,22,0],[43,0,23,0],[45,0,24,0],[47,0,25,0],[49,0,26,0],[51,0,32,0],[53,0,33,0],[59,0,37,0,"PrivateValueStore"],[61,0,51,0],[61,6,51,6,"isArrayEqual"],[61,18,51,18],[61,21,51,21],[61,30,51,6,"isArrayEqual"],[61,42,51,21],[61,43,51,22,"a"],[61,44,51,21],[61,46,51,32,"b"],[61,47,51,21],[62,0,51,21],[62,11,52,2,"a"],[62,12,52,3],[62,13,52,4,"length"],[62,19,52,2],[62,24,52,15,"b"],[62,25,52,16],[62,26,52,17,"length"],[62,32,52,2],[62,36,52,27,"a"],[62,37,52,28],[62,38,52,29,"every"],[62,43,52,27],[62,44,52,35],[62,54,52,36,"it"],[62,56,52,35],[62,58,52,40,"index"],[62,63,52,35],[63,0,52,35],[63,13,52,50,"it"],[63,15,52,52],[63,20,52,57,"b"],[63,21,52,58],[63,22,52,59,"index"],[63,27,52,58],[63,28,52,35],[64,0,52,35],[64,5,52,27],[64,6,51,21],[65,0,51,21],[65,3,51,0],[67,0,59,0],[67,6,59,6,"getRouteConfigsFromChildren"],[67,33,59,33],[67,36,59,36],[67,45,59,6,"getRouteConfigsFromChildren"],[67,72,59,36],[67,73,64,2,"children"],[67,81,59,36],[67,83,65,5],[68,0,66,2],[68,8,66,8,"configs"],[68,15,66,15],[68,18,66,18,"React"],[68,23,66,23],[68,24,66,24,"Children"],[68,32,66,18],[68,33,66,33,"toArray"],[68,40,66,18],[68,41,66,41,"children"],[68,49,66,18],[68,51,66,51,"reduce"],[68,57,66,18],[68,58,68,4],[68,68,68,5,"acc"],[68,71,68,4],[68,73,68,10,"child"],[68,78,68,4],[68,80,68,20],[69,0,69,4],[69,10,69,8,"React"],[69,15,69,13],[69,16,69,14,"isValidElement"],[69,30,69,8],[69,31,69,29,"child"],[69,36,69,8],[69,37,69,4],[69,39,69,37],[70,0,70,6],[70,12,70,10,"child"],[70,17,70,15],[70,18,70,16,"type"],[70,22,70,10],[70,27,70,25,"Screen"],[70,42,70,6],[70,44,70,33],[71,0,73,8,"acc"],[71,10,73,8,"acc"],[71,13,73,11],[71,14,73,12,"push"],[71,18,73,8],[71,19,74,10,"child"],[71,24,74,15],[71,25,74,16,"props"],[71,30,73,8],[72,0,82,8],[72,17,82,15,"acc"],[72,20,82,8],[73,0,83,7],[75,0,85,6],[75,12,85,10,"child"],[75,17,85,15],[75,18,85,16,"type"],[75,22,85,10],[75,27,85,25,"React"],[75,32,85,30],[75,33,85,31,"Fragment"],[75,41,85,6],[75,43,85,41],[76,0,88,8,"acc"],[76,10,88,8,"acc"],[76,13,88,11],[76,14,88,12,"push"],[76,18,88,8],[76,25,88,8,"acc"],[76,28,88,11],[76,63,89,13,"getRouteConfigsFromChildren"],[76,90,89,40],[76,91,90,12,"child"],[76,96,90,17],[76,97,90,18,"props"],[76,102,90,12],[76,103,90,24,"children"],[76,111,89,40],[76,112,88,11],[76,114,88,8],[77,0,93,8],[77,17,93,15,"acc"],[77,20,93,8],[78,0,94,7],[79,0,95,5],[81,0,97,4],[81,12,97,10],[81,16,97,14,"Error"],[81,21,97,10],[81,108,100,8,"child"],[81,113,100,13],[81,114,100,14,"type"],[81,118,100,8],[81,122,100,22,"child"],[81,127,100,27],[81,128,100,28,"type"],[81,132,100,22],[81,133,100,33,"name"],[81,137,100,8],[81,140,100,40,"child"],[81,145,100,45],[81,146,100,46,"type"],[81,150,100,40],[81,151,100,51,"name"],[81,155,100,8],[81,158,100,58,"String"],[81,164,100,64],[81,165,100,65,"child"],[81,170,100,64],[81,171,97,10],[81,180,97,4],[82,0,103,3],[82,5,66,18],[82,7,103,5],[82,9,66,18],[82,10,66,2],[84,0,105,2],[84,8,105,6,"process"],[84,15,105,13],[84,16,105,14,"env"],[84,19,105,6],[84,20,105,18,"NODE_ENV"],[84,28,105,6],[84,33,105,31],[84,45,105,2],[84,47,105,45],[85,0,106,4,"configs"],[85,6,106,4,"configs"],[85,13,106,11],[85,14,106,12,"forEach"],[85,21,106,4],[85,22,106,20],[85,32,106,20,"config"],[85,38,106,26],[85,40,106,30],[86,0,106,30],[86,19,107,44,"config"],[86,25,106,30],[87,0,106,30],[87,12,107,14,"name"],[87,16,106,30],[87,24,107,14,"name"],[87,28,106,30],[88,0,106,30],[88,12,107,20,"children"],[88,20,106,30],[88,28,107,20,"children"],[88,36,106,30],[89,0,106,30],[89,12,107,30,"component"],[89,21,106,30],[89,29,107,30,"component"],[89,38,106,30],[91,0,109,6],[91,12,109,10],[91,19,109,17,"name"],[91,23,109,10],[91,28,109,26],[91,36,109,10],[91,40,109,38],[91,41,109,39,"name"],[91,45,109,6],[91,47,109,45],[92,0,110,8],[92,16,110,14],[92,20,110,18,"Error"],[92,25,110,14],[92,52,111,34,"JSON"],[92,56,111,38],[92,57,111,39,"stringify"],[92,66,111,34],[92,67,112,12,"name"],[92,71,111,34],[92,72,110,14],[92,126,110,8],[93,0,115,7],[95,0,117,6],[95,12,117,10,"children"],[95,20,117,18],[95,24,117,22],[95,28,117,10],[95,32,117,30,"component"],[95,41,117,39],[95,46,117,44,"undefined"],[95,55,117,6],[95,57,117,55],[96,0,118,8],[96,14,118,12,"children"],[96,22,118,20],[96,26,118,24],[96,30,118,12],[96,34,118,32,"component"],[96,43,118,41],[96,48,118,46,"undefined"],[96,57,118,8],[96,59,118,57],[97,0,119,10],[97,18,119,16],[97,22,119,20,"Error"],[97,27,119,16],[97,91,120,73,"name"],[97,95,119,16],[97,135,119,10],[98,0,122,9],[100,0,124,8],[100,14,124,12,"children"],[100,22,124,20],[100,26,124,24],[100,30,124,12],[100,34,124,32],[100,41,124,39,"children"],[100,49,124,32],[100,54,124,52],[100,64,124,8],[100,66,124,64],[101,0,125,10],[101,18,125,16],[101,22,125,20,"Error"],[101,27,125,16],[101,90,126,72,"name"],[101,94,125,16],[101,151,125,10],[102,0,128,9],[104,0,130,8],[104,14,130,12,"component"],[104,23,130,21],[104,28,130,26,"undefined"],[104,37,130,12],[104,41,130,39],[104,42,130,40],[104,75,130,59,"component"],[104,84,130,40],[104,85,130,8],[104,87,130,71],[105,0,131,10],[105,18,131,16],[105,22,131,20,"Error"],[105,27,131,16],[105,91,132,73,"name"],[105,95,131,16],[105,139,131,10],[106,0,134,9],[108,0,136,8],[108,14,136,12],[108,21,136,19,"component"],[108,30,136,12],[108,35,136,33],[108,45,136,12],[108,49,136,47,"component"],[108,58,136,56],[108,59,136,57,"name"],[108,63,136,47],[108,68,136,66],[108,79,136,8],[108,81,136,79],[109,0,140,10,"console"],[109,12,140,10,"console"],[109,19,140,17],[109,20,140,18,"warn"],[109,24,140,10],[109,112,141,97,"name"],[109,116,140,10],[110,0,143,9],[111,0,144,7],[111,9,117,6],[111,15,144,13],[112,0,145,8],[112,16,145,14],[112,20,145,18,"Error"],[112,25,145,14],[112,94,146,76,"name"],[112,98,145,14],[112,283,145,8],[113,0,148,7],[114,0,149,5],[114,7,106,4],[115,0,150,3],[117,0,152,2],[117,11,152,9,"configs"],[117,18,152,2],[118,0,153,1],[118,3,59,0],[120,0,162,15],[120,11,162,24,"useNavigationBuilder"],[120,31,162,15],[120,32,168,2,"createRouter"],[120,44,162,15],[120,46,169,2,"options"],[120,53,162,15],[120,55,170,2],[121,0,171,2],[121,8,171,8,"navigatorKey"],[121,20,171,20],[121,23,171,23],[121,59,171,2],[122,0,173,2],[122,8,173,8,"route"],[122,13,173,13],[122,16,173,16,"React"],[122,21,173,21],[122,22,173,22,"useContext"],[122,32,173,16],[122,33,173,33,"NavigationRouteContext"],[122,64,173,16],[122,65,173,2],[123,0,177,2],[123,8,177,8,"previousRouteRef"],[123,24,177,24],[123,27,177,27,"React"],[123,32,177,32],[123,33,177,33,"useRef"],[123,39,177,27],[123,40,177,40,"route"],[123,45,177,27],[123,46,177,2],[124,0,179,2,"React"],[124,4,179,2,"React"],[124,9,179,7],[124,10,179,8,"useEffect"],[124,19,179,2],[124,20,179,18],[124,32,179,24],[125,0,180,4,"previousRouteRef"],[125,6,180,4,"previousRouteRef"],[125,22,180,20],[125,23,180,21,"current"],[125,30,180,4],[125,33,180,31,"route"],[125,38,180,4],[126,0,181,3],[126,5,179,2],[126,7,181,5],[126,8,181,6,"route"],[126,13,181,5],[126,14,179,2],[127,0,170,2],[127,8,183,10,"children"],[127,16,170,2],[127,19,183,32,"options"],[127,26,170,2],[127,27,183,10,"children"],[127,35,170,2],[128,0,170,2],[128,8,183,23,"rest"],[128,12,170,2],[128,54,183,32,"options"],[128,61,170,2],[130,0,170,2],[130,24,184,30,"React"],[130,29,184,35],[130,30,184,36,"useRef"],[130,36,184,30],[130,37,185,4,"createRouter"],[130,49,185,16],[130,68,186,11,"rest"],[130,72,185,16],[130,78,187,10],[130,79,187,10,"route"],[130,84,187,15],[130,92,187,10],[130,104,187,10,"route"],[130,109,187,15],[130,110,187,17,"params"],[130,116,187,10],[130,121,187,27],[130,128,187,34,"route"],[130,133,187,39],[130,134,187,40,"params"],[130,140,187,34],[130,141,187,47,"screen"],[130,147,187,27],[130,152,187,58],[130,160,187,10],[130,163,188,10],[131,0,188,12,"initialRouteName"],[131,6,188,12,"initialRouteName"],[131,22,188,28],[131,24,188,30,"route"],[131,29,188,35],[131,30,188,36,"params"],[131,36,188,30],[131,37,188,43,"screen"],[132,0,188,10],[132,5,187,10],[132,8,189,10],[132,12,185,16],[132,14,184,30],[132,15,170,2],[133,0,170,2],[133,8,184,19,"router"],[133,14,170,2],[133,31,184,10,"current"],[133,38,170,2],[135,0,193,2],[135,8,193,8,"routeConfigs"],[135,20,193,20],[135,23,193,23,"getRouteConfigsFromChildren"],[135,50,193,50],[135,51,197,4,"children"],[135,59,193,50],[135,60,193,2],[136,0,199,2],[136,8,199,8,"screens"],[136,15,199,15],[136,18,199,18,"routeConfigs"],[136,30,199,30],[136,31,199,31,"reduce"],[136,37,199,18],[136,38,204,4],[136,48,204,5,"acc"],[136,51,204,4],[136,53,204,10,"config"],[136,59,204,4],[136,61,204,21],[137,0,205,4],[137,10,205,8,"config"],[137,16,205,14],[137,17,205,15,"name"],[137,21,205,8],[137,25,205,23,"acc"],[137,28,205,4],[137,30,205,28],[138,0,206,6],[138,14,206,12],[138,18,206,16,"Error"],[138,23,206,12],[138,135,207,117,"config"],[138,141,207,123],[138,142,207,124,"name"],[138,146,206,12],[138,154,206,6],[139,0,209,5],[141,0,211,4,"acc"],[141,6,211,4,"acc"],[141,9,211,7],[141,10,211,8,"config"],[141,16,211,14],[141,17,211,15,"name"],[141,21,211,7],[141,22,211,4],[141,25,211,23,"config"],[141,31,211,4],[142,0,212,4],[142,13,212,11,"acc"],[142,16,212,4],[143,0,213,3],[143,5,199,18],[143,7,213,5],[143,9,199,18],[143,10,199,2],[144,0,215,2],[144,8,215,8,"routeNames"],[144,18,215,18],[144,21,215,21,"routeConfigs"],[144,33,215,33],[144,34,215,34,"map"],[144,37,215,21],[144,38,215,38],[144,48,215,38,"config"],[144,54,215,44],[145,0,215,44],[145,13,215,48,"config"],[145,19,215,54],[145,20,215,55,"name"],[145,24,215,44],[146,0,215,44],[146,5,215,21],[146,6,215,2],[147,0,216,2],[147,8,216,8,"routeParamList"],[147,22,216,22],[147,25,216,25,"routeNames"],[147,35,216,35],[147,36,216,36,"reduce"],[147,42,216,25],[147,43,217,4],[147,53,217,5,"acc"],[147,56,217,4],[147,58,217,10,"curr"],[147,62,217,4],[147,64,217,19],[148,0,217,19],[148,10,218,14,"initialParams"],[148,23,217,19],[148,26,218,32,"screens"],[148,33,218,39],[148,34,218,40,"curr"],[148,38,218,39],[148,39,217,19],[148,40,218,14,"initialParams"],[148,53,217,19],[149,0,219,6],[149,10,219,12,"initialParamsFromParams"],[149,33,219,35],[149,36,220,8],[149,37,220,8,"route"],[149,42,220,13],[149,50,220,8],[149,62,220,8,"route"],[149,67,220,13],[149,68,220,15,"params"],[149,74,220,8],[149,79,220,25,"route"],[149,84,220,30],[149,85,220,31,"params"],[149,91,220,25],[149,92,220,38,"screen"],[149,98,220,25],[149,103,220,49,"curr"],[149,107,220,8],[149,110,221,12,"route"],[149,115,221,17],[149,116,221,18,"params"],[149,122,221,12],[149,123,221,25,"params"],[149,129,220,8],[149,132,222,12,"undefined"],[149,141,219,6],[150,0,224,6,"acc"],[150,6,224,6,"acc"],[150,9,224,9],[150,10,224,10,"curr"],[150,14,224,9],[150,15,224,6],[150,18,225,8,"initialParams"],[150,31,225,21],[150,36,225,26,"undefined"],[150,45,225,8],[150,49,225,39,"initialParamsFromParams"],[150,72,225,62],[150,77,225,67,"undefined"],[150,86,225,8],[150,107,227,17,"initialParams"],[150,120,225,8],[150,126,228,17,"initialParamsFromParams"],[150,149,225,8],[150,153,230,12,"undefined"],[150,162,224,6],[151,0,232,6],[151,13,232,13,"acc"],[151,16,232,6],[152,0,233,5],[152,5,216,25],[152,7,234,4],[152,9,216,25],[152,10,216,2],[154,0,237,2],[154,8,237,6],[154,9,237,7,"routeNames"],[154,19,237,17],[154,20,237,18,"length"],[154,26,237,2],[154,28,237,26],[155,0,238,4],[155,12,238,10],[155,16,238,14,"Error"],[155,21,238,10],[155,22,239,6],[155,114,238,10],[155,115,238,4],[156,0,241,3],[158,0,243,2],[158,8,243,8,"isStateValid"],[158,20,243,20],[158,23,243,23,"React"],[158,28,243,28],[158,29,243,29,"useCallback"],[158,40,243,23],[158,41,244,4],[158,51,244,4,"state"],[158,56,244,9],[159,0,244,9],[159,13,244,13,"state"],[159,18,244,18],[159,19,244,19,"type"],[159,23,244,13],[159,28,244,28,"undefined"],[159,37,244,13],[159,41,244,41,"state"],[159,46,244,46],[159,47,244,47,"type"],[159,51,244,41],[159,56,244,56,"router"],[159,62,244,62],[159,63,244,63,"type"],[159,67,244,9],[160,0,244,9],[160,5,243,23],[160,7,245,4],[160,8,245,5,"router"],[160,14,245,11],[160,15,245,12,"type"],[160,19,245,4],[160,20,243,23],[160,21,243,2],[161,0,248,2],[161,8,248,8,"isStateInitialized"],[161,26,248,26],[161,29,248,29,"React"],[161,34,248,34],[161,35,248,35,"useCallback"],[161,46,248,29],[161,47,249,4],[161,57,249,4,"state"],[161,62,249,9],[162,0,249,9],[162,13,250,6,"state"],[162,18,250,11],[162,23,250,16,"undefined"],[162,32,250,6],[162,36,250,29,"state"],[162,41,250,34],[162,42,250,35,"stale"],[162,47,250,29],[162,52,250,45],[162,57,250,6],[162,61,250,54,"isStateValid"],[162,73,250,66],[162,74,250,67,"state"],[162,79,250,66],[162,80,249,9],[163,0,249,9],[163,5,248,29],[163,7,251,4],[163,8,251,5,"isStateValid"],[163,20,251,4],[163,21,248,29],[163,22,248,2],[165,0,170,2],[165,28,260,6,"React"],[165,33,260,11],[165,34,260,12,"useContext"],[165,44,260,6],[165,45,260,23,"NavigationStateContext"],[165,92,260,6],[165,93,170,2],[166,0,170,2],[166,8,255,11,"currentState"],[166,20,170,2],[166,41,255,4,"state"],[166,46,170,2],[167,0,170,2],[167,8,256,14,"getCurrentState"],[167,23,170,2],[167,44,256,4,"getState"],[167,52,170,2],[168,0,170,2],[168,8,257,4,"setState"],[168,16,170,2],[168,37,257,4,"setState"],[168,45,170,2],[169,0,170,2],[169,8,258,4,"setKey"],[169,14,170,2],[169,35,258,4,"setKey"],[169,41,170,2],[170,0,170,2],[170,8,259,4,"getKey"],[170,14,170,2],[170,35,259,4,"getKey"],[170,41,170,2],[172,0,262,2],[172,8,262,8,"previousStateRef"],[172,24,262,24],[172,27,262,27,"React"],[172,32,262,32],[172,33,262,33,"useRef"],[172,39,262,27],[172,41,262,2],[173,0,265,2],[173,8,265,8,"initializedStateRef"],[173,27,265,27],[173,30,265,30,"React"],[173,35,265,35],[173,36,265,36,"useRef"],[173,42,265,30],[173,44,265,2],[175,0,267,2],[175,8,268,4,"initializedStateRef"],[175,27,268,23],[175,28,268,24,"current"],[175,35,268,4],[175,40,268,36,"undefined"],[175,49,268,4],[175,53,269,4,"currentState"],[175,65,269,16],[175,70,269,21,"previousStateRef"],[175,86,269,37],[175,87,269,38,"current"],[175,94,267,2],[175,96,270,4],[176,0,275,4,"initializedStateRef"],[176,6,275,4,"initializedStateRef"],[176,25,275,23],[176,26,275,24,"current"],[176,33,275,4],[176,36,276,6,"currentState"],[176,48,276,18],[176,53,276,23,"undefined"],[176,62,276,6],[176,66,276,36],[176,67,276,37,"isStateValid"],[176,79,276,49],[176,80,276,50,"currentState"],[176,92,276,49],[176,93,276,6],[176,96,277,10,"router"],[176,102,277,16],[176,103,277,17,"getInitialState"],[176,118,277,10],[176,119,277,33],[177,0,278,12,"routeNames"],[177,8,278,12,"routeNames"],[177,18,278,22],[177,20,278,12,"routeNames"],[177,30,277,33],[178,0,279,12,"routeParamList"],[178,8,279,12,"routeParamList"],[178,22,279,26],[178,24,279,12,"routeParamList"],[179,0,277,33],[179,7,277,10],[179,8,276,6],[179,11,281,10,"router"],[179,17,281,16],[179,18,281,17,"getRehydratedState"],[179,36,281,10],[179,37,281,36,"currentState"],[179,49,281,10],[179,51,281,73],[180,0,282,12,"routeNames"],[180,8,282,12,"routeNames"],[180,18,282,22],[180,20,282,12,"routeNames"],[180,30,281,73],[181,0,283,12,"routeParamList"],[181,8,283,12,"routeParamList"],[181,22,283,26],[181,24,283,12,"routeParamList"],[182,0,281,73],[182,7,281,10],[182,8,275,4],[183,0,285,3],[185,0,287,2,"React"],[185,4,287,2,"React"],[185,9,287,7],[185,10,287,8,"useEffect"],[185,19,287,2],[185,20,287,18],[185,32,287,24],[186,0,288,4,"previousStateRef"],[186,6,288,4,"previousStateRef"],[186,22,288,20],[186,23,288,21,"current"],[186,30,288,4],[186,33,288,31,"currentState"],[186,45,288,4],[187,0,289,3],[187,5,287,2],[187,7,289,5],[187,8,289,6,"currentState"],[187,20,289,5],[187,21,287,2],[188,0,291,2],[188,8,291,6,"state"],[188,13,291,11],[188,16,295,4,"isStateInitialized"],[188,34,295,22],[188,35,295,23,"currentState"],[188,47,295,22],[188,48,295,4],[188,51,296,9,"currentState"],[188,63,295,4],[188,66,297,9,"initializedStateRef"],[188,85,297,28],[188,86,297,29,"current"],[188,93,291,2],[189,0,299,2],[189,8,299,6,"nextState"],[189,17,299,22],[189,20,299,25,"state"],[189,25,299,2],[191,0,301,2],[191,8,301,6],[191,9,301,7,"isArrayEqual"],[191,21,301,19],[191,22,301,20,"state"],[191,27,301,25],[191,28,301,26,"routeNames"],[191,38,301,19],[191,40,301,38,"routeNames"],[191,50,301,19],[191,51,301,2],[191,53,301,51],[192,0,303,4,"nextState"],[192,6,303,4,"nextState"],[192,15,303,13],[192,18,303,16,"router"],[192,24,303,22],[192,25,303,23,"getStateForRouteNamesChange"],[192,52,303,16],[192,53,303,51,"state"],[192,58,303,16],[192,60,303,58],[193,0,304,6,"routeNames"],[193,8,304,6,"routeNames"],[193,18,304,16],[193,20,304,6,"routeNames"],[193,30,303,58],[194,0,305,6,"routeParamList"],[194,8,305,6,"routeParamList"],[194,22,305,20],[194,24,305,6,"routeParamList"],[195,0,303,58],[195,7,303,16],[195,8,303,4],[196,0,307,3],[198,0,309,2],[198,8,310,4,"previousRouteRef"],[198,24,310,20],[198,25,310,21,"current"],[198,32,310,4],[198,36,311,4,"route"],[198,41,310,4],[198,45,312,4,"route"],[198,50,312,9],[198,51,312,10,"params"],[198,57,310,4],[198,61,313,4],[198,68,313,11,"route"],[198,73,313,16],[198,74,313,17,"params"],[198,80,313,11],[198,81,313,24,"screen"],[198,87,313,4],[198,92,313,35],[198,100,310,4],[198,104,314,4,"route"],[198,109,314,9],[198,110,314,10,"params"],[198,116,314,4],[198,121,314,21,"previousRouteRef"],[198,137,314,37],[198,138,314,38,"current"],[198,145,314,21],[198,146,314,46,"params"],[198,152,309,2],[198,154,315,4],[199,0,318,4],[199,10,318,10,"updatedState"],[199,22,318,22],[199,25,318,25,"router"],[199,31,318,31],[199,32,318,32,"getStateForAction"],[199,49,318,25],[199,50,319,6,"state"],[199,55,318,25],[199,57,320,6,"CommonActions"],[199,80,320,20,"navigate"],[199,88,320,6],[199,89,320,29,"route"],[199,94,320,34],[199,95,320,35,"params"],[199,101,320,29],[199,102,320,42,"screen"],[199,108,320,6],[199,110,320,50,"route"],[199,115,320,55],[199,116,320,56,"params"],[199,122,320,50],[199,123,320,63,"params"],[199,129,320,6],[199,130,318,25],[199,132,321,6],[200,0,322,8,"routeNames"],[200,8,322,8,"routeNames"],[200,18,322,18],[200,20,322,8,"routeNames"],[200,30,321,6],[201,0,323,8,"routeParamList"],[201,8,323,8,"routeParamList"],[201,22,323,22],[201,24,323,8,"routeParamList"],[202,0,321,6],[202,7,318,25],[202,8,318,4],[203,0,327,4,"nextState"],[203,6,327,4,"nextState"],[203,15,327,13],[203,18,328,6,"updatedState"],[203,30,328,18],[203,35,328,23],[203,39,328,6],[203,42,329,10,"router"],[203,48,329,16],[203,49,329,17,"getRehydratedState"],[203,67,329,10],[203,68,329,36,"updatedState"],[203,80,329,10],[203,82,329,50],[204,0,330,12,"routeNames"],[204,8,330,12,"routeNames"],[204,18,330,22],[204,20,330,12,"routeNames"],[204,30,329,50],[205,0,331,12,"routeParamList"],[205,8,331,12,"routeParamList"],[205,22,331,26],[205,24,331,12,"routeParamList"],[206,0,329,50],[206,7,329,10],[206,8,328,6],[206,11,333,10,"state"],[206,16,327,4],[207,0,334,3],[209,0,336,2],[209,8,336,8,"shouldUpdate"],[209,20,336,20],[209,23,336,23,"state"],[209,28,336,28],[209,33,336,33,"nextState"],[209,42,336,2],[210,0,338,2,"React"],[210,4,338,2,"React"],[210,9,338,7],[210,10,338,8,"useEffect"],[210,19,338,2],[210,20,338,18],[210,32,338,24],[211,0,339,4],[211,10,339,8,"shouldUpdate"],[211,22,339,4],[211,24,339,22],[212,0,341,6,"setState"],[212,8,341,6,"setState"],[212,16,341,14],[212,17,341,15,"nextState"],[212,26,341,14],[212,27,341,6],[213,0,342,5],[214,0,343,3],[214,5,338,2],[214,7,343,5],[214,8,343,6,"nextState"],[214,17,343,5],[214,19,343,17,"setState"],[214,27,343,5],[214,29,343,27,"shouldUpdate"],[214,41,343,5],[214,42,338,2],[215,0,348,2,"state"],[215,4,348,2,"state"],[215,9,348,7],[215,12,348,10,"nextState"],[215,21,348,2],[216,0,350,2,"React"],[216,4,350,2,"React"],[216,9,350,7],[216,10,350,8,"useEffect"],[216,19,350,2],[216,20,350,18],[216,32,350,24],[217,0,351,4,"setKey"],[217,6,351,4,"setKey"],[217,12,351,10],[217,13,351,11,"navigatorKey"],[217,25,351,10],[217,26,351,4],[218,0,353,4],[218,13,353,11],[218,25,353,17],[219,0,355,6],[219,12,355,10,"getCurrentState"],[219,27,355,25],[219,34,355,32,"undefined"],[219,43,355,10],[219,47,355,45,"getKey"],[219,53,355,51],[219,60,355,58,"navigatorKey"],[219,72,355,6],[219,74,355,72],[220,0,356,8,"setState"],[220,10,356,8,"setState"],[220,18,356,16],[220,19,356,17,"undefined"],[220,28,356,16],[220,29,356,8],[221,0,357,7],[222,0,358,5],[222,7,353,4],[223,0,360,3],[223,5,350,2],[223,7,360,5],[223,9,350,2],[224,0,362,2],[224,8,362,8,"getState"],[224,16,362,16],[224,19,362,19,"React"],[224,24,362,24],[224,25,362,25,"useCallback"],[224,36,362,19],[224,37,362,37],[224,49,362,50],[225,0,363,4],[225,10,363,10,"currentState"],[225,22,363,22],[225,25,363,25,"getCurrentState"],[225,40,363,40],[225,42,363,4],[226,0,365,4],[226,13,365,11,"isStateInitialized"],[226,31,365,29],[226,32,365,30,"currentState"],[226,44,365,29],[226,45,365,11],[226,48,366,9,"currentState"],[226,60,365,11],[226,63,367,9,"initializedStateRef"],[226,82,367,28],[226,83,367,29,"current"],[226,90,365,4],[227,0,368,3],[227,5,362,19],[227,7,368,5],[227,8,368,6,"getCurrentState"],[227,23,368,5],[227,25,368,23,"isStateInitialized"],[227,43,368,5],[227,44,362,19],[227,45,362,2],[228,0,370,2],[228,8,370,8,"emitter"],[228,15,370,15],[228,18,370,18],[228,48,370,34],[228,58,370,34,"e"],[228,59,370,35],[228,61,370,39],[229,0,370,39],[231,0,371,4],[231,10,371,8,"routeNames"],[231,20,371,18],[231,23,371,21],[231,25,371,4],[233,0,373,4],[233,10,373,8,"e"],[233,11,373,9],[233,12,373,10,"target"],[233,18,373,4],[233,20,373,18],[234,0,373,18],[236,0,374,6],[236,12,374,12,"name"],[236,16,374,16],[236,41,374,19,"state"],[236,46,374,24],[236,47,374,25,"routes"],[236,53,374,19],[236,54,374,32,"find"],[236,58,374,19],[236,59,374,37],[236,69,374,37,"route"],[236,74,374,42],[237,0,374,42],[237,17,374,46,"route"],[237,22,374,51],[237,23,374,52,"key"],[237,26,374,46],[237,31,374,60,"e"],[237,32,374,61],[237,33,374,62,"target"],[237,39,374,42],[238,0,374,42],[238,9,374,19],[238,10,374,16],[238,31,374,19],[238,50,374,71,"name"],[238,54,374,6],[240,0,376,6],[240,12,376,10,"name"],[240,16,376,6],[240,18,376,16],[241,0,377,8,"routeNames"],[241,10,377,8,"routeNames"],[241,20,377,18],[241,21,377,19,"push"],[241,25,377,8],[241,26,377,24,"name"],[241,30,377,8],[242,0,378,7],[243,0,379,5],[243,7,373,4],[243,13,379,11],[244,0,380,6,"routeNames"],[244,8,380,6,"routeNames"],[244,18,380,16],[244,19,380,17,"push"],[244,23,380,6],[244,30,380,6,"routeNames"],[244,40,380,16],[244,75,380,25,"Object"],[244,81,380,31],[244,82,380,32,"keys"],[244,86,380,25],[244,87,380,37,"screens"],[244,94,380,25],[244,95,380,16],[244,97,380,6],[245,0,381,5],[247,0,383,4],[247,10,383,10,"listeners"],[247,19,383,19],[247,22,383,22],[247,31,383,23],[247,33,383,22],[247,35,384,7,"concat"],[247,41,383,22],[247,88,385,11,"routeNames"],[247,98,385,21],[247,99,385,22,"map"],[247,102,385,11],[247,103,385,26],[247,113,385,26,"name"],[247,117,385,30],[247,119,385,34],[248,0,385,34],[248,12,386,18,"listeners"],[248,21,385,34],[248,24,386,32,"screens"],[248,31,386,39],[248,32,386,40,"name"],[248,36,386,39],[248,37,385,34],[248,38,386,18,"listeners"],[248,47,385,34],[249,0,388,10],[249,15,388,17,"listeners"],[249,24,388,26],[249,27,389,14,"Object"],[249,33,389,20],[249,34,389,21,"keys"],[249,38,389,14],[249,39,389,26,"listeners"],[249,48,389,14],[249,50,390,17,"filter"],[249,56,389,14],[249,57,390,24],[249,67,390,24,"type"],[249,71,390,28],[250,0,390,28],[250,17,390,32,"type"],[250,21,390,36],[250,26,390,41,"e"],[250,27,390,42],[250,28,390,43,"type"],[250,32,390,28],[251,0,390,28],[251,9,389,14],[251,11,391,17,"map"],[251,14,389,14],[251,15,391,21],[251,25,391,21,"type"],[251,29,391,25],[252,0,391,25],[252,17,391,29,"listeners"],[252,26,391,38],[252,27,391,39,"type"],[252,31,391,38],[252,32,391,25],[253,0,391,25],[253,9,389,14],[253,10,388,26],[253,13,392,14,"undefined"],[253,22,388,10],[254,0,393,9],[254,7,385,11],[254,8,383,22],[254,11,395,7,"filter"],[254,17,383,22],[254,18,395,14],[254,28,395,15,"cb"],[254,30,395,14],[254,32,395,19,"i"],[254,33,395,14],[254,35,395,22,"self"],[254,39,395,14],[255,0,395,14],[255,15,395,31,"cb"],[255,17,395,33],[255,21,395,37,"self"],[255,25,395,41],[255,26,395,42,"lastIndexOf"],[255,37,395,37],[255,38,395,54,"cb"],[255,40,395,37],[255,46,395,62,"i"],[255,47,395,14],[256,0,395,14],[256,7,383,22],[256,8,383,4],[258,0,397,4,"listeners"],[258,6,397,4,"listeners"],[258,15,397,13],[258,16,397,14,"forEach"],[258,23,397,4],[258,24,397,22],[258,34,397,22,"listener"],[258,42,397,30],[259,0,397,30],[259,15,397,34,"listener"],[259,23,397,30],[259,43,397,34,"listener"],[259,51,397,42],[259,52,397,45,"e"],[259,53,397,42],[259,54,397,30],[260,0,397,30],[260,7,397,4],[261,0,398,3],[261,5,370,18],[261,6,370,2],[262,0,400,2],[262,33,400,17],[263,0,400,19,"state"],[263,6,400,19,"state"],[263,11,400,24],[263,13,400,19,"state"],[263,18,400,17],[264,0,400,26,"emitter"],[264,6,400,26,"emitter"],[264,13,400,33],[264,15,400,26,"emitter"],[265,0,400,17],[265,5,400,2],[266,0,402,2,"React"],[266,4,402,2,"React"],[266,9,402,7],[266,10,402,8,"useEffect"],[266,19,402,2],[266,20,402,18],[266,32,402,24],[267,0,403,4,"emitter"],[267,6,403,4,"emitter"],[267,13,403,11],[267,14,403,12,"emit"],[267,18,403,4],[267,19,403,17],[268,0,403,19,"type"],[268,8,403,19,"type"],[268,12,403,23],[268,14,403,25],[268,21,403,17],[269,0,403,34,"data"],[269,8,403,34,"data"],[269,12,403,38],[269,14,403,40],[270,0,403,42,"state"],[270,10,403,42,"state"],[270,15,403,47],[270,17,403,42,"state"],[271,0,403,40],[272,0,403,17],[272,7,403,4],[273,0,404,3],[273,5,402,2],[273,7,404,5],[273,8,404,6,"emitter"],[273,15,404,5],[273,17,404,15,"state"],[273,22,404,5],[273,23,402,2],[275,0,170,2],[275,32,409,6],[275,71,170,2],[276,0,170,2],[276,8,407,15,"actionListeners"],[276,23,170,2],[276,48,407,4,"listeners"],[276,57,170,2],[277,0,170,2],[277,8,408,17,"addActionListener"],[277,25,170,2],[277,50,408,4,"addListener"],[277,61,170,2],[279,0,170,2],[279,31,414,6],[279,67,170,2],[280,0,170,2],[280,8,412,15,"focusedListeners"],[280,24,170,2],[280,48,412,4,"listeners"],[280,57,170,2],[281,0,170,2],[281,8,413,17,"addFocusedListener"],[281,26,170,2],[281,50,413,4,"addListener"],[281,61,170,2],[283,0,170,2],[283,27,416,47],[283,59,170,2],[284,0,170,2],[284,8,416,10,"getStateForRoute"],[284,24,170,2],[284,44,416,10,"getStateForRoute"],[284,60,170,2],[285,0,170,2],[285,8,416,28,"addStateGetter"],[285,22,170,2],[285,42,416,28,"addStateGetter"],[285,56,170,2],[287,0,418,2],[287,8,418,8,"onAction"],[287,16,418,16],[287,19,418,19],[287,45,418,31],[288,0,419,4,"router"],[288,6,419,4,"router"],[288,12,419,10],[288,14,419,4,"router"],[288,20,418,31],[289,0,420,4,"getState"],[289,6,420,4,"getState"],[289,14,420,12],[289,16,420,4,"getState"],[289,24,418,31],[290,0,421,4,"setState"],[290,6,421,4,"setState"],[290,14,421,12],[290,16,421,4,"setState"],[290,24,418,31],[291,0,422,4,"key"],[291,6,422,4,"key"],[291,9,422,7],[291,11,422,9,"route"],[291,16,422,7],[291,36,422,9,"route"],[291,41,422,14],[291,42,422,16,"key"],[291,45,418,31],[292,0,423,4,"listeners"],[292,6,423,4,"listeners"],[292,15,423,13],[292,17,423,15,"actionListeners"],[292,32,418,31],[293,0,424,4,"routerConfigOptions"],[293,6,424,4,"routerConfigOptions"],[293,25,424,23],[293,27,424,25],[294,0,425,6,"routeNames"],[294,8,425,6,"routeNames"],[294,18,425,16],[294,20,425,6,"routeNames"],[294,30,424,25],[295,0,426,6,"routeParamList"],[295,8,426,6,"routeParamList"],[295,22,426,20],[295,24,426,6,"routeParamList"],[296,0,424,25],[297,0,418,31],[297,5,418,19],[297,6,418,2],[298,0,430,2],[298,8,430,8,"onRouteFocus"],[298,20,430,20],[298,23,430,23],[298,53,430,39],[299,0,431,4,"router"],[299,6,431,4,"router"],[299,12,431,10],[299,14,431,4,"router"],[299,20,430,39],[300,0,432,4,"key"],[300,6,432,4,"key"],[300,9,432,7],[300,11,432,9,"route"],[300,16,432,7],[300,36,432,9,"route"],[300,41,432,14],[300,42,432,16,"key"],[300,45,430,39],[301,0,433,4,"getState"],[301,6,433,4,"getState"],[301,14,433,12],[301,16,433,4,"getState"],[301,24,430,39],[302,0,434,4,"setState"],[302,6,434,4,"setState"],[302,14,434,12],[302,16,434,4,"setState"],[303,0,430,39],[303,5,430,23],[303,6,430,2],[304,0,437,2],[304,8,437,8,"navigation"],[304,18,437,18],[304,21,437,21],[304,56,437,77],[305,0,438,4,"onAction"],[305,6,438,4,"onAction"],[305,14,438,12],[305,16,438,4,"onAction"],[305,24,437,77],[306,0,439,4,"getState"],[306,6,439,4,"getState"],[306,14,439,12],[306,16,439,4,"getState"],[306,24,437,77],[307,0,440,4,"emitter"],[307,6,440,4,"emitter"],[307,13,440,11],[307,15,440,4,"emitter"],[307,22,437,77],[308,0,441,4,"router"],[308,6,441,4,"router"],[308,12,441,10],[308,14,441,4,"router"],[309,0,437,77],[309,5,437,21],[309,6,437,2],[310,0,444,2],[310,53,444,37],[311,0,445,4,"navigation"],[311,6,445,4,"navigation"],[311,16,445,14],[311,18,445,4,"navigation"],[311,28,444,37],[312,0,446,4,"focusedListeners"],[312,6,446,4,"focusedListeners"],[312,22,446,20],[312,24,446,4,"focusedListeners"],[313,0,444,37],[313,5,444,2],[314,0,449,2],[314,32,449,16],[315,0,450,4,"getState"],[315,6,450,4,"getState"],[315,14,450,12],[315,16,450,4,"getState"],[315,24,449,16],[316,0,451,4,"getStateForRoute"],[316,6,451,4,"getStateForRoute"],[316,22,451,20],[316,24,451,4,"getStateForRoute"],[317,0,449,16],[317,5,449,2],[318,0,454,2],[318,8,454,8,"descriptors"],[318,19,454,19],[318,22,454,22],[318,51,454,69],[319,0,455,4,"state"],[319,6,455,4,"state"],[319,11,455,9],[319,13,455,4,"state"],[319,18,454,69],[320,0,456,4,"screens"],[320,6,456,4,"screens"],[320,13,456,11],[320,15,456,4,"screens"],[320,22,454,69],[321,0,457,4,"navigation"],[321,6,457,4,"navigation"],[321,16,457,14],[321,18,457,4,"navigation"],[321,28,454,69],[322,0,458,4,"screenOptions"],[322,6,458,4,"screenOptions"],[322,19,458,17],[322,21,458,19,"options"],[322,28,458,26],[322,29,458,27,"screenOptions"],[322,42,454,69],[323,0,459,4,"onAction"],[323,6,459,4,"onAction"],[323,14,459,12],[323,16,459,4,"onAction"],[323,24,454,69],[324,0,460,4,"getState"],[324,6,460,4,"getState"],[324,14,460,12],[324,16,460,4,"getState"],[324,24,454,69],[325,0,461,4,"setState"],[325,6,461,4,"setState"],[325,14,461,12],[325,16,461,4,"setState"],[325,24,454,69],[326,0,462,4,"onRouteFocus"],[326,6,462,4,"onRouteFocus"],[326,18,462,16],[326,20,462,4,"onRouteFocus"],[326,32,454,69],[327,0,463,4,"addActionListener"],[327,6,463,4,"addActionListener"],[327,23,463,21],[327,25,463,4,"addActionListener"],[327,42,454,69],[328,0,464,4,"addFocusedListener"],[328,6,464,4,"addFocusedListener"],[328,24,464,22],[328,26,464,4,"addFocusedListener"],[328,44,454,69],[329,0,465,4,"addStateGetter"],[329,6,465,4,"addStateGetter"],[329,20,465,18],[329,22,465,4,"addStateGetter"],[329,36,454,69],[330,0,466,4,"router"],[330,6,466,4,"router"],[330,12,466,10],[330,14,466,4,"router"],[330,20,454,69],[331,0,467,4,"emitter"],[331,6,467,4,"emitter"],[331,13,467,11],[331,15,467,4,"emitter"],[332,0,454,69],[332,5,454,22],[332,6,454,2],[333,0,470,2],[333,11,470,9],[334,0,471,4,"state"],[334,6,471,4,"state"],[334,11,471,9],[334,13,471,4,"state"],[334,18,470,9],[335,0,472,4,"navigation"],[335,6,472,4,"navigation"],[335,16,472,14],[335,18,472,4,"navigation"],[335,28,470,9],[336,0,473,4,"descriptors"],[336,6,473,4,"descriptors"],[336,17,473,15],[336,19,473,4,"descriptors"],[337,0,470,9],[337,5,470,2],[338,0,475,1]],"functionMap":{"names":["<global>","isArrayEqual","a.every$argument_0","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","React.useEffect$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","React.useCallback$argument_0","<anonymous>","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","Object.keys.filter$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0"],"mappings":"AAA;qBCkD;mCCC,8BD,CD;oCGO;ICS;GDmC;oBEG;KF2C;CHI;eMS;kBCiB;GDE;IEuB;GFS;sCGE,qBH;IIE;KJgB;IKW,+DL;IKK;yELC;kBCqC;GDE;kBCiD;GDK;kBCO;WKG;KLK;GDE;qCKE;GLM;kCOE;qCCI,+BD;0BEW;wBCK,uBD;qBEC,uBF;SFE;cKE,iDL;sBME,yBN;GPC;kBCI;GDE;CNuE"}},"type":"js/module"}]}