{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-is","data":{"isAsync":false}},{"name":"@react-navigation/routers","data":{"isAsync":false}},{"name":"./BaseNavigationContainer","data":{"isAsync":false}},{"name":"./NavigationRouteContext","data":{"isAsync":false}},{"name":"./Screen","data":{"isAsync":false}},{"name":"./useEventEmitter","data":{"isAsync":false}},{"name":"./useRegisterNavigator","data":{"isAsync":false}},{"name":"./useDescriptors","data":{"isAsync":false}},{"name":"./useNavigationHelpers","data":{"isAsync":false}},{"name":"./useOnAction","data":{"isAsync":false}},{"name":"./useFocusEvents","data":{"isAsync":false}},{"name":"./useOnRouteFocus","data":{"isAsync":false}},{"name":"./useChildActionListeners","data":{"isAsync":false}},{"name":"./useFocusedListeners","data":{"isAsync":false}},{"name":"./useFocusedListenersChildrenAdapter","data":{"isAsync":false}},{"name":"./types","data":{"isAsync":false}},{"name":"./useStateGetters","data":{"isAsync":false}},{"name":"./useOnGetState","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useNavigationBuilder;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"react\"));\n\n  var _reactIs = _$$_REQUIRE(_dependencyMap[6], \"react-is\");\n\n  var _routers = _$$_REQUIRE(_dependencyMap[7], \"@react-navigation/routers\");\n\n  var _BaseNavigationContainer = _$$_REQUIRE(_dependencyMap[8], \"./BaseNavigationContainer\");\n\n  var _NavigationRouteContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./NavigationRouteContext\"));\n\n  var _Screen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./Screen\"));\n\n  var _useEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./useEventEmitter\"));\n\n  var _useRegisterNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./useRegisterNavigator\"));\n\n  var _useDescriptors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./useDescriptors\"));\n\n  var _useNavigationHelpers = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./useNavigationHelpers\"));\n\n  var _useOnAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./useOnAction\"));\n\n  var _useFocusEvents = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./useFocusEvents\"));\n\n  var _useOnRouteFocus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./useOnRouteFocus\"));\n\n  var _useChildActionListeners = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./useChildActionListeners\"));\n\n  var _useFocusedListeners2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./useFocusedListeners\"));\n\n  var _useFocusedListenersChildrenAdapter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./useFocusedListenersChildrenAdapter\"));\n\n  var _types = _$$_REQUIRE(_dependencyMap[21], \"./types\");\n\n  var _useStateGetters2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./useStateGetters\"));\n\n  var _useOnGetState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./useOnGetState\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  _types.PrivateValueStore;\n\n  var isArrayEqual = function isArrayEqual(a, b) {\n    return a.length === b.length && a.every(function (it, index) {\n      return it === b[index];\n    });\n  };\n\n  var getRouteConfigsFromChildren = function getRouteConfigsFromChildren(children) {\n    var configs = React.Children.toArray(children).reduce(function (acc, child) {\n      if (React.isValidElement(child)) {\n        if (child.type === _Screen.default) {\n          acc.push(child.props);\n          return acc;\n        }\n\n        if (child.type === React.Fragment) {\n          acc.push.apply(acc, (0, _toConsumableArray2.default)(getRouteConfigsFromChildren(child.props.children)));\n          return acc;\n        }\n      }\n\n      throw new Error(\"A navigator can only contain 'Screen' components as its direct children (found '\" + (child.type && child.type.name ? child.type.name : String(child)) + \"')\");\n    }, []);\n\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(function (config) {\n        var _ref = config,\n            name = _ref.name,\n            children = _ref.children,\n            component = _ref.component;\n\n        if (typeof name !== 'string' || !name) {\n          throw new Error(\"Got an invalid name (\" + JSON.stringify(name) + \") for the screen. It must be a non-empty string.\");\n        }\n\n        if (children != null || component !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(\"Got both 'component' and 'children' props for the screen '\" + name + \"'. You must pass only one of them.\");\n          }\n\n          if (children != null && typeof children !== 'function') {\n            throw new Error(\"Got an invalid value for 'children' prop for the screen '\" + name + \"'. It must be a function returning a React Element.\");\n          }\n\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(\"Got an invalid value for 'component' prop for the screen '\" + name + \"'. It must be a valid React Component.\");\n          }\n\n          if (typeof component === 'function' && component.name === 'component') {\n            console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\" + name + \"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");\n          }\n        } else {\n          throw new Error(\"Couldn't find a 'component' or 'children' prop for the screen '\" + name + \"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");\n        }\n      });\n    }\n\n    return configs;\n  };\n\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _useRegisterNavigator.default)();\n    var route = React.useContext(_NavigationRouteContext.default);\n    var previousRouteRef = React.useRef(route);\n    React.useEffect(function () {\n      previousRouteRef.current = route;\n    }, [route]);\n    var children = options.children,\n        rest = (0, _objectWithoutProperties2.default)(options, [\"children\"]);\n\n    var _React$useRef = React.useRef(createRouter(_objectSpread({}, rest, {}, (route == null ? void 0 : route.params) && typeof route.params.screen === 'string' ? {\n      initialRouteName: route.params.screen\n    } : null))),\n        router = _React$useRef.current;\n\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var screens = routeConfigs.reduce(function (acc, config) {\n      if (config.name in acc) {\n        throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\" + config.name + \"')\");\n      }\n\n      acc[config.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(function (config) {\n      return config.name;\n    });\n    var routeParamList = routeNames.reduce(function (acc, curr) {\n      var initialParams = screens[curr].initialParams;\n      var initialParamsFromParams = (route == null ? void 0 : route.params) && route.params.screen === curr ? route.params.params : undefined;\n      acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? _objectSpread({}, initialParams, {}, initialParamsFromParams) : undefined;\n      return acc;\n    }, {});\n\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n\n    var isStateValid = React.useCallback(function (state) {\n      return state.type === undefined || state.type === router.type;\n    }, [router.type]);\n    var isStateInitialized = React.useCallback(function (state) {\n      return state !== undefined && state.stale === false && isStateValid(state);\n    }, [isStateValid]);\n\n    var _React$useContext = React.useContext(_BaseNavigationContainer.NavigationStateContext),\n        currentState = _React$useContext.state,\n        getCurrentState = _React$useContext.getState,\n        setState = _React$useContext.setState,\n        setKey = _React$useContext.setKey,\n        getKey = _React$useContext.getKey;\n\n    var previousStateRef = React.useRef();\n    var initializedStateRef = React.useRef();\n\n    if (initializedStateRef.current === undefined || currentState !== previousStateRef.current) {\n      initializedStateRef.current = currentState === undefined || !isStateValid(currentState) ? router.getInitialState({\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }) : router.getRehydratedState(currentState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n    }\n\n    React.useEffect(function () {\n      previousStateRef.current = currentState;\n    }, [currentState]);\n    var state = isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n    var nextState = state;\n\n    if (!isArrayEqual(state.routeNames, routeNames)) {\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n    }\n\n    if (previousRouteRef.current && route && route.params && typeof route.params.screen === 'string' && route.params !== previousRouteRef.current.params) {\n      var updatedState = router.getStateForAction(state, _routers.CommonActions.navigate(route.params.screen, route.params.params), {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }) : state;\n    }\n\n    var shouldUpdate = state !== nextState;\n    React.useEffect(function () {\n      if (shouldUpdate) {\n        setState(nextState);\n      }\n    }, [nextState, setState, shouldUpdate]);\n    state = nextState;\n    React.useEffect(function () {\n      setKey(navigatorKey);\n      return function () {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setState(undefined);\n        }\n      };\n    }, []);\n    var getState = React.useCallback(function () {\n      var currentState = getCurrentState();\n      return isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n    }, [getCurrentState, isStateInitialized]);\n    var emitter = (0, _useEventEmitter.default)(function (e) {\n      var _ref2;\n\n      var routeNames = [];\n      var route;\n\n      if (e.target) {\n        var _route;\n\n        route = state.routes.find(function (route) {\n          return route.key === e.target;\n        });\n\n        if ((_route = route) == null ? void 0 : _route.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push.apply(routeNames, (0, _toConsumableArray2.default)(Object.keys(screens).filter(function (name) {\n          var _route2;\n\n          return ((_route2 = route) == null ? void 0 : _route2.name) === name;\n        })));\n      }\n\n      if (route == null) {\n        return;\n      }\n\n      var navigation = descriptors[route.key].navigation;\n\n      var listeners = (_ref2 = []).concat.apply(_ref2, (0, _toConsumableArray2.default)(routeNames.map(function (name) {\n        var listeners = screens[name].listeners;\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation: navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(function (type) {\n          return type === e.type;\n        }).map(function (type) {\n          return map == null ? void 0 : map[type];\n        }) : undefined;\n      }))).filter(function (cb, i, self) {\n        return cb && self.lastIndexOf(cb) === i;\n      });\n\n      listeners.forEach(function (listener) {\n        return listener == null ? void 0 : listener(e);\n      });\n    });\n    (0, _useFocusEvents.default)({\n      state: state,\n      emitter: emitter\n    });\n    React.useEffect(function () {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state: state\n        }\n      });\n    }, [emitter, state]);\n\n    var _useChildActionListen = (0, _useChildActionListeners.default)(),\n        actionListeners = _useChildActionListen.listeners,\n        addActionListener = _useChildActionListen.addListener;\n\n    var _useFocusedListeners = (0, _useFocusedListeners2.default)(),\n        focusedListeners = _useFocusedListeners.listeners,\n        addFocusedListener = _useFocusedListeners.addListener;\n\n    var _useStateGetters = (0, _useStateGetters2.default)(),\n        getStateForRoute = _useStateGetters.getStateForRoute,\n        addStateGetter = _useStateGetters.addStateGetter;\n\n    var onAction = (0, _useOnAction.default)({\n      router: router,\n      getState: getState,\n      setState: setState,\n      key: route == null ? void 0 : route.key,\n      listeners: actionListeners,\n      routerConfigOptions: {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.default)({\n      router: router,\n      key: route == null ? void 0 : route.key,\n      getState: getState,\n      setState: setState\n    });\n    var navigation = (0, _useNavigationHelpers.default)({\n      onAction: onAction,\n      getState: getState,\n      emitter: emitter,\n      router: router\n    });\n    (0, _useFocusedListenersChildrenAdapter.default)({\n      navigation: navigation,\n      focusedListeners: focusedListeners\n    });\n    (0, _useOnGetState.default)({\n      getState: getState,\n      getStateForRoute: getStateForRoute\n    });\n    var descriptors = (0, _useDescriptors.default)({\n      state: state,\n      screens: screens,\n      navigation: navigation,\n      screenOptions: options.screenOptions,\n      onAction: onAction,\n      getState: getState,\n      setState: setState,\n      onRouteFocus: onRouteFocus,\n      addActionListener: addActionListener,\n      addFocusedListener: addFocusedListener,\n      addStateGetter: addStateGetter,\n      router: router,\n      emitter: emitter\n    });\n    return {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    };\n  }\n});","lineCount":355,"map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,14,0],[25,0,15,0],[27,0,16,0],[29,0,17,0],[31,0,18,0],[33,0,19,0],[35,0,20,0],[37,0,21,0],[39,0,22,0],[41,0,23,0],[43,0,24,0],[45,0,25,0],[47,0,26,0],[49,0,27,0],[51,0,33,0],[53,0,34,0],[59,0,38,0,"PrivateValueStore"],[61,0,52,0],[61,6,52,6,"isArrayEqual"],[61,18,52,18],[61,21,52,21],[61,30,52,6,"isArrayEqual"],[61,42,52,21],[61,43,52,22,"a"],[61,44,52,21],[61,46,52,32,"b"],[61,47,52,21],[62,0,52,21],[62,11,53,2,"a"],[62,12,53,3],[62,13,53,4,"length"],[62,19,53,2],[62,24,53,15,"b"],[62,25,53,16],[62,26,53,17,"length"],[62,32,53,2],[62,36,53,27,"a"],[62,37,53,28],[62,38,53,29,"every"],[62,43,53,27],[62,44,53,35],[62,54,53,36,"it"],[62,56,53,35],[62,58,53,40,"index"],[62,63,53,35],[63,0,53,35],[63,13,53,50,"it"],[63,15,53,52],[63,20,53,57,"b"],[63,21,53,58],[63,22,53,59,"index"],[63,27,53,58],[63,28,53,35],[64,0,53,35],[64,5,53,27],[64,6,52,21],[65,0,52,21],[65,3,52,0],[67,0,60,0],[67,6,60,6,"getRouteConfigsFromChildren"],[67,33,60,33],[67,36,60,36],[67,45,60,6,"getRouteConfigsFromChildren"],[67,72,60,36],[67,73,65,2,"children"],[67,81,60,36],[67,83,66,5],[68,0,67,2],[68,8,67,8,"configs"],[68,15,67,15],[68,18,67,18,"React"],[68,23,67,23],[68,24,67,24,"Children"],[68,32,67,18],[68,33,67,33,"toArray"],[68,40,67,18],[68,41,67,41,"children"],[68,49,67,18],[68,51,67,51,"reduce"],[68,57,67,18],[68,58,69,4],[68,68,69,5,"acc"],[68,71,69,4],[68,73,69,10,"child"],[68,78,69,4],[68,80,69,20],[69,0,70,4],[69,10,70,8,"React"],[69,15,70,13],[69,16,70,14,"isValidElement"],[69,30,70,8],[69,31,70,29,"child"],[69,36,70,8],[69,37,70,4],[69,39,70,37],[70,0,71,6],[70,12,71,10,"child"],[70,17,71,15],[70,18,71,16,"type"],[70,22,71,10],[70,27,71,25,"Screen"],[70,42,71,6],[70,44,71,33],[71,0,74,8,"acc"],[71,10,74,8,"acc"],[71,13,74,11],[71,14,74,12,"push"],[71,18,74,8],[71,19,75,10,"child"],[71,24,75,15],[71,25,75,16,"props"],[71,30,74,8],[72,0,83,8],[72,17,83,15,"acc"],[72,20,83,8],[73,0,84,7],[75,0,86,6],[75,12,86,10,"child"],[75,17,86,15],[75,18,86,16,"type"],[75,22,86,10],[75,27,86,25,"React"],[75,32,86,30],[75,33,86,31,"Fragment"],[75,41,86,6],[75,43,86,41],[76,0,89,8,"acc"],[76,10,89,8,"acc"],[76,13,89,11],[76,14,89,12,"push"],[76,18,89,8],[76,25,89,8,"acc"],[76,28,89,11],[76,63,90,13,"getRouteConfigsFromChildren"],[76,90,90,40],[76,91,91,12,"child"],[76,96,91,17],[76,97,91,18,"props"],[76,102,91,12],[76,103,91,24,"children"],[76,111,90,40],[76,112,89,11],[76,114,89,8],[77,0,94,8],[77,17,94,15,"acc"],[77,20,94,8],[78,0,95,7],[79,0,96,5],[81,0,98,4],[81,12,98,10],[81,16,98,14,"Error"],[81,21,98,10],[81,108,101,8,"child"],[81,113,101,13],[81,114,101,14,"type"],[81,118,101,8],[81,122,101,22,"child"],[81,127,101,27],[81,128,101,28,"type"],[81,132,101,22],[81,133,101,33,"name"],[81,137,101,8],[81,140,101,40,"child"],[81,145,101,45],[81,146,101,46,"type"],[81,150,101,40],[81,151,101,51,"name"],[81,155,101,8],[81,158,101,58,"String"],[81,164,101,64],[81,165,101,65,"child"],[81,170,101,64],[81,171,98,10],[81,180,98,4],[82,0,104,3],[82,5,67,18],[82,7,104,5],[82,9,67,18],[82,10,67,2],[84,0,106,2],[84,8,106,6,"process"],[84,15,106,13],[84,16,106,14,"env"],[84,19,106,6],[84,20,106,18,"NODE_ENV"],[84,28,106,6],[84,33,106,31],[84,45,106,2],[84,47,106,45],[85,0,107,4,"configs"],[85,6,107,4,"configs"],[85,13,107,11],[85,14,107,12,"forEach"],[85,21,107,4],[85,22,107,20],[85,32,107,21,"config"],[85,38,107,20],[85,40,107,32],[86,0,107,32],[86,19,108,44,"config"],[86,25,107,32],[87,0,107,32],[87,12,108,14,"name"],[87,16,107,32],[87,24,108,14,"name"],[87,28,107,32],[88,0,107,32],[88,12,108,20,"children"],[88,20,107,32],[88,28,108,20,"children"],[88,36,107,32],[89,0,107,32],[89,12,108,30,"component"],[89,21,107,32],[89,29,108,30,"component"],[89,38,107,32],[91,0,110,6],[91,12,110,10],[91,19,110,17,"name"],[91,23,110,10],[91,28,110,26],[91,36,110,10],[91,40,110,38],[91,41,110,39,"name"],[91,45,110,6],[91,47,110,45],[92,0,111,8],[92,16,111,14],[92,20,111,18,"Error"],[92,25,111,14],[92,52,112,34,"JSON"],[92,56,112,38],[92,57,112,39,"stringify"],[92,66,112,34],[92,67,113,12,"name"],[92,71,112,34],[92,72,111,14],[92,126,111,8],[93,0,116,7],[95,0,118,6],[95,12,118,10,"children"],[95,20,118,18],[95,24,118,22],[95,28,118,10],[95,32,118,30,"component"],[95,41,118,39],[95,46,118,44,"undefined"],[95,55,118,6],[95,57,118,55],[96,0,119,8],[96,14,119,12,"children"],[96,22,119,20],[96,26,119,24],[96,30,119,12],[96,34,119,32,"component"],[96,43,119,41],[96,48,119,46,"undefined"],[96,57,119,8],[96,59,119,57],[97,0,120,10],[97,18,120,16],[97,22,120,20,"Error"],[97,27,120,16],[97,91,121,73,"name"],[97,95,120,16],[97,135,120,10],[98,0,123,9],[100,0,125,8],[100,14,125,12,"children"],[100,22,125,20],[100,26,125,24],[100,30,125,12],[100,34,125,32],[100,41,125,39,"children"],[100,49,125,32],[100,54,125,52],[100,64,125,8],[100,66,125,64],[101,0,126,10],[101,18,126,16],[101,22,126,20,"Error"],[101,27,126,16],[101,90,127,72,"name"],[101,94,126,16],[101,151,126,10],[102,0,129,9],[104,0,131,8],[104,14,131,12,"component"],[104,23,131,21],[104,28,131,26,"undefined"],[104,37,131,12],[104,41,131,39],[104,42,131,40],[104,75,131,59,"component"],[104,84,131,40],[104,85,131,8],[104,87,131,71],[105,0,132,10],[105,18,132,16],[105,22,132,20,"Error"],[105,27,132,16],[105,91,133,73,"name"],[105,95,132,16],[105,139,132,10],[106,0,135,9],[108,0,137,8],[108,14,137,12],[108,21,137,19,"component"],[108,30,137,12],[108,35,137,33],[108,45,137,12],[108,49,137,47,"component"],[108,58,137,56],[108,59,137,57,"name"],[108,63,137,47],[108,68,137,66],[108,79,137,8],[108,81,137,79],[109,0,141,10,"console"],[109,12,141,10,"console"],[109,19,141,17],[109,20,141,18,"warn"],[109,24,141,10],[109,112,142,97,"name"],[109,116,141,10],[110,0,144,9],[111,0,145,7],[111,9,118,6],[111,15,145,13],[112,0,146,8],[112,16,146,14],[112,20,146,18,"Error"],[112,25,146,14],[112,94,147,76,"name"],[112,98,146,14],[112,283,146,8],[113,0,149,7],[114,0,150,5],[114,7,107,4],[115,0,151,3],[117,0,153,2],[117,11,153,9,"configs"],[117,18,153,2],[118,0,154,1],[118,3,60,0],[120,0,163,15],[120,11,163,24,"useNavigationBuilder"],[120,31,163,15],[120,32,169,2,"createRouter"],[120,44,163,15],[120,46,170,2,"options"],[120,53,163,15],[120,55,171,2],[121,0,172,2],[121,8,172,8,"navigatorKey"],[121,20,172,20],[121,23,172,23],[121,59,172,2],[122,0,174,2],[122,8,174,8,"route"],[122,13,174,13],[122,16,174,16,"React"],[122,21,174,21],[122,22,174,22,"useContext"],[122,32,174,16],[122,33,174,33,"NavigationRouteContext"],[122,64,174,16],[122,65,174,2],[123,0,178,2],[123,8,178,8,"previousRouteRef"],[123,24,178,24],[123,27,178,27,"React"],[123,32,178,32],[123,33,178,33,"useRef"],[123,39,178,27],[123,40,178,40,"route"],[123,45,178,27],[123,46,178,2],[124,0,180,2,"React"],[124,4,180,2,"React"],[124,9,180,7],[124,10,180,8,"useEffect"],[124,19,180,2],[124,20,180,18],[124,32,180,24],[125,0,181,4,"previousRouteRef"],[125,6,181,4,"previousRouteRef"],[125,22,181,20],[125,23,181,21,"current"],[125,30,181,4],[125,33,181,31,"route"],[125,38,181,4],[126,0,182,3],[126,5,180,2],[126,7,182,5],[126,8,182,6,"route"],[126,13,182,5],[126,14,180,2],[127,0,171,2],[127,8,184,10,"children"],[127,16,171,2],[127,19,184,32,"options"],[127,26,171,2],[127,27,184,10,"children"],[127,35,171,2],[128,0,171,2],[128,8,184,23,"rest"],[128,12,171,2],[128,54,184,32,"options"],[128,61,171,2],[130,0,171,2],[130,24,185,30,"React"],[130,29,185,35],[130,30,185,36,"useRef"],[130,36,185,30],[130,37,186,4,"createRouter"],[130,49,186,16],[130,68,187,11,"rest"],[130,72,186,16],[130,78,188,10],[130,79,188,10,"route"],[130,84,188,15],[130,92,188,10],[130,104,188,10,"route"],[130,109,188,15],[130,110,188,17,"params"],[130,116,188,10],[130,121,188,27],[130,128,188,34,"route"],[130,133,188,39],[130,134,188,40,"params"],[130,140,188,34],[130,141,188,47,"screen"],[130,147,188,27],[130,152,188,58],[130,160,188,10],[130,163,189,10],[131,0,189,12,"initialRouteName"],[131,6,189,12,"initialRouteName"],[131,22,189,28],[131,24,189,30,"route"],[131,29,189,35],[131,30,189,36,"params"],[131,36,189,30],[131,37,189,43,"screen"],[132,0,189,10],[132,5,188,10],[132,8,190,10],[132,12,186,16],[132,14,185,30],[132,15,171,2],[133,0,171,2],[133,8,185,19,"router"],[133,14,171,2],[133,31,185,10,"current"],[133,38,171,2],[135,0,194,2],[135,8,194,8,"routeConfigs"],[135,20,194,20],[135,23,194,23,"getRouteConfigsFromChildren"],[135,50,194,50],[135,51,198,4,"children"],[135,59,194,50],[135,60,194,2],[136,0,200,2],[136,8,200,8,"screens"],[136,15,200,15],[136,18,200,18,"routeConfigs"],[136,30,200,30],[136,31,200,31,"reduce"],[136,37,200,18],[136,38,205,4],[136,48,205,5,"acc"],[136,51,205,4],[136,53,205,10,"config"],[136,59,205,4],[136,61,205,21],[137,0,206,4],[137,10,206,8,"config"],[137,16,206,14],[137,17,206,15,"name"],[137,21,206,8],[137,25,206,23,"acc"],[137,28,206,4],[137,30,206,28],[138,0,207,6],[138,14,207,12],[138,18,207,16,"Error"],[138,23,207,12],[138,135,208,117,"config"],[138,141,208,123],[138,142,208,124,"name"],[138,146,207,12],[138,154,207,6],[139,0,210,5],[141,0,212,4,"acc"],[141,6,212,4,"acc"],[141,9,212,7],[141,10,212,8,"config"],[141,16,212,14],[141,17,212,15,"name"],[141,21,212,7],[141,22,212,4],[141,25,212,23,"config"],[141,31,212,4],[142,0,213,4],[142,13,213,11,"acc"],[142,16,213,4],[143,0,214,3],[143,5,200,18],[143,7,214,5],[143,9,200,18],[143,10,200,2],[144,0,216,2],[144,8,216,8,"routeNames"],[144,18,216,18],[144,21,216,21,"routeConfigs"],[144,33,216,33],[144,34,216,34,"map"],[144,37,216,21],[144,38,216,38],[144,48,216,39,"config"],[144,54,216,38],[145,0,216,38],[145,13,216,50,"config"],[145,19,216,56],[145,20,216,57,"name"],[145,24,216,38],[146,0,216,38],[146,5,216,21],[146,6,216,2],[147,0,217,2],[147,8,217,8,"routeParamList"],[147,22,217,22],[147,25,217,25,"routeNames"],[147,35,217,35],[147,36,217,36,"reduce"],[147,42,217,25],[147,43,218,4],[147,53,218,5,"acc"],[147,56,218,4],[147,58,218,10,"curr"],[147,62,218,4],[147,64,218,19],[148,0,218,19],[148,10,219,14,"initialParams"],[148,23,218,19],[148,26,219,32,"screens"],[148,33,219,39],[148,34,219,40,"curr"],[148,38,219,39],[148,39,218,19],[148,40,219,14,"initialParams"],[148,53,218,19],[149,0,220,6],[149,10,220,12,"initialParamsFromParams"],[149,33,220,35],[149,36,221,8],[149,37,221,8,"route"],[149,42,221,13],[149,50,221,8],[149,62,221,8,"route"],[149,67,221,13],[149,68,221,15,"params"],[149,74,221,8],[149,79,221,25,"route"],[149,84,221,30],[149,85,221,31,"params"],[149,91,221,25],[149,92,221,38,"screen"],[149,98,221,25],[149,103,221,49,"curr"],[149,107,221,8],[149,110,222,12,"route"],[149,115,222,17],[149,116,222,18,"params"],[149,122,222,12],[149,123,222,25,"params"],[149,129,221,8],[149,132,223,12,"undefined"],[149,141,220,6],[150,0,225,6,"acc"],[150,6,225,6,"acc"],[150,9,225,9],[150,10,225,10,"curr"],[150,14,225,9],[150,15,225,6],[150,18,226,8,"initialParams"],[150,31,226,21],[150,36,226,26,"undefined"],[150,45,226,8],[150,49,226,39,"initialParamsFromParams"],[150,72,226,62],[150,77,226,67,"undefined"],[150,86,226,8],[150,107,228,17,"initialParams"],[150,120,226,8],[150,126,229,17,"initialParamsFromParams"],[150,149,226,8],[150,153,231,12,"undefined"],[150,162,225,6],[151,0,233,6],[151,13,233,13,"acc"],[151,16,233,6],[152,0,234,5],[152,5,217,25],[152,7,235,4],[152,9,217,25],[152,10,217,2],[154,0,238,2],[154,8,238,6],[154,9,238,7,"routeNames"],[154,19,238,17],[154,20,238,18,"length"],[154,26,238,2],[154,28,238,26],[155,0,239,4],[155,12,239,10],[155,16,239,14,"Error"],[155,21,239,10],[155,22,240,6],[155,114,239,10],[155,115,239,4],[156,0,242,3],[158,0,244,2],[158,8,244,8,"isStateValid"],[158,20,244,20],[158,23,244,23,"React"],[158,28,244,28],[158,29,244,29,"useCallback"],[158,40,244,23],[158,41,245,4],[158,51,245,5,"state"],[158,56,245,4],[159,0,245,4],[159,13,245,15,"state"],[159,18,245,20],[159,19,245,21,"type"],[159,23,245,15],[159,28,245,30,"undefined"],[159,37,245,15],[159,41,245,43,"state"],[159,46,245,48],[159,47,245,49,"type"],[159,51,245,43],[159,56,245,58,"router"],[159,62,245,64],[159,63,245,65,"type"],[159,67,245,4],[160,0,245,4],[160,5,244,23],[160,7,246,4],[160,8,246,5,"router"],[160,14,246,11],[160,15,246,12,"type"],[160,19,246,4],[160,20,244,23],[160,21,244,2],[161,0,249,2],[161,8,249,8,"isStateInitialized"],[161,26,249,26],[161,29,249,29,"React"],[161,34,249,34],[161,35,249,35,"useCallback"],[161,46,249,29],[161,47,250,4],[161,57,250,5,"state"],[161,62,250,4],[162,0,250,4],[162,13,251,6,"state"],[162,18,251,11],[162,23,251,16,"undefined"],[162,32,251,6],[162,36,251,29,"state"],[162,41,251,34],[162,42,251,35,"stale"],[162,47,251,29],[162,52,251,45],[162,57,251,6],[162,61,251,54,"isStateValid"],[162,73,251,66],[162,74,251,67,"state"],[162,79,251,66],[162,80,250,4],[163,0,250,4],[163,5,249,29],[163,7,252,4],[163,8,252,5,"isStateValid"],[163,20,252,4],[163,21,249,29],[163,22,249,2],[165,0,171,2],[165,28,261,6,"React"],[165,33,261,11],[165,34,261,12,"useContext"],[165,44,261,6],[165,45,261,23,"NavigationStateContext"],[165,92,261,6],[165,93,171,2],[166,0,171,2],[166,8,256,11,"currentState"],[166,20,171,2],[166,41,256,4,"state"],[166,46,171,2],[167,0,171,2],[167,8,257,14,"getCurrentState"],[167,23,171,2],[167,44,257,4,"getState"],[167,52,171,2],[168,0,171,2],[168,8,258,4,"setState"],[168,16,171,2],[168,37,258,4,"setState"],[168,45,171,2],[169,0,171,2],[169,8,259,4,"setKey"],[169,14,171,2],[169,35,259,4,"setKey"],[169,41,171,2],[170,0,171,2],[170,8,260,4,"getKey"],[170,14,171,2],[170,35,260,4,"getKey"],[170,41,171,2],[172,0,263,2],[172,8,263,8,"previousStateRef"],[172,24,263,24],[172,27,263,27,"React"],[172,32,263,32],[172,33,263,33,"useRef"],[172,39,263,27],[172,41,263,2],[173,0,266,2],[173,8,266,8,"initializedStateRef"],[173,27,266,27],[173,30,266,30,"React"],[173,35,266,35],[173,36,266,36,"useRef"],[173,42,266,30],[173,44,266,2],[175,0,268,2],[175,8,269,4,"initializedStateRef"],[175,27,269,23],[175,28,269,24,"current"],[175,35,269,4],[175,40,269,36,"undefined"],[175,49,269,4],[175,53,270,4,"currentState"],[175,65,270,16],[175,70,270,21,"previousStateRef"],[175,86,270,37],[175,87,270,38,"current"],[175,94,268,2],[175,96,271,4],[176,0,276,4,"initializedStateRef"],[176,6,276,4,"initializedStateRef"],[176,25,276,23],[176,26,276,24,"current"],[176,33,276,4],[176,36,277,6,"currentState"],[176,48,277,18],[176,53,277,23,"undefined"],[176,62,277,6],[176,66,277,36],[176,67,277,37,"isStateValid"],[176,79,277,49],[176,80,277,50,"currentState"],[176,92,277,49],[176,93,277,6],[176,96,278,10,"router"],[176,102,278,16],[176,103,278,17,"getInitialState"],[176,118,278,10],[176,119,278,33],[177,0,279,12,"routeNames"],[177,8,279,12,"routeNames"],[177,18,279,22],[177,20,279,12,"routeNames"],[177,30,278,33],[178,0,280,12,"routeParamList"],[178,8,280,12,"routeParamList"],[178,22,280,26],[178,24,280,12,"routeParamList"],[179,0,278,33],[179,7,278,10],[179,8,277,6],[179,11,282,10,"router"],[179,17,282,16],[179,18,282,17,"getRehydratedState"],[179,36,282,10],[179,37,282,36,"currentState"],[179,49,282,10],[179,51,282,73],[180,0,283,12,"routeNames"],[180,8,283,12,"routeNames"],[180,18,283,22],[180,20,283,12,"routeNames"],[180,30,282,73],[181,0,284,12,"routeParamList"],[181,8,284,12,"routeParamList"],[181,22,284,26],[181,24,284,12,"routeParamList"],[182,0,282,73],[182,7,282,10],[182,8,276,4],[183,0,286,3],[185,0,288,2,"React"],[185,4,288,2,"React"],[185,9,288,7],[185,10,288,8,"useEffect"],[185,19,288,2],[185,20,288,18],[185,32,288,24],[186,0,289,4,"previousStateRef"],[186,6,289,4,"previousStateRef"],[186,22,289,20],[186,23,289,21,"current"],[186,30,289,4],[186,33,289,31,"currentState"],[186,45,289,4],[187,0,290,3],[187,5,288,2],[187,7,290,5],[187,8,290,6,"currentState"],[187,20,290,5],[187,21,288,2],[188,0,292,2],[188,8,292,6,"state"],[188,13,292,11],[188,16,296,4,"isStateInitialized"],[188,34,296,22],[188,35,296,23,"currentState"],[188,47,296,22],[188,48,296,4],[188,51,297,9,"currentState"],[188,63,296,4],[188,66,298,9,"initializedStateRef"],[188,85,298,28],[188,86,298,29,"current"],[188,93,292,2],[189,0,300,2],[189,8,300,6,"nextState"],[189,17,300,22],[189,20,300,25,"state"],[189,25,300,2],[191,0,302,2],[191,8,302,6],[191,9,302,7,"isArrayEqual"],[191,21,302,19],[191,22,302,20,"state"],[191,27,302,25],[191,28,302,26,"routeNames"],[191,38,302,19],[191,40,302,38,"routeNames"],[191,50,302,19],[191,51,302,2],[191,53,302,51],[192,0,304,4,"nextState"],[192,6,304,4,"nextState"],[192,15,304,13],[192,18,304,16,"router"],[192,24,304,22],[192,25,304,23,"getStateForRouteNamesChange"],[192,52,304,16],[192,53,304,51,"state"],[192,58,304,16],[192,60,304,58],[193,0,305,6,"routeNames"],[193,8,305,6,"routeNames"],[193,18,305,16],[193,20,305,6,"routeNames"],[193,30,304,58],[194,0,306,6,"routeParamList"],[194,8,306,6,"routeParamList"],[194,22,306,20],[194,24,306,6,"routeParamList"],[195,0,304,58],[195,7,304,16],[195,8,304,4],[196,0,308,3],[198,0,310,2],[198,8,311,4,"previousRouteRef"],[198,24,311,20],[198,25,311,21,"current"],[198,32,311,4],[198,36,312,4,"route"],[198,41,311,4],[198,45,313,4,"route"],[198,50,313,9],[198,51,313,10,"params"],[198,57,311,4],[198,61,314,4],[198,68,314,11,"route"],[198,73,314,16],[198,74,314,17,"params"],[198,80,314,11],[198,81,314,24,"screen"],[198,87,314,4],[198,92,314,35],[198,100,311,4],[198,104,315,4,"route"],[198,109,315,9],[198,110,315,10,"params"],[198,116,315,4],[198,121,315,21,"previousRouteRef"],[198,137,315,37],[198,138,315,38,"current"],[198,145,315,21],[198,146,315,46,"params"],[198,152,310,2],[198,154,316,4],[199,0,319,4],[199,10,319,10,"updatedState"],[199,22,319,22],[199,25,319,25,"router"],[199,31,319,31],[199,32,319,32,"getStateForAction"],[199,49,319,25],[199,50,320,6,"state"],[199,55,319,25],[199,57,321,6,"CommonActions"],[199,80,321,20,"navigate"],[199,88,321,6],[199,89,321,29,"route"],[199,94,321,34],[199,95,321,35,"params"],[199,101,321,29],[199,102,321,42,"screen"],[199,108,321,6],[199,110,321,50,"route"],[199,115,321,55],[199,116,321,56,"params"],[199,122,321,50],[199,123,321,63,"params"],[199,129,321,6],[199,130,319,25],[199,132,322,6],[200,0,323,8,"routeNames"],[200,8,323,8,"routeNames"],[200,18,323,18],[200,20,323,8,"routeNames"],[200,30,322,6],[201,0,324,8,"routeParamList"],[201,8,324,8,"routeParamList"],[201,22,324,22],[201,24,324,8,"routeParamList"],[202,0,322,6],[202,7,319,25],[202,8,319,4],[203,0,328,4,"nextState"],[203,6,328,4,"nextState"],[203,15,328,13],[203,18,329,6,"updatedState"],[203,30,329,18],[203,35,329,23],[203,39,329,6],[203,42,330,10,"router"],[203,48,330,16],[203,49,330,17,"getRehydratedState"],[203,67,330,10],[203,68,330,36,"updatedState"],[203,80,330,10],[203,82,330,50],[204,0,331,12,"routeNames"],[204,8,331,12,"routeNames"],[204,18,331,22],[204,20,331,12,"routeNames"],[204,30,330,50],[205,0,332,12,"routeParamList"],[205,8,332,12,"routeParamList"],[205,22,332,26],[205,24,332,12,"routeParamList"],[206,0,330,50],[206,7,330,10],[206,8,329,6],[206,11,334,10,"state"],[206,16,328,4],[207,0,335,3],[209,0,337,2],[209,8,337,8,"shouldUpdate"],[209,20,337,20],[209,23,337,23,"state"],[209,28,337,28],[209,33,337,33,"nextState"],[209,42,337,2],[210,0,339,2,"React"],[210,4,339,2,"React"],[210,9,339,7],[210,10,339,8,"useEffect"],[210,19,339,2],[210,20,339,18],[210,32,339,24],[211,0,340,4],[211,10,340,8,"shouldUpdate"],[211,22,340,4],[211,24,340,22],[212,0,342,6,"setState"],[212,8,342,6,"setState"],[212,16,342,14],[212,17,342,15,"nextState"],[212,26,342,14],[212,27,342,6],[213,0,343,5],[214,0,344,3],[214,5,339,2],[214,7,344,5],[214,8,344,6,"nextState"],[214,17,344,5],[214,19,344,17,"setState"],[214,27,344,5],[214,29,344,27,"shouldUpdate"],[214,41,344,5],[214,42,339,2],[215,0,349,2,"state"],[215,4,349,2,"state"],[215,9,349,7],[215,12,349,10,"nextState"],[215,21,349,2],[216,0,351,2,"React"],[216,4,351,2,"React"],[216,9,351,7],[216,10,351,8,"useEffect"],[216,19,351,2],[216,20,351,18],[216,32,351,24],[217,0,352,4,"setKey"],[217,6,352,4,"setKey"],[217,12,352,10],[217,13,352,11,"navigatorKey"],[217,25,352,10],[217,26,352,4],[218,0,354,4],[218,13,354,11],[218,25,354,17],[219,0,356,6],[219,12,356,10,"getCurrentState"],[219,27,356,25],[219,34,356,32,"undefined"],[219,43,356,10],[219,47,356,45,"getKey"],[219,53,356,51],[219,60,356,58,"navigatorKey"],[219,72,356,6],[219,74,356,72],[220,0,357,8,"setState"],[220,10,357,8,"setState"],[220,18,357,16],[220,19,357,17,"undefined"],[220,28,357,16],[220,29,357,8],[221,0,358,7],[222,0,359,5],[222,7,354,4],[223,0,361,3],[223,5,351,2],[223,7,361,5],[223,9,351,2],[224,0,363,2],[224,8,363,8,"getState"],[224,16,363,16],[224,19,363,19,"React"],[224,24,363,24],[224,25,363,25,"useCallback"],[224,36,363,19],[224,37,363,37],[224,49,363,50],[225,0,364,4],[225,10,364,10,"currentState"],[225,22,364,22],[225,25,364,25,"getCurrentState"],[225,40,364,40],[225,42,364,4],[226,0,366,4],[226,13,366,11,"isStateInitialized"],[226,31,366,29],[226,32,366,30,"currentState"],[226,44,366,29],[226,45,366,11],[226,48,367,9,"currentState"],[226,60,366,11],[226,63,368,9,"initializedStateRef"],[226,82,368,28],[226,83,368,29,"current"],[226,90,366,4],[227,0,369,3],[227,5,363,19],[227,7,369,5],[227,8,369,6,"getCurrentState"],[227,23,369,5],[227,25,369,23,"isStateInitialized"],[227,43,369,5],[227,44,363,19],[227,45,363,2],[228,0,371,2],[228,8,371,8,"emitter"],[228,15,371,15],[228,18,371,18],[228,48,371,34],[228,58,371,35,"e"],[228,59,371,34],[228,61,371,41],[229,0,371,41],[231,0,372,4],[231,10,372,8,"routeNames"],[231,20,372,18],[231,23,372,21],[231,25,372,4],[232,0,374,4],[232,10,374,8,"route"],[232,15,374,4],[234,0,376,4],[234,10,376,8,"e"],[234,11,376,9],[234,12,376,10,"target"],[234,18,376,4],[234,20,376,18],[235,0,376,18],[237,0,377,6,"route"],[237,8,377,6,"route"],[237,13,377,11],[237,16,377,14,"state"],[237,21,377,19],[237,22,377,20,"routes"],[237,28,377,14],[237,29,377,27,"find"],[237,33,377,14],[237,34,377,32],[237,44,377,33,"route"],[237,49,377,32],[238,0,377,32],[238,17,377,43,"route"],[238,22,377,48],[238,23,377,49,"key"],[238,26,377,43],[238,31,377,57,"e"],[238,32,377,58],[238,33,377,59,"target"],[238,39,377,32],[239,0,377,32],[239,9,377,14],[239,10,377,6],[241,0,379,6],[241,22,379,10,"route"],[241,27,379,6],[241,48,379,10],[241,55,379,17,"name"],[241,59,379,6],[241,61,379,23],[242,0,380,8,"routeNames"],[242,10,380,8,"routeNames"],[242,20,380,18],[242,21,380,19,"push"],[242,25,380,8],[242,26,380,24,"route"],[242,31,380,29],[242,32,380,30,"name"],[242,36,380,8],[243,0,381,7],[244,0,382,5],[244,7,376,4],[244,13,382,11],[245,0,383,6,"route"],[245,8,383,6,"route"],[245,13,383,11],[245,16,383,14,"state"],[245,21,383,19],[245,22,383,20,"routes"],[245,28,383,14],[245,29,383,27,"state"],[245,34,383,32],[245,35,383,33,"index"],[245,40,383,14],[245,41,383,6],[246,0,384,6,"routeNames"],[246,8,384,6,"routeNames"],[246,18,384,16],[246,19,384,17,"push"],[246,23,384,6],[246,30,384,6,"routeNames"],[246,40,384,16],[246,75,385,11,"Object"],[246,81,385,17],[246,82,385,18,"keys"],[246,86,385,11],[246,87,385,23,"screens"],[246,94,385,11],[246,96,385,32,"filter"],[246,102,385,11],[246,103,385,39],[246,113,385,40,"name"],[246,117,385,39],[247,0,385,39],[249,0,385,39],[249,17,385,49],[249,29,385,49,"route"],[249,34,385,54],[249,43,385,49],[249,63,385,56,"name"],[249,67,385,49],[249,73,385,65,"name"],[249,77,385,39],[250,0,385,39],[250,9,385,11],[250,10,384,16],[250,12,384,6],[251,0,387,5],[253,0,389,4],[253,10,389,8,"route"],[253,15,389,13],[253,19,389,17],[253,23,389,4],[253,25,389,23],[254,0,390,6],[255,0,391,5],[257,0,393,4],[257,10,393,10,"navigation"],[257,20,393,20],[257,23,393,23,"descriptors"],[257,34,393,34],[257,35,393,35,"route"],[257,40,393,40],[257,41,393,41,"key"],[257,44,393,34],[257,45,393,23],[257,46,393,46,"navigation"],[257,56,393,4],[259,0,395,4],[259,10,395,10,"listeners"],[259,19,395,19],[259,22,395,22],[259,31,395,23],[259,33,395,22],[259,35,396,7,"concat"],[259,41,395,22],[259,88,397,11,"routeNames"],[259,98,397,21],[259,99,397,22,"map"],[259,102,397,11],[259,103,397,26],[259,113,397,27,"name"],[259,117,397,26],[259,119,397,36],[260,0,397,36],[260,12,398,18,"listeners"],[260,21,397,36],[260,24,398,32,"screens"],[260,31,398,39],[260,32,398,40,"name"],[260,36,398,39],[260,37,397,36],[260,38,398,18,"listeners"],[260,47,397,36],[261,0,399,10],[261,12,399,16,"map"],[261,15,399,19],[261,18,400,12],[261,25,400,19,"listeners"],[261,34,400,12],[261,39,400,33],[261,49,400,12],[261,52,401,16,"listeners"],[261,61,401,25],[261,62,401,26],[262,0,401,28,"route"],[262,10,401,28,"route"],[262,15,401,33],[262,17,401,35,"route"],[262,22,401,26],[263,0,401,49,"navigation"],[263,10,401,49,"navigation"],[263,20,401,59],[263,22,401,49,"navigation"],[264,0,401,26],[264,9,401,25],[264,10,400,12],[264,13,402,16,"listeners"],[264,22,399,10],[265,0,404,10],[265,15,404,17,"map"],[265,18,404,20],[265,21,405,14,"Object"],[265,27,405,20],[265,28,405,21,"keys"],[265,32,405,14],[265,33,405,26,"map"],[265,36,405,14],[265,38,406,17,"filter"],[265,44,405,14],[265,45,406,24],[265,55,406,25,"type"],[265,59,406,24],[266,0,406,24],[266,17,406,34,"type"],[266,21,406,38],[266,26,406,43,"e"],[266,27,406,44],[266,28,406,45,"type"],[266,32,406,24],[267,0,406,24],[267,9,405,14],[267,11,407,17,"map"],[267,14,405,14],[267,15,407,21],[267,25,407,22,"type"],[267,29,407,21],[268,0,407,21],[268,17,407,31,"map"],[268,20,407,21],[268,40,407,31,"map"],[268,43,407,34],[268,44,407,37,"type"],[268,48,407,34],[268,49,407,21],[269,0,407,21],[269,9,405,14],[269,10,404,20],[269,13,408,14,"undefined"],[269,22,404,10],[270,0,409,9],[270,7,397,11],[270,8,395,22],[270,11,411,7,"filter"],[270,17,395,22],[270,18,411,14],[270,28,411,15,"cb"],[270,30,411,14],[270,32,411,19,"i"],[270,33,411,14],[270,35,411,22,"self"],[270,39,411,14],[271,0,411,14],[271,15,411,31,"cb"],[271,17,411,33],[271,21,411,37,"self"],[271,25,411,41],[271,26,411,42,"lastIndexOf"],[271,37,411,37],[271,38,411,54,"cb"],[271,40,411,37],[271,46,411,62,"i"],[271,47,411,14],[272,0,411,14],[272,7,395,22],[272,8,395,4],[274,0,413,4,"listeners"],[274,6,413,4,"listeners"],[274,15,413,13],[274,16,413,14,"forEach"],[274,23,413,4],[274,24,413,22],[274,34,413,23,"listener"],[274,42,413,22],[275,0,413,22],[275,15,413,36,"listener"],[275,23,413,22],[275,43,413,36,"listener"],[275,51,413,44],[275,52,413,47,"e"],[275,53,413,44],[275,54,413,22],[276,0,413,22],[276,7,413,4],[277,0,414,3],[277,5,371,18],[277,6,371,2],[278,0,416,2],[278,33,416,17],[279,0,416,19,"state"],[279,6,416,19,"state"],[279,11,416,24],[279,13,416,19,"state"],[279,18,416,17],[280,0,416,26,"emitter"],[280,6,416,26,"emitter"],[280,13,416,33],[280,15,416,26,"emitter"],[281,0,416,17],[281,5,416,2],[282,0,418,2,"React"],[282,4,418,2,"React"],[282,9,418,7],[282,10,418,8,"useEffect"],[282,19,418,2],[282,20,418,18],[282,32,418,24],[283,0,419,4,"emitter"],[283,6,419,4,"emitter"],[283,13,419,11],[283,14,419,12,"emit"],[283,18,419,4],[283,19,419,17],[284,0,419,19,"type"],[284,8,419,19,"type"],[284,12,419,23],[284,14,419,25],[284,21,419,17],[285,0,419,34,"data"],[285,8,419,34,"data"],[285,12,419,38],[285,14,419,40],[286,0,419,42,"state"],[286,10,419,42,"state"],[286,15,419,47],[286,17,419,42,"state"],[287,0,419,40],[288,0,419,17],[288,7,419,4],[289,0,420,3],[289,5,418,2],[289,7,420,5],[289,8,420,6,"emitter"],[289,15,420,5],[289,17,420,15,"state"],[289,22,420,5],[289,23,418,2],[291,0,171,2],[291,32,425,6],[291,71,171,2],[292,0,171,2],[292,8,423,15,"actionListeners"],[292,23,171,2],[292,48,423,4,"listeners"],[292,57,171,2],[293,0,171,2],[293,8,424,17,"addActionListener"],[293,25,171,2],[293,50,424,4,"addListener"],[293,61,171,2],[295,0,171,2],[295,31,430,6],[295,67,171,2],[296,0,171,2],[296,8,428,15,"focusedListeners"],[296,24,171,2],[296,48,428,4,"listeners"],[296,57,171,2],[297,0,171,2],[297,8,429,17,"addFocusedListener"],[297,26,171,2],[297,50,429,4,"addListener"],[297,61,171,2],[299,0,171,2],[299,27,432,47],[299,59,171,2],[300,0,171,2],[300,8,432,10,"getStateForRoute"],[300,24,171,2],[300,44,432,10,"getStateForRoute"],[300,60,171,2],[301,0,171,2],[301,8,432,28,"addStateGetter"],[301,22,171,2],[301,42,432,28,"addStateGetter"],[301,56,171,2],[303,0,434,2],[303,8,434,8,"onAction"],[303,16,434,16],[303,19,434,19],[303,45,434,31],[304,0,435,4,"router"],[304,6,435,4,"router"],[304,12,435,10],[304,14,435,4,"router"],[304,20,434,31],[305,0,436,4,"getState"],[305,6,436,4,"getState"],[305,14,436,12],[305,16,436,4,"getState"],[305,24,434,31],[306,0,437,4,"setState"],[306,6,437,4,"setState"],[306,14,437,12],[306,16,437,4,"setState"],[306,24,434,31],[307,0,438,4,"key"],[307,6,438,4,"key"],[307,9,438,7],[307,11,438,9,"route"],[307,16,438,7],[307,36,438,9,"route"],[307,41,438,14],[307,42,438,16,"key"],[307,45,434,31],[308,0,439,4,"listeners"],[308,6,439,4,"listeners"],[308,15,439,13],[308,17,439,15,"actionListeners"],[308,32,434,31],[309,0,440,4,"routerConfigOptions"],[309,6,440,4,"routerConfigOptions"],[309,25,440,23],[309,27,440,25],[310,0,441,6,"routeNames"],[310,8,441,6,"routeNames"],[310,18,441,16],[310,20,441,6,"routeNames"],[310,30,440,25],[311,0,442,6,"routeParamList"],[311,8,442,6,"routeParamList"],[311,22,442,20],[311,24,442,6,"routeParamList"],[312,0,440,25],[313,0,434,31],[313,5,434,19],[313,6,434,2],[314,0,446,2],[314,8,446,8,"onRouteFocus"],[314,20,446,20],[314,23,446,23],[314,53,446,39],[315,0,447,4,"router"],[315,6,447,4,"router"],[315,12,447,10],[315,14,447,4,"router"],[315,20,446,39],[316,0,448,4,"key"],[316,6,448,4,"key"],[316,9,448,7],[316,11,448,9,"route"],[316,16,448,7],[316,36,448,9,"route"],[316,41,448,14],[316,42,448,16,"key"],[316,45,446,39],[317,0,449,4,"getState"],[317,6,449,4,"getState"],[317,14,449,12],[317,16,449,4,"getState"],[317,24,446,39],[318,0,450,4,"setState"],[318,6,450,4,"setState"],[318,14,450,12],[318,16,450,4,"setState"],[319,0,446,39],[319,5,446,23],[319,6,446,2],[320,0,453,2],[320,8,453,8,"navigation"],[320,18,453,18],[320,21,453,21],[320,56,453,77],[321,0,454,4,"onAction"],[321,6,454,4,"onAction"],[321,14,454,12],[321,16,454,4,"onAction"],[321,24,453,77],[322,0,455,4,"getState"],[322,6,455,4,"getState"],[322,14,455,12],[322,16,455,4,"getState"],[322,24,453,77],[323,0,456,4,"emitter"],[323,6,456,4,"emitter"],[323,13,456,11],[323,15,456,4,"emitter"],[323,22,453,77],[324,0,457,4,"router"],[324,6,457,4,"router"],[324,12,457,10],[324,14,457,4,"router"],[325,0,453,77],[325,5,453,21],[325,6,453,2],[326,0,460,2],[326,53,460,37],[327,0,461,4,"navigation"],[327,6,461,4,"navigation"],[327,16,461,14],[327,18,461,4,"navigation"],[327,28,460,37],[328,0,462,4,"focusedListeners"],[328,6,462,4,"focusedListeners"],[328,22,462,20],[328,24,462,4,"focusedListeners"],[329,0,460,37],[329,5,460,2],[330,0,465,2],[330,32,465,16],[331,0,466,4,"getState"],[331,6,466,4,"getState"],[331,14,466,12],[331,16,466,4,"getState"],[331,24,465,16],[332,0,467,4,"getStateForRoute"],[332,6,467,4,"getStateForRoute"],[332,22,467,20],[332,24,467,4,"getStateForRoute"],[333,0,465,16],[333,5,465,2],[334,0,470,2],[334,8,470,8,"descriptors"],[334,19,470,19],[334,22,470,22],[334,51,470,69],[335,0,471,4,"state"],[335,6,471,4,"state"],[335,11,471,9],[335,13,471,4,"state"],[335,18,470,69],[336,0,472,4,"screens"],[336,6,472,4,"screens"],[336,13,472,11],[336,15,472,4,"screens"],[336,22,470,69],[337,0,473,4,"navigation"],[337,6,473,4,"navigation"],[337,16,473,14],[337,18,473,4,"navigation"],[337,28,470,69],[338,0,474,4,"screenOptions"],[338,6,474,4,"screenOptions"],[338,19,474,17],[338,21,474,19,"options"],[338,28,474,26],[338,29,474,27,"screenOptions"],[338,42,470,69],[339,0,475,4,"onAction"],[339,6,475,4,"onAction"],[339,14,475,12],[339,16,475,4,"onAction"],[339,24,470,69],[340,0,476,4,"getState"],[340,6,476,4,"getState"],[340,14,476,12],[340,16,476,4,"getState"],[340,24,470,69],[341,0,477,4,"setState"],[341,6,477,4,"setState"],[341,14,477,12],[341,16,477,4,"setState"],[341,24,470,69],[342,0,478,4,"onRouteFocus"],[342,6,478,4,"onRouteFocus"],[342,18,478,16],[342,20,478,4,"onRouteFocus"],[342,32,470,69],[343,0,479,4,"addActionListener"],[343,6,479,4,"addActionListener"],[343,23,479,21],[343,25,479,4,"addActionListener"],[343,42,470,69],[344,0,480,4,"addFocusedListener"],[344,6,480,4,"addFocusedListener"],[344,24,480,22],[344,26,480,4,"addFocusedListener"],[344,44,470,69],[345,0,481,4,"addStateGetter"],[345,6,481,4,"addStateGetter"],[345,20,481,18],[345,22,481,4,"addStateGetter"],[345,36,470,69],[346,0,482,4,"router"],[346,6,482,4,"router"],[346,12,482,10],[346,14,482,4,"router"],[346,20,470,69],[347,0,483,4,"emitter"],[347,6,483,4,"emitter"],[347,13,483,11],[347,15,483,4,"emitter"],[348,0,470,69],[348,5,470,22],[348,6,470,2],[349,0,486,2],[349,11,486,9],[350,0,487,4,"state"],[350,6,487,4,"state"],[350,11,487,9],[350,13,487,4,"state"],[350,18,486,9],[351,0,488,4,"navigation"],[351,6,488,4,"navigation"],[351,16,488,14],[351,18,488,4,"navigation"],[351,28,486,9],[352,0,489,4,"descriptors"],[352,6,489,4,"descriptors"],[352,17,489,15],[352,19,489,4,"descriptors"],[353,0,486,9],[353,5,486,2],[354,0,491,1]],"functionMap":{"names":["<global>","isArrayEqual","a.every$argument_0","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","React.useEffect$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","React.useCallback$argument_0","<anonymous>","useEventEmitter$argument_0","state.routes.find$argument_0","Object.keys.filter$argument_0","routeNames.map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0"],"mappings":"AAA;qBCmD;mCCC,8BD,CD;oCGO;ICS;GDmC;oBEG;KF2C;CHI;eMS;kBCiB;GDE;IEuB;GFS;sCGE,uBH;IIE;KJgB;IKW,iEL;IKK;yELC;kBCqC;GDE;kBCiD;GDK;kBCO;WKG;KLK;GDE;qCKE;GLM;kCOE;gCCM,iCD;uCEQ,8BF;0BGY;wBDS,yBC;qBCC,qBD;SHE;cKE,iDL;sBME,2BN;GPC;kBCI;GDE;CNuE"}},"type":"js/module"}]}