{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"shortid","data":{"isAsync":false}},{"name":"./TabRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerRouter;\n  exports.DrawerActions = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _shortid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"shortid\"));\n\n  var _TabRouter = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"./TabRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DrawerActions = _objectSpread({}, _TabRouter.TabActions, {\n    openDrawer: function openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer: function closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer: function toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n\n  exports.DrawerActions = DrawerActions;\n\n  var isDrawerOpen = function isDrawerOpen(state) {\n    var _state$history;\n\n    return Boolean((_state$history = state.history) == null ? void 0 : _state$history.find(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n\n  var openDrawer = function openDrawer(state) {\n    if (isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread({}, state, {\n      history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n        type: 'drawer'\n      }])\n    });\n  };\n\n  var closeDrawer = function closeDrawer(state) {\n    if (!isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread({}, state, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n\n  function DrawerRouter(options) {\n    var router = (0, _TabRouter.default)(options);\n    return _objectSpread({}, router, {\n      type: 'drawer',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n            routeParamList = _ref.routeParamList;\n        var state = router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n        return _objectSpread({}, state, {\n          stale: false,\n          type: 'drawer',\n          key: \"drawer-\" + (0, _shortid.default)()\n        });\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n\n        if (partialState.stale === false) {\n          return partialState;\n        }\n\n        var state = router.getRehydratedState(partialState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n\n        if (isDrawerOpen(partialState)) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread({}, state, {\n          type: 'drawer',\n          key: \"drawer-\" + (0, _shortid.default)()\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var result = router.getStateForRouteFocus(state, key);\n        return closeDrawer(result);\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n\n          case 'TOGGLE_DRAWER':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return openDrawer(state);\n\n          case 'GO_BACK':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return router.getStateForAction(state, action, options);\n\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":148,"map":[[16,0,1,0],[18,0,8,0],[24,0,59,7],[24,6,59,13,"DrawerActions"],[24,19,59,26],[24,40,60,5,"TabActions"],[24,61,59,26],[25,0,61,2,"openDrawer"],[25,4,61,2,"openDrawer"],[25,14,59,26],[25,38,61,33],[26,0,62,4],[26,13,62,11],[27,0,62,13,"type"],[27,8,62,13,"type"],[27,12,62,17],[27,14,62,19],[28,0,62,11],[28,7,62,4],[29,0,63,3],[29,5,59,26],[30,0,64,2,"closeDrawer"],[30,4,64,2,"closeDrawer"],[30,15,59,26],[30,40,64,34],[31,0,65,4],[31,13,65,11],[32,0,65,13,"type"],[32,8,65,13,"type"],[32,12,65,17],[32,14,65,19],[33,0,65,11],[33,7,65,4],[34,0,66,3],[34,5,59,26],[35,0,67,2,"toggleDrawer"],[35,4,67,2,"toggleDrawer"],[35,16,59,26],[35,42,67,35],[36,0,68,4],[36,13,68,11],[37,0,68,13,"type"],[37,8,68,13,"type"],[37,12,68,17],[37,14,68,19],[38,0,68,11],[38,7,68,4],[39,0,69,3],[40,0,59,26],[40,4,59,7],[44,0,72,0],[44,6,72,6,"isDrawerOpen"],[44,18,72,18],[44,21,72,21],[44,30,72,6,"isDrawerOpen"],[44,42,72,21],[44,43,73,2,"state"],[44,48,72,21],[45,0,72,21],[47,0,72,21],[47,11,74,5,"Boolean"],[47,18,74,12],[47,37,74,13,"state"],[47,42,74,18],[47,43,74,19,"history"],[47,50,74,12],[47,71,74,13],[47,86,74,28,"find"],[47,90,74,13],[47,91,74,33],[47,101,74,33,"it"],[47,103,74,35],[48,0,74,35],[48,13,74,39,"it"],[48,15,74,41],[48,16,74,42,"type"],[48,20,74,39],[48,25,74,51],[48,33,74,35],[49,0,74,35],[49,5,74,13],[49,6,74,12],[49,7,72,21],[50,0,72,21],[50,3,72,0],[52,0,76,0],[52,6,76,6,"openDrawer"],[52,16,76,16],[52,19,76,19],[52,28,76,6,"openDrawer"],[52,38,76,19],[52,39,76,20,"state"],[52,44,76,19],[52,46,76,76],[53,0,77,2],[53,8,77,6,"isDrawerOpen"],[53,20,77,18],[53,21,77,19,"state"],[53,26,77,18],[53,27,77,2],[53,29,77,27],[54,0,78,4],[54,13,78,11,"state"],[54,18,78,4],[55,0,79,3],[57,0,81,2],[57,29,82,7,"state"],[57,34,81,2],[58,0,83,4,"history"],[58,6,83,4,"history"],[58,13,83,11],[58,58,83,17,"state"],[58,63,83,22],[58,64,83,23,"history"],[58,71,83,11],[58,75,83,32],[59,0,83,34,"type"],[59,8,83,34,"type"],[59,12,83,38],[59,14,83,40],[60,0,83,32],[60,7,83,11],[61,0,81,2],[62,0,85,1],[62,3,76,0],[64,0,87,0],[64,6,87,6,"closeDrawer"],[64,17,87,17],[64,20,87,20],[64,29,87,6,"closeDrawer"],[64,40,87,20],[64,41,87,21,"state"],[64,46,87,20],[64,48,87,77],[65,0,88,2],[65,8,88,6],[65,9,88,7,"isDrawerOpen"],[65,21,88,19],[65,22,88,20,"state"],[65,27,88,19],[65,28,88,2],[65,30,88,28],[66,0,89,4],[66,13,89,11,"state"],[66,18,89,4],[67,0,90,3],[69,0,92,2],[69,29,93,7,"state"],[69,34,92,2],[70,0,94,4,"history"],[70,6,94,4,"history"],[70,13,94,11],[70,15,94,13,"state"],[70,20,94,18],[70,21,94,19,"history"],[70,28,94,13],[70,29,94,27,"filter"],[70,35,94,13],[70,36,94,34],[70,46,94,34,"it"],[70,48,94,36],[71,0,94,36],[71,15,94,40,"it"],[71,17,94,42],[71,18,94,43,"type"],[71,22,94,40],[71,27,94,52],[71,35,94,36],[72,0,94,36],[72,7,94,13],[73,0,92,2],[74,0,96,1],[74,3,87,0],[76,0,98,15],[76,11,98,24,"DrawerRouter"],[76,23,98,15],[76,24,99,2,"options"],[76,31,98,15],[76,33,100,76],[77,0,101,2],[77,8,101,8,"router"],[77,14,101,14],[77,17,101,18],[77,41,101,28,"options"],[77,48,101,18],[77,49,101,2],[78,0,106,2],[78,29,107,7,"router"],[78,35,106,2],[79,0,109,4,"type"],[79,6,109,4,"type"],[79,10,109,8],[79,12,109,10],[79,20,106,2],[80,0,111,4,"getInitialState"],[80,6,111,4,"getInitialState"],[80,21,106,2],[80,54,111,52],[81,0,111,52],[81,12,111,22,"routeNames"],[81,22,111,52],[81,30,111,22,"routeNames"],[81,40,111,52],[82,0,111,52],[82,12,111,34,"routeParamList"],[82,26,111,52],[82,34,111,34,"routeParamList"],[82,48,111,52],[83,0,112,6],[83,12,112,12,"state"],[83,17,112,17],[83,20,112,20,"router"],[83,26,112,26],[83,27,112,27,"getInitialState"],[83,42,112,20],[83,43,112,43],[84,0,112,45,"routeNames"],[84,10,112,45,"routeNames"],[84,20,112,55],[84,22,112,45,"routeNames"],[84,32,112,43],[85,0,112,57,"routeParamList"],[85,10,112,57,"routeParamList"],[85,24,112,71],[85,26,112,57,"routeParamList"],[86,0,112,43],[86,9,112,20],[86,10,112,6],[87,0,114,6],[87,33,115,11,"state"],[87,38,114,6],[88,0,116,8,"stale"],[88,10,116,8,"stale"],[88,15,116,13],[88,17,116,15],[88,22,114,6],[89,0,117,8,"type"],[89,10,117,8,"type"],[89,14,117,12],[89,16,117,14],[89,24,114,6],[90,0,118,8,"key"],[90,10,118,8,"key"],[90,13,118,11],[90,27,118,23],[91,0,114,6],[92,0,120,5],[92,7,106,2],[93,0,122,4,"getRehydratedState"],[93,6,122,4,"getRehydratedState"],[93,24,106,2],[93,54,122,23,"partialState"],[93,66,106,2],[93,75,122,69],[94,0,122,69],[94,12,122,39,"routeNames"],[94,22,122,69],[94,31,122,39,"routeNames"],[94,41,122,69],[95,0,122,69],[95,12,122,51,"routeParamList"],[95,26,122,69],[95,35,122,51,"routeParamList"],[95,49,122,69],[97,0,123,6],[97,12,123,10,"partialState"],[97,24,123,22],[97,25,123,23,"stale"],[97,30,123,10],[97,35,123,33],[97,40,123,6],[97,42,123,40],[98,0,124,8],[98,17,124,15,"partialState"],[98,29,124,8],[99,0,125,7],[101,0,127,6],[101,12,127,10,"state"],[101,17,127,15],[101,20,127,18,"router"],[101,26,127,24],[101,27,127,25,"getRehydratedState"],[101,45,127,18],[101,46,127,44,"partialState"],[101,58,127,18],[101,60,127,58],[102,0,128,8,"routeNames"],[102,10,128,8,"routeNames"],[102,20,128,18],[102,22,128,8,"routeNames"],[102,32,127,58],[103,0,129,8,"routeParamList"],[103,10,129,8,"routeParamList"],[103,24,129,22],[103,26,129,8,"routeParamList"],[104,0,127,58],[104,9,127,18],[104,10,127,6],[106,0,132,6],[106,12,132,10,"isDrawerOpen"],[106,24,132,22],[106,25,132,23,"partialState"],[106,37,132,22],[106,38,132,6],[106,40,132,38],[107,0,133,8,"state"],[107,10,133,8,"state"],[107,15,133,13],[107,18,133,16,"openDrawer"],[107,28,133,26],[107,29,133,27,"state"],[107,34,133,26],[107,35,133,8],[108,0,134,7],[110,0,136,6],[110,33,137,11,"state"],[110,38,136,6],[111,0,138,8,"type"],[111,10,138,8,"type"],[111,14,138,12],[111,16,138,14],[111,24,136,6],[112,0,139,8,"key"],[112,10,139,8,"key"],[112,13,139,11],[112,27,139,23],[113,0,136,6],[114,0,141,5],[114,7,106,2],[115,0,143,4,"getStateForRouteFocus"],[115,6,143,4,"getStateForRouteFocus"],[115,27,106,2],[115,60,143,26,"state"],[115,65,106,2],[115,67,143,33,"key"],[115,70,106,2],[115,72,143,38],[116,0,144,6],[116,12,144,12,"result"],[116,18,144,18],[116,21,144,21,"router"],[116,27,144,27],[116,28,144,28,"getStateForRouteFocus"],[116,49,144,21],[116,50,144,50,"state"],[116,55,144,21],[116,57,144,57,"key"],[116,60,144,21],[116,61,144,6],[117,0,146,6],[117,15,146,13,"closeDrawer"],[117,26,146,24],[117,27,146,25,"result"],[117,33,146,24],[117,34,146,6],[118,0,147,5],[118,7,106,2],[119,0,149,4,"getStateForAction"],[119,6,149,4,"getStateForAction"],[119,23,106,2],[119,52,149,22,"state"],[119,57,106,2],[119,59,149,29,"action"],[119,65,106,2],[119,67,149,37,"options"],[119,74,106,2],[119,76,149,46],[120,0,150,6],[120,16,150,14,"action"],[120,22,150,20],[120,23,150,21,"type"],[120,27,150,6],[121,0,151,8],[121,15,151,13],[121,28,151,8],[122,0,152,10],[122,19,152,17,"openDrawer"],[122,29,152,27],[122,30,152,28,"state"],[122,35,152,27],[122,36,152,10],[124,0,154,8],[124,15,154,13],[124,29,154,8],[125,0,155,10],[125,19,155,17,"closeDrawer"],[125,30,155,28],[125,31,155,29,"state"],[125,36,155,28],[125,37,155,10],[127,0,157,8],[127,15,157,13],[127,30,157,8],[128,0,158,10],[128,16,158,14,"isDrawerOpen"],[128,28,158,26],[128,29,158,27,"state"],[128,34,158,26],[128,35,158,10],[128,37,158,35],[129,0,159,12],[129,21,159,19,"closeDrawer"],[129,32,159,30],[129,33,159,31,"state"],[129,38,159,30],[129,39,159,12],[130,0,160,11],[132,0,162,10],[132,19,162,17,"openDrawer"],[132,29,162,27],[132,30,162,28,"state"],[132,35,162,27],[132,36,162,10],[134,0,164,8],[134,15,164,13],[134,24,164,8],[135,0,165,10],[135,16,165,14,"isDrawerOpen"],[135,28,165,26],[135,29,165,27,"state"],[135,34,165,26],[135,35,165,10],[135,37,165,35],[136,0,166,12],[136,21,166,19,"closeDrawer"],[136,32,166,30],[136,33,166,31,"state"],[136,38,166,30],[136,39,166,12],[137,0,167,11],[139,0,169,10],[139,19,169,17,"router"],[139,25,169,23],[139,26,169,24,"getStateForAction"],[139,43,169,17],[139,44,169,42,"state"],[139,49,169,17],[139,51,169,49,"action"],[139,57,169,17],[139,59,169,57,"options"],[139,66,169,17],[139,67,169,10],[141,0,171,8],[142,0,172,10],[142,19,172,17,"router"],[142,25,172,23],[142,26,172,24,"getStateForAction"],[142,43,172,17],[142,44,172,42,"state"],[142,49,172,17],[142,51,172,49,"action"],[142,57,172,17],[142,59,172,57,"options"],[142,66,172,17],[142,67,172,10],[143,0,150,6],[144,0,174,5],[144,7,106,2],[145,0,176,4,"actionCreators"],[145,6,176,4,"actionCreators"],[145,20,176,18],[145,22,176,20,"DrawerActions"],[146,0,106,2],[147,0,178,1]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","isDrawerOpen","<anonymous>","openDrawer","closeDrawer","state.history.filter$argument_0","DrawerRouter","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;EC4D;GDE;EEC;GFE;EGC;GHE;qBIG;iCCE,0BD,EJ;mBME;CNS;oBOE;kCCO,0BD;CPE;eSE;ICa;KDS;IEE;KFmB;IGE;KHI;IIE;KJyB;CTI"}},"type":"js/module"}]}